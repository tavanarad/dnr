{"version":3,"sources":["features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSchema/lightbar-shema-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/color-schema-list.js","features/LightbarSelector/index.js","app/utils.js","features/Lightbar/ligther-slice.js","features/MatrixLCD/Fonts/5x7-font.js","features/MatrixLCD/utils.js","features/ScrollingBoard/helpers.js","features/ScrollingBoard/scrolling-board-slice.js","app/header.js","features/LightbarPreview/index.js","features/LightbarPreview/live-preview.js","features/Lightbar/LightbarSetting/schema-color-picker.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","features/MatrixLCD/index.js","features/ScrollingBoard/font-toolbar.js","features/ScrollingBoard/index.js","features/Platforms/index.js","features/LightbarSchema/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["LIGHTBARS","model","front","rear","this","slice","createSlice","name","initialState","selectedModel","selectedColorSchema","hasGreen","reducers","selectLightbar","state","action","payload","selectColorSchema","setHasGreen","actions","getLightbar","lightbarSelector","getHasGreen","lightbar","schema","setLightbar","length","i","total","push","getDefaultSchema","setSchemaName","setSchema","getSchemaName","lightbarSchema","getSchema","useStyles","makeStyles","list","border","borderRadius","marginTop","marginBottom","maxHeight","overflow","ListItems","onClick","selected","map","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","dispatch","useDispatch","List","className","theme","select","width","spacing","switch","withStyles","switchBase","color","green","backgroundColor","checked","track","Switch","ColorSchemaList","selectedSchema","colorSchema","JSON","parse","localStorage","getItem","Select","value","onChange","e","target","displayEmpty","inputProps","MenuItem","Object","keys","root","display","flexDirection","alignContent","justifyContent","minHeight","card","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","Card","CardContent","Typography","variant","CardActions","Button","disabled","rgbToHex","r","g","b","convertToHex","toUpperCase","createBinaryBlob","cycles","lightLength","lights","forEach","c","repeat","buffer","ArrayBuffer","dv","DataView","setUint8","setUint16","index","Array","l","a","toFixed","v","Blob","type","createMessageBoardBinaryBlob","data","Math","ceil","binaryIndex","createJSONBlob","stringify","saveFile","blob","FileSaver","saveAs","getDefaultLights","selectedCycle","selectedLight","showPreview","latestSelectedColor","setSelectedCycle","setSelectedLight","shouldSetColor","id","addCycle","duplicateCycle","deleteCycle","splice","setCycleRepeat","isNaN","setLightSetting","setInitialState","setShowPreview","saveAsFile","Date","getTime","getCycles","getLatestSelectedColor","getSelectedCycle","getSelectedLight","getShowPreview","fontMap","column","row","chars","textToBitmap","text","padding","bitMap","textArray","split","Font","char","floor","toString","padStart","convertTextToBitmap","userStyle","trim","canvas","document","createElement","style","fontFamily","fontStyle","textColor","font","ctx","getContext","measureText","getTextWidth","height","textBaseline","fillStyle","fillRect","fillText","dataImage","col","pixel","convertToRowBaseArray","getImageData","firstLine","imageData","isGraphical","ledColor","pixelCornerRadius","pixelSize","secondLine","scrollSpeed","spaceBetweenPixels","setColumn","setImageData","setIsGraphical","setFirstLine","setLedColor","setPixelCornerRadius","setRow","setSecondLine","setScrollSpeed","setBoardState","exportData","getBoardState","scrollingBoard","menuButton","marginRight","title","flexGrow","previewButton","borderColor","Header","location","useLocation","useState","showExport","showAppbarButtons","setShowAppbarButton","React","anchorEl","setAnchorEl","onCloseContexMenu","isJSON","pathname","search","undefined","useEffect","AppBar","position","Toolbar","IconButton","edge","aria-label","replace","startIcon","currentTarget","Menu","keepMounted","open","Boolean","onClose","props","marginLeft","maxWidth","minWidth","Light","fill","getStrokeColor","overlay","rotation","scale","shadowBlur","stroke","x","y","cornerRadius","align","verticalAlign","LightbarPreview","overlays","containerRef","useRef","originalWidth","lightbarWidth","onLightClick","indexOf","getColor","ref","LivePreview","useTheme","fullScreen","useMediaQuery","breakpoints","down","visibleCycle","setVisibleCycle","setRepeat","interval","setInterval","clearInterval","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","SchemaColorPicker","onSwatchHover","colors","hex","triangle","styles","passedStyles","reactCSS","merge","background","boxShadow","body","label","borderStyle","borderWidth","triangleShadow","hash","float","alignItems","input","outline","boxSizing","paddingLeft","swatch","margin","clear","top","left","right","handleChange","hexcode","isValidHex","source","onHover","focusStyle","defaultProps","ColorWrap","zIndex","pallete","innerPallete","bottom","ColorPicker","presetColors","disableAlpha","cardHeader","blue","cardContent","colorInfo","colorView","prop","values","LightbarSetting","config","showColorPicker","setShowColorPicker","onValueChange","console","log","setColorPickerState","isRGBSchema","every","CardHeader","TextField","max","min","size","rgb","item","itemText","itemTextFirstRow","alignSelf","borderBottom","paddingBottom","Cycle","onDelete","onRepeatChange","component","ListItemSecondaryAction","arial-label","CycleList","Cycles","flexWrap","mqMatches","details","Lightbar","change","to","MatrixLCD","hasGlow","pixelColor","pixelStatus","space","window","innerWidth","pixelRoom","setScroll","intervalId","status","pixels","shift","getPixelColor","join","flat","emojiIcon","emojiPicker","formControl","toolbar","FontToolbar","addEmoji","setStyles","isEmojiPickerVisible","setEmojiPickerVisibility","onFontChange","clsx","FormControl","InputLabel","labelId","onSelect","emoji","matrixLCD","textAlign","textField","fullwidth","ScrollingBoard","configs","result","getPixelsOfLines","textStyles","setTextStyle","onChangeText","InputProps","endAdornment","InputAdornment","FormControlLabel","control","newTextConfigs","native","Platforms","route","url","ButtonGroup","buttonGroup","orientation","flexFlow","lightbarContent","settings","selectionButtons","checkbox","selectedCheckbox","red","amber","white","cardActions","LightbarSchema","isDialogOpen","setDialogState","schemaName","lightColors","clearSelectedLight","sectionLights","_","cloneDeep","selectColor","goToLightbarSetting","Checkbox","icon","checkedIcon","goBack","DialogContentText","autoFocus","fullWidth","schemas","setItem","App","path","store","configureStore","reducer","lightbarSchemaReducer","lightbarSelectorReducer","lightbarReducer","scrollingBoardReducer","createMuiTheme","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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M,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAE1C,IAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,IAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,KAAM,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAC3C,IAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAE1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,GAAM,EAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,EAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,GAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,GAAM,GAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAO,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,MCpGnCC,GAAe,SAACC,GAA4C,IAAtChH,EAAqC,uDAA7B,CAAC,EAAG,IAAK,GAAIiH,EAAgB,uDAAN,EAC1DC,EAAS,GAkBTC,EAAYH,EAAKI,MAAM,IA8B7B,OA5BA,aAAIrD,MAAMsD,GAAKT,OAASI,EAAK3J,OAAS2J,EAAK3J,OAAS4J,GAAS3F,QAAQ+B,SACnE,SAACC,GACC4D,EAAO5D,GAAK,GAGV2D,GACA3D,GAAK+D,GAAKT,OAASK,KAAaI,GAAKT,OAASK,EAAU,EAExD,aAAIlD,MAAMsD,GAAKR,KAAKvF,QAAQ3C,KAAI,kBAAMuI,EAAO5D,GAAG9F,KAAK,CAAC,EAAG,EAAG,OAE5D,aAAIuG,MAAMsD,GAAKR,KAAKvF,QAAQ+B,SAAQ,SAACT,GACnC,IAAM0E,EAAOH,EAAU3C,KAAK+C,MAAMjE,GAAK+D,GAAKT,OAASK,KAErDC,EAAO5D,GAAG9F,KAIsC,MAH9C6J,GAAKP,MAAMQ,GAAM1E,GACd4E,SAAS,GACTC,SAAkB,MAATH,EAAe,EAAI,EAAG,GAC/BF,MAAM,IAAI9D,GAAK+D,GAAKT,OAASK,IAC5BjH,EACA,CAAC,EAAG,EAAG,UASdkH,GCnBIQ,GAAsB,SAACV,EAAMW,GACxC,IAAKX,GAAwB,KAAhBA,EAAKY,OAChB,MAAO,GAET,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAK,gBACN,CACDC,WAAY,YACZlG,SAAU,GACVmG,UAAW,OACXC,UAAW,UACXjI,gBAAiB,iBANV,GAQNyH,GAECS,EAAI,UAAMJ,EAAME,UAAZ,YAAyBF,EAAMjG,SAA/B,cAA6CiG,EAAMC,YAC7DJ,EAAOlI,MA9CmB,SAACqH,EAAMoB,GACjC,IACMC,EADSP,SAASC,cAAc,UACnBO,WAAW,MAE9B,OADAD,EAAID,KAAOA,EACJC,EAAIE,YAAYvB,GAAMrH,MA0Cd6I,CAAaxB,EAAMoB,GAAMlE,QAAQ,GAChD2D,EAAOY,OAAS,GAChB,IAAMJ,EAAMR,EAAOS,WAAW,MAO9B,OANAD,EAAIK,aAAe,SACnBL,EAAIM,UAAYX,EAAM9H,gBACtBmI,EAAIO,SAAS,EAAG,EAAGf,EAAOlI,MAAOkI,EAAOY,QACxCJ,EAAID,KAAOA,EACXC,EAAIM,UAAYX,EAAMG,UACtBE,EAAIQ,SAAS7B,EAAM,EAAG,GA/Ca,SAAC8B,GAGpC,IAFA,IAAMvE,EAAO,GAEJjB,EAAI,EAAGA,EAAIwF,EAAUnJ,MAAO2D,GAAK,EAAG,CAE3C,IADA,IAAMyF,EAAM,GACHnG,EAAI,EAAGA,EAAIkG,EAAUL,OAAQ7F,GAAK,EAAG,CAC5C,IAAMoG,EAAQpG,EAAIkG,EAAUnJ,MAAQ,EAAQ,EAAJ2D,EACxCyF,EAAIvL,KAAK,CAIPsL,EAAUvE,KAAKyE,GAAS,IAAM,EAAIF,EAAUvE,KAAKyE,GACjDF,EAAUvE,KAAKyE,EAAQ,GAAK,IAAM,EAAIF,EAAUvE,KAAKyE,EAAQ,GAC7DF,EAAUvE,KAAKyE,EAAQ,GAAK,IAAM,EAAIF,EAAUvE,KAAKyE,EAAQ,KAIjEzE,EAAK/G,KAAKuL,GAGZ,OAAOxE,EA4BA0E,CACLZ,EAAIa,aAAa,EAAG,EAAGrB,EAAOlI,MAAOkI,EAAOY,UC/C1CzM,GAAQC,YAAY,CACxBC,KAAM,iBACNC,aAAc,CACZyK,OAAQ,GACRuC,UAAW,cACXC,UAAW,GACXC,aAAa,EACbC,SAAU,CAAE1G,EAAG,EAAGC,EAAG,IAAKC,EAAG,EAAGmB,EAAG,GACnCsF,kBAAmB,EACnBC,UAAW,GACX3C,IAAK,GACL4C,WAAY,SACZC,YAAa,GACbC,mBAAoB,KACpB3B,MAAO,MAETzL,SAAU,CACRqN,UAAW,SAACnN,EAAOC,GACjBD,EAAMmK,OAASlK,EAAOC,SAExBkN,aAAc,SAACpN,EAAOC,GACpBD,EAAM2M,UAAY1M,EAAOC,SAE3BmN,eAAgB,SAACrN,EAAOC,GACtBD,EAAM4M,YAAc3M,EAAOC,SAE7BoN,aAAc,SAACtN,EAAOC,GACpBD,EAAM0M,UAAYzM,EAAOC,SAE3BqN,YAAa,SAACvN,EAAOC,GACnBD,EAAM6M,SAAW5M,EAAOC,SAE1BsN,qBAAsB,SAACxN,EAAOC,GAC5BD,EAAM8M,kBAAoB7M,EAAOC,SAEnCuN,OAAQ,SAACzN,EAAOC,GACdD,EAAMoK,IAAMnK,EAAOC,SAErBwN,cAAe,SAAC1N,EAAOC,GACrBD,EAAMgN,WAAa/M,EAAOC,SAE5ByN,eAAgB,SAAC3N,EAAOC,GACtBD,EAAMiN,YAAchN,EAAOC,SAE7B0N,cAAe,SAAC5N,EAAOC,GAAR,OAAmBA,EAAOC,SACzC2N,WAAY,SAAC7N,EAAOC,GAAY,IAAD,EACRA,EAAOC,QACxB,CAACgI,GAAelI,EAAM2M,WAAY,QAClC,CAAC9E,GAA6B7H,EAAM2M,WAAY,OAHvB,mBACtBtE,EADsB,KAChBT,EADgB,KAI7BQ,GAASC,EAAD,yBAAwB,IAAIsB,MAAOC,UAAnC,YAAgDhC,Q,GAgB1DrI,GAAMc,QAVRwN,G,GAAAA,WASAD,I,GARAT,U,GACAG,a,GACAF,a,GACAC,e,GACAE,Y,GACAE,O,GACAC,c,GACAC,e,GACAC,eAGWE,GAAgB,SAAC9N,GAAD,OAAWA,EAAM+N,gBAU/BxO,MAAf,QCpEM+B,GAAYC,aAAW,SAACyB,GAAD,MAAY,CACvCgL,WAAY,CACVC,YAAajL,EAAMG,QAAQ,IAE7B+K,MAAO,CACLC,SAAU,GAEZC,cAAe,CACb7K,MAAO,UACP8K,YAAa,eA0FFC,OAtFf,WACE,IAAM5L,EAAUpB,KACViN,EAAWC,cACXhJ,EAAUC,cAHA,EAIiCgJ,mBAAS,CACxD9F,aAAa,EACb+F,YAAY,IANE,mBAITC,EAJS,KAIUC,EAJV,OAQgBC,IAAMJ,SAAS,MAR/B,mBAQTK,EARS,KAQCC,EARD,KASVnM,EAAWC,cAEXmM,EAAoB,SAACC,GAAD,OAAY,WAChCV,EAASW,SAASC,OAAO,cAAgB,OAC5BC,IAAXH,GACFrM,EAAS8G,GAAWuF,IAEbV,EAASW,SAASC,OAAO,kBAAoB,QACvCC,IAAXH,GACFrM,EAASiL,GAAWoB,IAGxBF,EAAY,QAgBd,OAVAM,qBAAU,WACJd,EAASW,SAASC,OAAO,aAAe,EAC1CP,EAAoB,CAAEjG,aAAa,EAAM+F,YAAY,IAC5CH,EAASW,SAASC,OAAO,iBAAmB,EACrDP,EAAoB,CAAEjG,aAAa,EAAO+F,YAAY,IAEtDE,EAAoB,CAAEjG,aAAa,EAAO+F,YAAY,MAEvD,CAACH,IAGF,kBAACe,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLnM,MAAM,UACNoM,aAAW,OACX3N,QAnBO,kBAAMwD,EAAQoK,QAAQ,OAqB7B,kBAAC,KAAD,OAEF,kBAAC/J,EAAA,EAAD,CAAYC,QAAQ,KAAK/C,UAAWL,EAAQwL,OAA5C,yCAGCS,EAAkBhG,aACjB,kBAAC3C,EAAA,EAAD,CACEjD,UAAWL,EAAQ0L,cACnBpM,QA9Ba,kBAAMY,EAAS6G,IAAe,KA+B3CoG,UAAW,kBAAC,KAAD,MACX/J,QAAQ,YAJV,WASD6I,EAAkBD,YACjB,kBAACe,EAAA,EAAD,CACEE,aAAW,WACXpM,MAAM,UACNmM,KAAK,MACL1N,QA3Cc,SAACuC,GAAD,OAAOwK,EAAYxK,EAAEuL,iBA6CnC,kBAAC,IAAD,OAGJ,kBAACC,EAAA,EAAD,CACE/G,GAAG,cACH8F,SAAUA,EACVkB,aAAW,EACXC,KAAMC,QAAQpB,GACdqB,QAASnB,KAET,kBAACrK,EAAA,EAAD,CAAU3C,QAASgN,GAAkB,IAArC,cACA,kBAACrK,EAAA,EAAD,CAAU3C,QAASgN,GAAkB,IAArC,mB,4BCzGJ1N,GAAYC,YAAW,CAC3BuD,KAAM,CACJC,QAAS,OACTC,cAAe,MACfgH,OAAQ,SAACoE,GAAD,OAAYA,EAAMlN,MAAQ,OAAS,KAC3CgC,eAAgB,SAChBmL,WAAY,GACZC,SAAU,IACVC,SAAU,SAACH,GAAD,OAAWA,EAAMlN,OAAS,KACpCA,MAAO,SAACkN,GAAD,OAAWA,EAAMlN,OAAS,WAI/BsN,GAAQ,SAAC,GAAD,IACZC,EADY,EACZA,KAEAzE,GAHY,EAEZ0E,eAFY,EAGZ1E,QACAhK,EAJY,EAIZA,QACA2O,EALY,EAKZA,QACAC,EANY,EAMZA,SACAC,EAPY,EAOZA,MACAC,EARY,EAQZA,WACAC,EATY,EASZA,OACAxG,EAVY,EAUZA,KACArH,EAXY,EAWZA,MACA8N,EAZY,EAYZA,EACAC,EAbY,EAaZA,EAbY,OAeZ,oCACE,kBAAC,QAAD,CACER,KAAMA,EACNzE,OAAQA,EACRkF,aAAc,EACdlP,QAASA,EACT4O,SAAUA,EACVE,WAAYA,EACZC,OAAQA,EACR7N,MAAOA,EACP8N,EAAGA,EACHC,EAAGA,IAEL,kBAAC,SAAD,CAAOL,SAAUA,EAAUI,EAAGA,EAAGC,EAAGA,GACjCN,GACCA,EAAQzO,KAAI,SAACqB,EAAO8D,GAAR,OACV,kBAAC,QAAD,CACEjF,IAAKmB,EACLkN,KAAMlN,EACNyI,OAAQA,EACRkF,aAAc,EACdlP,QAASA,EACTkB,MAAOA,EAAQyN,EAAQ/P,OACvBoQ,EAAG3J,GAASnE,EAAQyN,EAAQ/P,QAC5BqQ,EAAG,QAIV1G,GACC,kBAAC,QAAD,CACE4G,MAAM,SACN7L,SAAU,GAAKuL,EACf7E,OAAQA,EACR4E,SAAUA,EACVrG,KAAMA,EACN6G,cAAc,SACdlO,MAAOA,EACP8N,EAAGA,EACHC,EAAGA,MAyMII,OAnMf,YAOI,IAAD,IAND1K,cAMC,MANQ,GAMR,MALD2K,gBAKC,MALU,GAKV,EAJDtP,EAIC,EAJDA,QAIC,IAHD0G,qBAGC,MAHe,GAGf,EADDxF,GACC,EAFDgL,MAEC,EADDhL,OAEMR,EAAUpB,GAAU,CAAE4B,UACtBqO,EAAeC,mBAErB,IAAK7K,EAAO/F,OACV,OAAO,KAGT,IAAMxB,EAAQuH,EAAOpH,MAAM,GAAIoH,EAAO/F,OAAS,GAAK,GAC9CvB,EAAOsH,EAAOpH,MAAMH,EAAMwB,OAAS,GAAI,GACvC6Q,EAAgB,IAAwB,GAAfrS,EAAMwB,OAC/BiQ,GAAS3N,GAASuO,GAAiBA,EACnCC,EAAgBtS,EAAMwB,QAAU,GAAKiQ,GACrCC,EAAa,EAAID,EAWjBc,EAAe,SAAC3I,GAAD,OAAQ,kBAAMhH,GAAWA,EAAQgH,KAEhD0H,EAAiB,SAAC1H,GAAD,OACrBN,EAAckJ,QAAQ5I,IAAO,EAAI,MAAQ,MAErC6I,EAAW,SAAC,GAAD,IAAG1L,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGC,EAAT,EAASA,EAAGmB,EAAZ,EAAYA,EAAZ,OACftB,GAAS,CACPC,GAAIA,EAAIqB,GAAGC,QAAQ,GACnBrB,GAAIA,EAAIoB,GAAGC,QAAQ,GACnBpB,GAAIA,EAAImB,GAAGC,QAAQ,MAGvB,OACE,yBAAKqK,IAAKP,EAAcxO,UAAWL,EAAQoC,MACzC,kBAAC,SAAD,CAAO5B,MAAOuO,EAAgBZ,EAAO7E,OAAQ,IAAM6E,GACjD,kBAAC,SAAD,CAAOG,EAAG,GAAKH,GACZzR,EAAM8C,KAAI,SAACqF,EAAGF,GAAJ,OACT,kBAAC,GAAD,CACEoJ,KAAMoB,EAAStK,EAAEhE,OACjByI,OAAQ,GAAK6E,EACbxJ,MAAOA,EACPjF,IAAKiF,EACL0J,OAAQL,EAAerJ,GACvBkD,KAAMhD,EAAEgD,KACRvI,QAAS2P,EAAatK,GACtBsJ,QAASW,EAASjK,GAClBwJ,MAAOA,EACPC,WAAYA,EACZ5N,MAAO,GAAK2N,EACZG,EAAG,GAAK3J,EAAQwJ,EAChBI,EAAG,GAAKJ,QAId,kBAAC,SAAD,CACED,UAAW,IACXI,EAAG,IAASH,EAAQa,EACpBT,EAAG,IAAMJ,GAET,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,GAAKJ,EACR3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOvH,EAAMwB,OAAS,GAAG2C,OACxCqN,SAAU,IACVrG,KAAM5D,EAAOvH,EAAMwB,OAAS,GAAG2J,KAC/BuG,WAAYA,EACZI,aAAc,EACdlP,QAAS2P,EAAavS,EAAMwB,OAAS,GACrC+P,QAASW,EAASlS,EAAMwB,OAAS,GACjCmQ,OAAQL,EAAetR,EAAMwB,OAAS,GACtCiQ,MAAOA,IAET,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,GAAKJ,EACR3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOvH,EAAMwB,OAAS,GAAG2C,OACxCuN,WAAYA,EACZvG,KAAM5D,EAAOvH,EAAMwB,OAAS,GAAG2J,KAC/BqG,SAAU,GACVM,aAAc,EACdlP,QAAS2P,EAAavS,EAAMwB,OAAS,GACrC+P,QAASW,EAASlS,EAAMwB,OAAS,GACjCmQ,OAAQL,EAAetR,EAAMwB,OAAS,GACtCiQ,MAAOA,IAET,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,IAAMJ,EACT3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOvH,EAAMwB,QAAQ2C,OACpCuN,WAAYA,EACZvG,KAAM5D,EAAOvH,EAAMwB,QAAQ2J,KAC3BqG,SAAU,GACVM,aAAc,EACdlP,QAAS2P,EAAavS,EAAMwB,QAC5B+P,QAASW,EAASlS,EAAMwB,QACxBmQ,OAAQL,EAAetR,EAAMwB,QAC7BiQ,MAAOA,KAGX,kBAAC,SAAD,CAAOG,EAAG,GAAKH,GACZxR,EAAK6C,KAAI,SAACqF,EAAGF,GAAJ,OACR,kBAAC,GAAD,CACEjF,IAAKiF,EACL2J,EAAG,GAAK3J,EAAQwJ,EAChBI,EAAG,IAAMJ,EACT3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOA,EAAO/F,OAAS,EAAIyG,GAAO9D,OACjDuN,WAAYA,EACZvG,KAAM5D,EAAOA,EAAO/F,OAAS,EAAIyG,GAAOkD,KACxC2G,aAAc,EACdlP,QAAS2P,EAAahL,EAAO/F,OAAS,EAAIyG,GAC1CsJ,QAASW,EAAS3K,EAAO/F,OAAS,EAAIyG,GACtC0J,OAAQL,EAAe/J,EAAO/F,OAAS,EAAIyG,GAC3CwJ,MAAOA,QAIb,kBAAC,SAAD,KACE,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,GAAKJ,EACR3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOA,EAAO/F,OAAS,GAAG2C,OACzCgH,KAAM5D,EAAOA,EAAO/F,OAAS,GAAG2J,KAChCuG,WAAYA,EACZF,SAAU,IACVM,aAAc,EACdlP,QAAS2P,EAAahL,EAAO/F,OAAS,GACtC+P,QAASW,EAAS3K,EAAO/F,OAAS,GAClCmQ,OAAQL,EAAe/J,EAAO/F,OAAS,GACvCiQ,MAAOA,IAET,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,GAAKJ,EACR3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOA,EAAO/F,OAAS,GAAG2C,OACzCgH,KAAM5D,EAAOA,EAAO/F,OAAS,GAAG2J,KAChCuG,WAAYA,EACZF,SAAU,GACVM,aAAc,EACdlP,QAAS2P,EAAahL,EAAO/F,OAAS,GACtC+P,QAASW,EAAS3K,EAAO/F,OAAS,GAClCmQ,OAAQL,EAAe/J,EAAO/F,OAAS,GACvCiQ,MAAOA,IAET,kBAAC,GAAD,CACEG,EAAG,GAAKH,EACRI,EAAG,IAAMJ,EACT3N,MAAO,GAAK2N,EACZ7E,OAAQ,GAAK6E,EACbJ,KAAMoB,EAASlL,EAAOA,EAAO/F,OAAS,GAAG2C,OACzCgH,KAAM5D,EAAOA,EAAO/F,OAAS,GAAG2J,KAChCuG,WAAYA,EACZF,SAAU,GACVM,aAAc,EACdlP,QAAS2P,EAAahL,EAAO/F,OAAS,GACtC+P,QAASW,EAAS3K,EAAO/F,OAAS,GAClCmQ,OAAQL,EAAe/J,EAAO/F,OAAS,GACvCiQ,MAAOA,Q,iDC/ObvP,GAAYC,YAAW,IAwDdwQ,OAtDf,WACkBzQ,KAAhB,IACM0B,EAAQgP,eAFO,EAGGvD,oBAAS,GAHZ,mBAIfwD,GAJe,UAIFC,aAAclP,EAAMmP,YAAYC,KAAK,QAClDzJ,EAAchG,YAAYsH,IAC1BxD,EAAS9D,YAAYkH,IACrBjH,EAAWC,cAPI,EAQmB4L,mBAAS,GAR5B,mBAQd4D,EARc,KAQAC,EARA,OASO7D,mBAAS,GAThB,mBASd3H,EATc,KASNyL,EATM,KAWrBlD,qBAAU,WACR,IAAMmD,EAAWC,aAAY,WAEzBhM,EAAO4L,GAAcvL,OAAS,GAC9BA,EAASL,EAAO4L,GAAcvL,OAE9ByL,EAAUzL,EAAS,IAEnBwL,EACED,EAAe,EAAI5L,EAAO7F,OAASyR,EAAe,EAAI,GAExDE,EAAU,MAEX,IACH,OAAO,kBAAMG,cAAcF,OAG7B,IAAMG,EAAc,kBAAM/P,EAAS6G,IAAe,KAElD,OACE,6BACE,kBAACmJ,GAAA,EAAD,CACEX,WAAYA,EACZhC,KAAMtH,EACNwH,QAASwC,EACTE,kBAAgB,2BAEhB,kBAACC,GAAA,EAAD,CAAa9J,GAAG,2BAAhB,oBACA,kBAAC+J,GAAA,EAAD,KACGtM,GAAUA,EAAO4L,IAChB,kBAAC,GAAD,CAAiB1L,OAAQF,EAAO4L,GAAc1L,UAGlD,kBAACqM,GAAA,EAAD,KACE,kBAAChN,EAAA,EAAD,CAAQhE,QAAS2Q,EAAa7M,QAAQ,YAAtC,a,yICzDGmN,GAAoB,SAAC,GACiB,IADf3O,EACc,EADdA,SAAU4O,EACI,EADJA,cAAoBC,GAChB,EADWC,IACX,EADgBD,QAAQjQ,EACxB,EADwBA,MAAOmQ,EAC/B,EAD+BA,SAC/B,IAAhDC,OAAQC,OAAwC,MAAzB,GAAyB,MAArBxQ,iBAAqB,MAAT,GAAS,EAC1CuQ,EAASE,KAASC,KAAM,CAC5B,QAAW,CACTrO,KAAM,CACJlC,QACAwQ,WAAY,OACZjS,OAAQ,2BACRkS,UAAW,6BACXjS,aAAc,MACd6N,SAAU,YAEZqE,KAAM,CACJpJ,QAAS,oBACTwB,OAAQ,IAEV6H,MAAO,CACLvO,SAAU,OACV/B,MAAO,QAET8P,SAAU,CACRnQ,MAAO,MACP8I,OAAQ,MACR8H,YAAa,QACbC,YAAa,iBACb1F,YAAa,2CACbkB,SAAU,YAEZyE,eAAgB,CACd9Q,MAAO,MACP8I,OAAQ,MACR8H,YAAa,QACbC,YAAa,iBACb1F,YAAa,qDACbkB,SAAU,YAEZ0E,KAAM,CACJP,WAAY,UACZ1H,OAAQ,OACR9I,MAAO,OACPxB,aAAc,cACdwS,MAAO,OACP3Q,MAAO,UACPwB,QAAS,OACToP,WAAY,SACZjP,eAAgB,UAElBkP,MAAO,CACLlR,MAAO,QACPoC,SAAU,OACV/B,MAAO,OACP9B,OAAQ,MACR4S,QAAS,OACTrI,OAAQ,OACR2H,UAAW,0BACXW,UAAW,cACX5S,aAAc,cACdwS,MAAO,OACPK,YAAa,OAEfC,OAAQ,CACNtR,MAAO,OACP8I,OAAQ,OACRkI,MAAO,OACPxS,aAAc,MACd+S,OAAQ,eAEVC,MAAO,CACLA,MAAO,SAGX,gBAAiB,CACfrB,SAAU,CACRtO,QAAS,QAEXiP,eAAgB,CACdjP,QAAS,SAGb,oBAAqB,CACnBsO,SAAU,CACRsB,IAAK,QACLC,KAAM,QAERZ,eAAgB,CACdW,IAAK,QACLC,KAAM,SAGV,qBAAsB,CACpBvB,SAAU,CACRsB,IAAK,QACLE,MAAO,QAETb,eAAgB,CACdW,IAAK,QACLE,MAAO,UAGVtB,GAAe,CAChB,gBAA8B,SAAbF,EACjB,oBAAkC,aAAbA,EACrB,qBAAmC,cAAbA,IAGlByB,EAAe,SAACC,EAASxQ,GAC7BhB,KAAMyR,WAAWD,IAAYzQ,EAAS,CACpC8O,IAAK2B,EACLE,OAAQ,OACP1Q,IAGL,OACE,yBAAKgH,MAAQ+H,EAAOlO,KAAOrC,UAAS,yBAAsBA,IACxD,yBAAKwI,MAAQ+H,EAAOU,iBACpB,yBAAKzI,MAAQ+H,EAAOD,WAEpB,yBAAK9H,MAAQ+H,EAAOM,MAChB1R,KAAIiR,GAAQ,SAACtM,EAAGhG,GAChB,OACE,kBAAC,UAAD,CACEuB,IAAMvB,EACN0C,MAAQsD,EACRuM,IAAMvM,EACN0E,MAAQ+H,EAAOkB,OACfxS,QAAU8S,EACVI,QAAUhC,EACViC,WAAY,CACVxB,UAAU,WAAD,OAAc9M,YAiBvCoM,GAAkBmC,aAAe,CAC/BlS,MAAO,IACPiQ,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9D,UAAW,UAAW,UAAW,WACnCE,SAAU,WACVC,OAAQ,IAGK+B,4BAAUpC,IC5JnB3R,GAAYC,YAAW,CAC3BuD,KAAM,CACJyK,SAAU,QACVkF,OAAQ,aACRa,OAAQ,EACR7R,gBAAiB,SAEnB8R,QAAS,CACP9R,gBAAiB,QACjB8L,SAAU,WACV+F,OAAQ,KAEVE,aAAc,CACZjG,SAAU,QACVoF,IAAK,EACLE,MAAO,EACPY,OAAQ,EACRb,KAAM,KA2CKc,GAvCK,SAAC,GAA0C,IAAxCvC,EAAuC,EAAvCA,OAAQ9O,EAA+B,EAA/BA,MAAOrC,EAAwB,EAAxBA,QAASsC,EAAe,EAAfA,SACvC5B,EAAUpB,GAAU,CAAE6R,WAE5B,OACE,yBAAKpQ,UAAWL,EAAQoC,MACtB,yBAAK/B,UAAWL,EAAQ6S,SACtB,yBAAKxS,UAAWL,EAAQ8S,aAAcxT,QAASA,KACxC,OAANmR,QAAM,IAANA,OAAA,EAAAA,EAAQvS,QACP,kBAAC,GAAD,CACEuS,OAAQA,EACRC,KAAK,EACLC,SAAS,OACT/O,SAAUA,IAGZ,kBAAC,gBAAD,CACEqR,aAAc,CACZ,UACA,UACA,UACA,UACA,WAEFpS,MAAOc,EACPC,SAAUA,EACVsR,cAAY,OCrClBtU,GAAYC,YAAW,CAC3BuD,KAAM,CACJyL,SAAU,IACVD,SAAU,KAEZlL,KAAM,GACNyQ,WAAY,CACVtS,MAAO,UACPE,gBAAiBqS,KAAK,MAExBC,YAAa,GACbC,UAAW,CACTjR,QAAS,OACTC,cAAe,MACfE,eAAgB,gBAChBiP,WAAY,UAEd8B,UAAW,CACT/S,MAAO,GACP8I,OAAQ,GACRvI,gBAAiB,SAACyS,GAAD,oBAAiBtR,OAAOuR,OAAOD,EAAK3S,OAApC,SAoHN6S,OAhHf,YAAwD,IAA7BjD,EAA4B,EAA5BA,OAAQkD,EAAoB,EAApBA,OAAQ/R,EAAY,EAAZA,SACnC5B,EAAUpB,GAAU,CACxBiC,OAAa,OAAN8S,QAAM,IAANA,OAAA,EAAAA,EAAQ9S,QAAS,CAAE4C,EAAG,IAAKC,EAAG,IAAKC,EAAG,OAFM,EAIPoI,oBAAS,GAJF,mBAI9C6H,EAJ8C,KAI7BC,EAJ6B,KAM/CC,EAAgB,SAAC,GAAgB,IAAdhS,EAAa,EAAbA,OACvBiS,QAAQC,IAAIlS,EAAOH,OACnBC,EAAS,CACPf,MAAM,gBAAD,OACA8S,QADA,IACAA,OADA,EACAA,EAAQ9S,MADR,gBAEFiB,EAAO/E,MACL+E,EAAOH,OAAS,IAAMG,EAAOH,OAAS,IACnCG,EAAOH,MAAM8G,OADjB,OAEIkL,QAFJ,IAEIA,OAFJ,EAEIA,EAAQ9S,MAAMiB,EAAO/E,WAiB3BkX,EAAsB,kBAAMJ,GAAoBD,IAChDM,EAAc,SAACpV,GAAD,MAClB,CAAC,UAAW,UAAW,WAAWqV,OAAM,SAACnP,GAAD,OAAOlG,EAAKoQ,QAAQlK,IAAM,MAE9D3D,EAAW,uBAAOoP,GAAP,CAAe,YAEhC,OACE,yBAAKpQ,UAAWL,EAAQoC,MACtB,kBAACa,EAAA,EAAD,CAAM5C,UAAWL,EAAQ0C,MACvB,kBAAC0R,GAAA,EAAD,CAAY/T,UAAWL,EAAQmT,WAAY3H,MAAM,kBACjD,kBAACtI,EAAA,EAAD,CAAa7C,UAAWL,EAAQqT,aAC7BM,EACC,yBAAKtT,UAAWL,EAAQsT,WACrBY,EAAY7S,GACX,oCACE,kBAACgT,GAAA,EAAD,CACElD,MAAM,MACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,IACL6E,SAAUkS,EACVU,KAAK,QACLtP,KAAK,SACLvD,MAAOgS,EAAO9S,MAAQ8S,EAAO9S,MAAM4C,EAAI,IACvCL,QAAQ,aAEV,kBAACiR,GAAA,EAAD,CACElD,MAAM,QACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,IACL6E,SAAUkS,EACVU,KAAK,QACLtP,KAAK,SACLvD,MAAOgS,EAAO9S,MAAQ8S,EAAO9S,MAAM6C,EAAI,IACvCN,QAAQ,aAEV,kBAACiR,GAAA,EAAD,CACElD,MAAM,OACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,IACL6E,SAAUkS,EACVU,KAAK,QACLtP,KAAK,SACLvD,MAAOgS,EAAO9S,MAAQ8S,EAAO9S,MAAM8C,EAAI,IACvCP,QAAQ,cAIZ,kBAAC,eAAD,CACEvC,MAAO8S,EAAO9S,MACde,SAxDW,SAACf,GAC1BkT,QAAQC,IAAInT,GACZe,EAAS,CACPf,MAAOA,EAAM4T,OAsDDjU,MAAO,MAGX,kBAAC8C,EAAA,EAAD,CACEzC,MAAM,UACNvB,QAAS2U,EACT7Q,QAAQ,aAER,0BAAM/C,UAAWL,EAAQuT,aAE1BK,GACC,kBAAC,GAAD,CACEnD,OAAQyD,EAAY7S,GAAe,GAAKA,EACxC/B,QAAS2U,EACTrS,SA5EY,SAACf,GAAD,OAC1Be,EAAS,CACPf,MAAOA,EAAM4T,OA2ED9S,MAAK,OAAEgS,QAAF,IAAEA,OAAF,EAAEA,EAAQ9S,SAKrB,kBAACsC,EAAA,EAAD,CAAYC,QAAQ,MAApB,gF,yECtHNxE,GAAYC,YAAW,CAC3BuD,KAAM,CACJ5B,MAAO,OACPpB,SAAU,OACVD,UAAW,KAEbuV,KAAM,CACJpL,OAAQ,KAEVqL,SAAU,CACRlD,WAAY,SACZpP,QAAS,OACTC,cAAe,UAEjBsS,iBAAkB,CAChBC,UAAW,SACXC,aAAc,sBACdzS,QAAS,OACTC,cAAe,MACfE,eAAgB,gBAChBuS,cAAe,KAIbC,GAAQ,SAAC,GAAD,IACZ3U,EADY,EACZA,UACAiG,EAFY,EAEZA,GACArC,EAHY,EAGZA,OACA3E,EAJY,EAIZA,QACA2V,EALY,EAKZA,SACAC,EANY,EAMZA,eACA9Q,EAPY,EAOZA,OACA7E,EARY,EAQZA,SARY,OAUZ,kBAACE,EAAA,EAAD,CACEgS,WAAW,SACXpR,UAAWA,EAAUqU,KACrBnV,SAAUA,EACVD,QAASA,EACTK,QAAM,GAEN,kBAACC,EAAA,EAAD,KACE,yBAAKS,UAAWA,EAAUsU,UACxB,yBAAKtU,UAAWA,EAAUuU,kBACxB,kBAACzR,EAAA,EAAD,CAAYgS,UAAU,OAAO/R,QAAQ,MAArC,iBACakD,EAAK,IAElB,kBAAC+N,GAAA,EAAD,CACElD,MAAM,SACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BA,IAAK,EACL3S,SAAUsT,EACVV,KAAK,QACLtP,KAAK,SACLvD,MAAOyC,EACPhB,QAAQ,cAGZ,kBAAC,GAAD,CAAiBa,OAAQA,EAAQzD,MAA6B,IAArByD,EAAO/F,OAAS,OAG7D,kBAACkX,GAAA,EAAD,KACE,kBAACrI,EAAA,EAAD,CAAYsI,cAAY,SAASrI,KAAK,MAAM1N,QAAS2V,GACnD,kBAAC,KAAD,UAwCOK,OAlCf,WACE,IAAMtV,EAAUpB,KACVmF,EAAS9D,YAAYkH,IACrBpB,EAAgB9F,YAAYoH,IAC5BnH,EAAWC,cAGX8U,EAAW,SAAC3O,GAAD,OAAQ,kBAAMpG,EAASuG,GAAYH,MAC9C4O,EAAiB,SAAC5O,GAAD,OAAQ,SAACzE,GAAD,OAC7B3B,EAASyG,GAAe,CAAEL,KAAIlC,OAAQvC,EAAEC,OAAOH,WAEjD,OACE,kBAACvB,EAAA,EAAD,CAAMC,UAAWL,EAAQoC,MACtB2B,EAAOvE,KAAI,SAAC2E,EAAGhG,GAAJ,OACV,kBAAC,GAAD,CACEkC,UAAW,CACTqU,KAAM1U,EAAQ0U,KACdC,SAAU3U,EAAQ2U,SAClBC,iBAAkB5U,EAAQ4U,kBAE5BlV,IAAKvB,EACLmI,GAAInI,EACJ8F,OAAQE,EAAEF,OACV3E,SAjBSgH,EAiBQnI,EAjBD,kBAAM+B,EAASiG,GAAiBG,MAkBhD2O,SAAUA,EAAS9W,GACnB+W,eAAgBA,EAAe/W,GAC/BiG,OAAQD,EAAEC,OACV7E,SAAUpB,IAAM4H,IArBR,IAACO,OCvFb1H,GAAYC,YAAW,CAC3BtB,OAAQ,CACNsD,MAAO,WAET6B,KAAM,GAENyQ,WAAY,CACVtS,MAAO,UACPE,gBAAiBqS,KAAK,MAExBhR,KAAM,KA2COmT,OAvCf,WACE,IAAMvV,EAAUpB,KACVsB,EAAWC,cAKjB,OACE,yBAAKE,UAAWL,EAAQoC,MACtB,kBAACa,EAAA,EAAD,CAAM5C,UAAWL,EAAQ0C,MACvB,kBAAC0R,GAAA,EAAD,CAAY/T,UAAWL,EAAQmT,WAC7B5V,OACE,oCACA,kBAACwP,EAAA,EAAD,CACEsI,cAAY,kBACZhV,UAAWL,EAAQzC,OACnB+B,QAXa,kBAAMY,EAASsG,QAa5B,kBAAC,KAAD,OAEF,kBAACuG,EAAA,EAAD,CACEsI,cAAY,kBACZhV,UAAWL,EAAQzC,OACnB+B,QAnBO,kBAAMY,EAASqG,QAqBtB,kBAAC,KAAD,QAIJiF,MAAM,WAER,kBAACtI,EAAA,EAAD,KACE,kBAAC,GAAD,UC3BJtE,GAAYC,YAAW,CAC3BuD,KAAM,CACJC,QAAS,OACTC,cAAe,MACfrD,UAAW,GACX6I,QAAS,SACTvF,aAAc,gBACdiT,SAAU,SAAC9H,GAAD,OAAYA,EAAM+H,UAAY,KAAO,iBAEjD1R,OAAQ,CACN8J,SAAU,IACVpC,SAAU,EACVsH,OAAQ,GAEV2C,QAAS,CACPjK,SAAU,EACVpJ,QAAS,OACTC,cAAe,SACfmP,WAAY,SACZlP,aAAc,UACduF,QAAS,YAkEE6N,OA9Df,WAAqB,IAAD,IACZF,EAAYjG,aAAc,sBAC1BxP,EAAUpB,GAAU,CAAE6W,cACtBvV,EAAWC,cACXlD,EAAgBgD,YAAYrC,GAC5BmI,EAAgB9F,YAAYoH,IAC5BrB,EAAgB/F,YAAYqH,IAC5BvD,EAAS9D,YAAYkH,IACrBpJ,EAAWkC,YAAYrC,GACvBqI,EAAchG,YAAYsH,IAC1BlG,EAAcpB,YAAYtB,GAC1BuH,EAAsBjG,YAAYmH,IAoBxC,OARAuF,qBAAU,WACRzM,EAASjC,GAAYhB,MACpB,IAEH0P,qBAAU,WACN5O,GAAYmC,EAASqG,QACtB,CAACxI,IAECd,EAKH,sCACKc,GACD,yBAAKsC,UAAWL,EAAQoC,MACtB,yBAAK/B,UAAWL,EAAQ+D,QACtB,kBAAC,GAAD,OAEF,yBAAK1D,UAAWL,EAAQ0V,SACtB,kBAAC,GAAD,CACEzR,OAAM,UAAEF,EAAOgC,UAAT,aAAE,EAAuB9B,OAC/B3E,QAhCQ,SAACgH,GAAD,OAClBpG,EACEkG,GAAiB,CACfE,GAAI,CAACA,GACLD,eACEhF,EAAYiF,GAAI4I,QAAQ1L,GAAS0C,KAAyB,MA4BtDF,cAAeA,EACfwF,MAAOvO,EAAcR,QAEvB,kBAAC,GAAD,CACEkX,OAAM,UAAE5P,EAAOgC,UAAT,aAAE,EAAuB9B,OAAO+B,GACtCyK,OAAQpP,EAAY2E,GACpBpE,SA/BW,SAACgU,GAAD,OAAY1V,EAAS2G,GAAgB+O,SAoCvD3P,GAAe,kBAAC,GAAD,OAzBX,kBAAC,IAAD,CAAU4P,GAAG,O,0DC/ElBjX,I,OAAYC,YAAW,CAC3BuD,KAAM,CACJrB,gBAAiB,SAAC2M,GAAD,OAAWA,EAAM3M,iBAAmB,WACrD/B,aAAc,EACd2M,YAAa,OACbtJ,QAAS,eACTyF,QAAS,EACTiK,OAAQ,MA+GG+D,OA3Gf,YAWI,IAVF/U,EAUC,EAVDA,gBACA0G,EASC,EATDA,OAGA2C,GAMC,EARD2L,QAQC,EAPDC,WAOC,EAND5L,mBAMC,IALDC,iBAKC,MALW,GAKX,MAJD4L,mBAIC,MAJa,GAIb,EAHDvO,EAGC,EAHDA,IAGC,IAFD6C,mBAEC,MAFa,IAEb,MADD2L,aACC,MADO,EACP,EACKlW,EAAUpB,GAAU,CAAEmC,oBACtBoN,EACJgI,OAAOC,WAAa,KAAO/L,EAAY6L,GAASzO,GAC3C0O,OAAOC,WAAa,OAAS/L,EAAY6L,GAASzO,GACnD,EACA4O,GAAahM,EAAY6L,GAAS/H,EANvC,EAO2BhC,IAAMJ,SAAS,GAP1C,mBAOcuK,GAPd,WASDnK,IAAMQ,WAAU,WACd,IAAI4J,EAsBJ,OAfAN,EAAY/R,SAAQ,SAACsS,EAAQrY,GACvBqY,EAAOC,OAAOvY,QAAUsY,EAAOC,OAAOvY,OAASuJ,IACjD+O,EAAOC,OAAP,uBAAoBD,EAAOC,QAA3B,aAA0C,IAAI7R,MAAM6C,GAAQtF,aAGhEoU,EAAaxG,aAAY,WACvBkG,EAAY/R,SAAQ,SAACsS,EAAQrY,GACvBqY,EAAOC,OAAOvY,QAAUsY,EAAOC,OAAOvY,OAASuJ,GAEjDwO,EAAY9X,GAAGsY,OAAOpY,KAAK4X,EAAY9X,GAAGsY,OAAOC,YAGrDJ,GAAU,SAAChZ,GAAD,OAAWA,EAAQ,OAC5BiN,GAEI,WACDgM,GACFvG,cAAcuG,MAGjB,CAACN,IAEJ,IAAMU,EAAgB,SAAClT,EAAGU,GACxB,IAAItD,EAAQ,qBAeZ,OAbAoV,EAAY/R,SAAQ,SAACwQ,GACfvQ,GAAKuQ,EAAKpG,GAAK7K,GAAKiR,EAAKnG,GAEzBmG,EAAK+B,OAAOtS,EAAIuQ,EAAKpG,IACrBoG,EAAK+B,OAAOtS,EAAIuQ,EAAKpG,GAAG7K,EAAIiR,EAAKnG,IACgB,QAAjDmG,EAAK+B,OAAOtS,EAAIuQ,EAAKpG,GAAG7K,EAAIiR,EAAKnG,GAAGqI,KAAK,MAGzC/V,EAAK,eAAW6T,EAAK+B,OAAOtS,EAAIuQ,EAAKpG,GAAG7K,EAAIiR,EAAKnG,GAA5C,SAKJ1N,GAGT,OACE,yBAAKR,UAAWL,EAAQoC,MACtB,kBAAC,SAAD,CAAO5B,MAAO6V,EAAY5O,EAAQ6B,OAAQ+M,EAAY3O,GACpD,kBAAC,SAAD,CAAO4G,EAAG,EAAGC,EAAG,GACb,aAAI3J,MAAM8C,GAAKvF,QACb3C,KAAI,SAACiE,GAAD,OACH,aAAImB,MAAM6C,GAAQtF,QAAQ3C,KAAI,SAAC2E,GAAD,OAC5B,kBAAC,QAAD,CACEzE,IAAG,UAAK+D,EAAL,YAAUU,GACbqK,aAAcpE,GAAqB,EACnC2D,KAAM4I,EAAclT,EAAGU,GACvBmK,EAAG4H,EAAQG,EAAYlS,EACvBoK,EAAG2H,EAAQG,EAAY5S,EACvBjD,MAAO6J,EAAY8D,EACnB7E,OAAQe,EAAY8D,UAIzB0I,W,mDCxFPjY,I,OAAYC,aAAW,SAACyB,GAAD,MAAY,CACvCwW,UAAW,CACTlU,SAAU,IAEZmU,YAAa,CACXlK,SAAU,WACV+F,OAAQ,KAEVoE,YAAa,CACXjF,OAAQzR,EAAMG,QAAQ,GACtBoN,SAAU,KAEZoJ,QAAS,CACPzB,SAAU,OACV1N,QAAS,cAmGEoP,GA/FK,SAAC,GAOd,IAAD,IANJC,gBAMI,MANO,kBAAM,MAMb,EALJ9W,EAKI,EALJA,UAKI,IAJJyI,kBAII,MAJS,YAIT,MAHJlG,gBAGI,MAHO,GAGP,MAFJmG,iBAEI,MAFQ,OAER,MADJnH,gBACI,MADO,kBAAM,MACb,EACE5B,EAAUpB,KADZ,EAEwBuN,IAAMJ,SAAS,CACzCjD,aACAlG,WACAmG,cALE,mBAEG6H,EAFH,KAEWwG,EAFX,OAOqDjL,IAAMJ,UAC7D,GARE,mBAOGsL,EAPH,KAOyBC,EAPzB,KAUEC,EAAe,SAAC7C,GAAD,OAAU,SAAC7S,GAC9BuV,EAAU,gBACLxG,EADI,gBAEN8D,EAAO7S,EAAEC,OAAOH,SAEnBC,EAAS,gBACJgP,EADG,gBAEL8D,EAAO7S,EAAEC,OAAOH,WAQrB,OACE,kBAACmL,EAAA,EAAD,CAASzM,UAAWmX,aAAKxX,EAAQiX,QAAS5W,IACxC,kBAACoX,GAAA,EAAD,CAAarU,QAAQ,WAAW/C,UAAWL,EAAQgX,aACjD,kBAACU,GAAA,EAAD,CAAYpR,GAAG,eAAf,QACA,kBAAC5E,EAAA,EAAD,CACEsL,KAAK,QACL2K,QAAQ,cACRxG,MAAM,OACNvP,SAAU2V,EAAa,cACvB5V,MAAOiP,EAAO9H,YAEd,kBAAC7G,EAAA,EAAD,CAAUN,MAAM,UAAhB,UACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,eAAhB,eACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,aAAhB,aACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,kBAAhB,gBACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,cAAhB,cACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,iBAAhB,iBACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,SAAhB,WAGJ,kBAAC8V,GAAA,EAAD,CAAarU,QAAQ,WAAW/C,UAAWL,EAAQgX,aACjD,kBAACU,GAAA,EAAD,CAAYpR,GAAG,aAAf,QACA,kBAAC5E,EAAA,EAAD,CACEiW,QAAQ,YACRxG,MAAM,OACNvP,SAAU2V,EAAa,YACvB5V,MAAOiP,EAAOhO,UAEd,kBAACX,EAAA,EAAD,CAAUN,MAAO,GAAjB,SACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,GAAjB,SACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,IAAjB,UACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,IAAjB,UACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,IAAjB,UACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,IAAjB,YAGJ,kBAACoL,EAAA,EAAD,CACEsI,cAAY,QACZ/V,QAAS,kBAAMgY,GAA0BD,KAEzC,kBAAC,KAAD,CAAoBhX,UAAWL,EAAQ8W,aAExCO,GACC,yBAAKhX,UAAWL,EAAQ+W,aACtB,kBAAC,KAAD,CACEa,SAlDU,SAACC,GACnBP,GAAyB,GACzBH,EAASU,IAiDDhP,MAAO,CAAErI,MAAO,QAASoN,SAAU,UCnFzChP,GAAYC,YAAW,CAC3BuD,KAAM,CACJqP,WAAY,SACZpP,QAAS,OACTC,cAAe,UAEjBwV,UAAW,CACT7Y,UAAW,GACX8Y,UAAW,UAEbrV,KAAM,CACJlC,MAAO,OACPvB,UAAW,IAEboU,YAAa,CACXhR,QAAS,OACTC,cAAe,UAEjBoF,IAAK,CACH+J,WAAY,SACZpP,QAAS,OACTC,cAAe,MACfkT,SAAU,OACVhT,eAAgB,SAChBuP,OAAQ,SAEViG,UAAW,CACTjG,OAAQ,WAEVlK,KAAM,CACJkK,OAAQ,UACR,UAAW,CACTjJ,WAAY,SAAC4E,GAAD,OACTA,EAAMxD,aAAewD,EAAM7E,OAAS6E,EAAM7E,MAAMC,YACjD,UACFlG,SAAU,SAAC8K,GAAD,OAAYA,EAAM7E,OAAS6E,EAAM7E,MAAMjG,UAAa,MAGlEqV,UAAW,CACTzX,MAAO,QAET+S,UAAW,CACTvC,WAAY,SAACtD,GAAD,qBAAmBxL,OAAOuR,OAAO/F,EAAMvD,UAAvC,MACZb,OAAQ,GACR9I,MAAO,MAmQI0X,OA/Pf,WACE,IAAMhY,EAAWC,cACXgY,EAAUlY,YAAYmL,IACtBpL,EAAUpB,GAAUuZ,GAKpBlC,EAAckC,EAAQjO,YACxB,CAAC,CAAEoE,EAAG,EAAGC,EAAG,EAAGkI,OAAQ0B,EAAQlO,YbxBL,SAAC,GAAyC,IAAvCD,EAAsC,EAAtCA,UAAWG,EAA2B,EAA3BA,SAAUG,EAAiB,EAAjBA,WAChD8N,EAAS,GACTvX,EAAQqB,OAAOuR,OAAOtJ,GAAUzD,OAAO,EAAG,GAUhD,OARIsD,GAA2B,KAAdA,GACfoO,EAAO/Z,KAAK,CAAEiQ,EAAG,EAAGC,EAAG,EAAGkI,OAAQ7O,GAAaoC,EAAWnJ,EAAO,KAG/DyJ,GAA6B,KAAfA,GAChB8N,EAAO/Z,KAAK,CAAEiQ,EAAG,EAAGC,EAAG,EAAGkI,OAAQ7O,GAAa0C,EAAYzJ,EAAO,KAG7DuX,EaaHC,CAAiBF,GAVG,EAYsBhM,IAAMJ,UAAS,GAZrC,mBAYjB6H,EAZiB,KAYAC,EAZA,OAaW1H,IAAMJ,WAbjB,mBAajBuM,EAbiB,KAaLC,EAbK,KAelBtE,EAAsB,kBAAMJ,GAAoBD,IA8BhDhS,EAAW,SAACC,GAAD,OACf3B,EAASgL,GAAc,gBAAKiN,EAAN,gBAAgBtW,EAAEC,OAAO/E,MAAQ8E,EAAEC,OAAOH,WAE5D6W,EAAe,SAAC3W,GAAO,IAAD,EAC1B3B,EACEgL,GAAc,gBACTiN,GADQ,oBAEVtW,EAAEC,OAAO/E,KAAO8E,EAAEC,OAAOH,OAFf,2BAGA4G,GAAoB1G,EAAEC,OAAOH,QAH7B,OA+BjB,OACE,yBAAKtB,UAAWL,EAAQoC,MACtB,yBAAK/B,UAAWL,EAAQ8X,WACtB,kBAAC,GAAD,CACErQ,OAAQ0Q,EAAQ1Q,OAChBuO,WAAU,eAAU9T,OAAOuR,OAAO0E,EAAQhO,UAAhC,KACVC,kBAAmB+N,EAAQ/N,kBAC3B6L,YAAaA,EACb1L,YAAa4N,EAAQ5N,YACrB7C,IAAKyQ,EAAQzQ,OAGjB,kBAACzE,EAAA,EAAD,CAAM5C,UAAWL,EAAQ0C,MACvB,kBAAC0R,GAAA,EAAD,CAAY5I,MAAM,0BAClB,kBAACtI,EAAA,EAAD,CAAa7C,UAAWL,EAAQqT,aAC9B,yBAAKhT,UAAWL,EAAQ0H,KACtB,kBAAC2M,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,MACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,MACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQzQ,IACftE,QAAQ,aAEV,kBAAC,KAAD,MACA,kBAACiR,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,SACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,SACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQ1Q,OACfrE,QAAQ,aAEV,kBAACiR,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,eACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,oBACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQ/N,kBACfhH,QAAQ,aAEV,kBAACiR,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,kBACNnP,WAAY,CAAEsS,IAAK,IAAMC,IAAK,GAC9BkE,WAAY,CACVC,aACE,kBAACC,GAAA,EAAD,CAAgB9L,SAAS,OAAzB,OAGJ9P,KAAK,cACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQ5N,YACfnH,QAAQ,cAGZ,yBAAK/C,UAAWL,EAAQ0H,KACtB,kBAAC2M,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,MACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,MACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQhO,SAAS1G,EACxBL,QAAQ,WACRG,UAAQ,IAEV,kBAAC8Q,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,QACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,QACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQhO,SAASzG,EACxBN,QAAQ,WACRG,UAAQ,IAEV,kBAAC8Q,GAAA,EAAD,CACEhU,UAAWL,EAAQgY,UACnB7G,MAAM,OACNnP,WAAY,CAAEsS,IAAK,IAAKC,IAAK,GAC7BxX,KAAK,OACL6E,SAAUA,EACV4S,KAAK,QACLtP,KAAK,SACLvD,MAAOwW,EAAQhO,SAASxG,EACxBP,QAAQ,WACRG,UAAQ,IAEV,kBAACD,EAAA,EAAD,CACEzC,MAAM,UACNvB,QAAS2U,EACT7Q,QAAQ,aAER,0BAAM/C,UAAWL,EAAQuT,aAE1BK,GACC,kBAAC,GAAD,CACEtU,QAAS2U,EACTrS,SAlLc,SAACf,GAC3B,IAAMgI,EAAK,gBAAQsP,EAAQtP,MAAhB,CAAuBG,UAAWnI,EAAM6P,MACnDxQ,EACEgL,GAAc,gBACTiN,EADQ,CAEXhO,SAAUtJ,EAAM4T,IAChB5L,QACAoB,UAAW1B,GAAoB4P,EAAQnO,UAAWnB,QA4K1ClH,MAAOwW,EAAQhO,YAIrB,yBAAK9J,UAAWL,EAAQ0H,KACtB,kBAACkR,GAAA,EAAD,CACEC,QACE,kBAAC3X,EAAA,EAAD,CACEF,QAASmX,EAAQjO,YACjBtI,SAhLO,SAACC,GACtB,IAAMiX,EAAiB,CACrB9O,UAAWnI,EAAEC,OAAOd,QZnGY,oFYmGuB,cACvDiJ,UAAWpI,EAAEC,OAAOd,QAChBuH,GZrG4B,qFYsG5B,MAENrI,EACEgL,GAAc,gBACTiN,EADQ,GAERW,EAFQ,CAGX5O,YAAarI,EAAEC,OAAOd,aAsKZjE,KAAK,cACL8D,MAAM,YAGVsQ,MAAM,qBAGV,yBAAK9Q,UAAWL,EAAQ0H,KACrByQ,EAAQjO,aACP,kBAAC,GAAD,CACE7J,UAAWL,EAAQiY,UACnBrW,SA/JM,SAACiH,GACnB0P,EAAa1P,GACb3I,EACEgL,GAAc,gBACTiN,EADQ,CAEXtP,QACAoB,UAAW1B,GAAoB4P,EAAQnO,UAAWnB,QA0J1CsO,SArJG,SAACU,GAAD,OACf3X,EACEgL,GAAc,gBACTiN,EADQ,CAEXnO,UAAU,GAAD,OAAKmO,EAAQnO,UAAb,YAA0B6N,EAAMkB,QACzC9O,UAAW1B,GAAoB,GAAD,OACzB4P,EAAQnO,UADiB,YACJ6N,EAAMkB,QAC9BT,UAiJE,kBAACjE,GAAA,EAAD,CACEhU,UAAWmX,aAAK,CAACxX,EAAQ6H,KAAM7H,EAAQiY,YACvC9G,MAAM,aACNpU,KAAK,YACL6E,SAAU4W,EACVhE,KAAK,QACLtP,KAAK,OACLvD,MAAOwW,EAAQnO,UACf5G,QAAQ,eAGV+U,EAAQjO,aACR,yBAAK7J,UAAWL,EAAQ0H,KACtB,kBAAC2M,GAAA,EAAD,CACEhU,UAAWmX,aAAK,CAACxX,EAAQgY,UAAWhY,EAAQiY,YAC5C9G,MAAM,cACNpU,KAAK,aACL6E,SAAU4W,EACVhE,KAAK,QACLtP,KAAK,OACLvD,MAAOwW,EAAQ7N,WACflH,QAAQ,cAId,4BAAQ/C,UAAWL,EAAQ0I,OAAQpC,GAAG,iBAAtC,2C,mBCxTJ1H,GAAYC,YAAW,CAC3BuD,KAAM,CACJC,QAAS,OACTC,cAAe,MACfE,eAAgB,SAChBvD,UAAW,IAEbyD,KAAM,CACJlC,MAAO,QAET6S,YAAa,CACX0E,UAAW,UAEbpY,OAAQ,CACN8C,UAAW,MAmCAuW,OA/Bf,WACE,IAAMhZ,EAAUpB,KACVkE,EAAUC,cACVkW,EAAQ,SAACC,GAAD,OAAS,kBAAMpW,EAAQzE,KAAK6a,KAE1C,OACE,yBAAK7Y,UAAWL,EAAQoC,MACtB,kBAACa,EAAA,EAAD,CAAM5C,UAAWL,EAAQ0C,MACvB,kBAAC0R,GAAA,EAAD,CAAY5I,MAAM,sBAClB,kBAACtI,EAAA,EAAD,CAAa7C,UAAWL,EAAQqT,aAC9B,kBAAC8F,GAAA,EAAD,CACE9Y,UAAWL,EAAQoZ,YACnBC,YAAY,WACZxY,MAAM,WAEN,kBAACyC,EAAA,EAAD,CAAQjD,UAAWL,EAAQL,OAAQL,QAAS2Z,EAAM,eAAlD,0BAGA,kBAAC3V,EAAA,EAAD,CACEjD,UAAWL,EAAQL,OACnBL,QAAS2Z,EAAM,mBAFjB,mC,yCCjBNra,GAAYC,YAAW,CAC3BuD,KAAM,CACJC,QAAS,OACTiX,SAAU,UAEZvb,SAAU,CACRgU,OAAQ,mBACRgG,UAAW,SACX1V,QAAS,eACT,QAAS,IAEXkX,gBAAiB,CACflX,QAAS,OACTG,eAAgB,UAElBgX,SAAU,CACRva,UAAW,GACXoD,QAAS,OACTC,cAAe,SACf9B,MAAO,IACPqU,UAAW,UAEb4E,iBAAkB,CAChBpX,QAAS,OACTmT,SAAU,OACVhT,eAAgB,SAChB,WAAY,CACVuP,OAAQ,IAGZtB,OAAQ,CACNpO,QAAS,OACTmT,SAAU,OACVhT,eAAgB,UAElBkX,SAAU,CACRlZ,MAAO,GACP8I,OAAQ,GACRtK,aAAc,GACdD,OAAQ,mCAEV4a,iBAAkB,CAChBnZ,MAAO,GACP8I,OAAQ,GACRvK,OAAQ,cACRC,aAAc,GACd2M,YAAa,uBAEfiO,IAAK,CACH7Y,gBAAiB,WAEnBD,MAAO,CACLC,gBAAiB,WAEnBqS,KAAM,CACJrS,gBAAiB,WAEnB8Y,MAAO,CACL9Y,gBAAiB,WAEnB+Y,MAAO,CACL/Y,gBAAiB,WAEnBgZ,YAAa,CACXvX,eAAgB,cA+NLwX,GA3NQ,WACrB,IAAMha,EAAUpB,KACVkE,EAAUC,cACVhF,EAAWkC,YAAYrC,GACvBsC,EAAWC,cACXpD,EAAOkD,YAAYxB,GALE,EAMe0N,IAAMJ,SAAS,IAN9B,mBAMpB/F,EANoB,KAMLI,EANK,OAOY+F,IAAMJ,UAAS,GAP3B,mBAOpBkO,EAPoB,KAONC,EAPM,OAQS/N,IAAMJ,SAAShP,GARxB,mBAQpBod,EARoB,KAQR5b,EARQ,KASrB6b,EAAcna,YAAYtB,GAMhC,GAJAwN,IAAMQ,WAAU,WACdzM,EAASjC,EAAYF,MACpB,KAEEA,EACH,OAAO,kBAAC,IAAD,CAAU8X,GAAG,eAGtB,IA+DmBhV,EArDboD,EAAS6B,GAAiB/H,GAE1Bsc,EAAqB,SAACC,GAC1BvG,QAAQC,IAAIsG,GACZ,IAAMtc,EAASuc,KAAEC,UAAUJ,GAC3BE,EAAcpW,SAAQ,SAACW,GACrB7G,EAAO6G,GAAK,MAEd3E,EAAS1B,EAAUR,KAiCfyc,EAAc,SAAC5Z,GAAD,OAAW,WAC7B,IAAM7C,EAASuc,KAAEC,UAAUJ,GAC3BpU,EAAc9B,SAAQ,SAACW,GACjB7G,EAAO6G,GAAGqK,QAAQrO,GAAS,EAC7B7C,EAAO6G,GAAGxG,KAAKwC,GAEf7C,EAAO6G,GAAG6B,OAAO1I,EAAO6G,GAAGqK,QAAQrO,GAAQ,MAG/CX,EAAS1B,EAAUR,MAYf0c,EAAsB,kBAAM5X,EAAQzE,KAAK,cAQ/C,OACE,yBAAKgC,UAAWL,EAAQoC,MACtB,kBAACa,EAAA,EAAD,CAAM5C,UAAWL,EAAQjC,UACvB,kBAACmF,EAAA,EAAD,CAAa7C,UAAWL,EAAQuZ,iBAC9B,kBAAC,GAAD,CACEtV,OAAQA,EACR3E,QAtFU,SAACgH,GACnB,IAAM3B,EAAQqB,EAAckJ,QAAQ5I,GAChC3B,GAAS,EACXqB,EAAcU,OAAO/B,EAAO,GAE5BqB,EAAc3H,KAAKiI,GAErBF,EAAiB,aAAIJ,KAgFb4I,SAAUwL,EACVpU,cAAeA,MAIrB,kBAAC/C,EAAA,EAAD,CAAM5C,UAAWL,EAAQwZ,UACvB,kBAACtW,EAAA,EAAD,KACE,yBAAK7C,UAAWL,EAAQyZ,kBACtB,kBAACnW,EAAA,EAAD,CAAQF,QAAQ,WAAW9D,QA1Ed,WACrB,IAAMgb,EAAa,aAAO,IAAI1V,MAAM7G,EAASrB,OAAOyF,QACpDiE,EAAiBkU,GACjBD,EAAmBC,KAuEX,aAGA,kBAAChX,EAAA,EAAD,CAAQF,QAAQ,WAAW9D,QAvEf,WACpB,IAAMgb,EAAgB,aAAI,IAAI1V,MAAM7G,EAASpB,MAAMwF,QAAQ3C,KACzD,SAACrB,GAAD,OAAOA,EAAIJ,EAASrB,MAAQ,KAE9B0J,EAAiBkU,GACjBD,EAAmBC,KAkEX,YAGA,kBAAChX,EAAA,EAAD,CAAQF,QAAQ,WAAW9D,QAlEJ,WAC/B,IAAMgb,EAAgB,aAAI,IAAI1V,MAAM,GAAGzC,QAAQ3C,KAC7C,SAACrB,GAAD,OAAOA,EAAIJ,EAASrB,SAEtB0J,EAAiBkU,GACjBD,EAAmBC,KA6DX,wBAGA,kBAAChX,EAAA,EAAD,CAAQF,QAAQ,WAAW9D,QA7DP,WAC5B,IAAMgb,EAAgB,aAAI,IAAI1V,MAAM,GAAGzC,QAAQ3C,KAC7C,SAACrB,GAAD,OAAOA,EAAIJ,EAASrB,MAAQqB,EAASpB,KAAO,KAE9CyJ,EAAiBkU,GACjBD,EAAmBC,KAwDX,sBAIF,yBAAKja,UAAWL,EAAQyQ,QACtB,kBAACkK,GAAA,EAAD,CACEC,KAAM,0BAAMva,UAAWmX,aAAKxX,EAAQ0Z,SAAU1Z,EAAQ4Z,OACtD5Y,SAhDOH,EAgDY,YA/CJ,IAAzBmF,EAAc9H,SAAgBkc,EAAYpU,EAAc,MACpDoU,EAAYpU,EAAc,IAAIkJ,QAAQrO,IAAU,GA+C1Cga,YACE,0BAAMxa,UAAWmX,aAAKxX,EAAQ2Z,iBAAkB3Z,EAAQ4Z,OAE1DhY,SAAU6Y,EAAY,aAExB,kBAACE,GAAA,EAAD,CACEC,KAAM,0BAAMva,UAAWmX,aAAKxX,EAAQ0Z,SAAU1Z,EAAQc,SACtD+Z,YACE,0BACExa,UAAWmX,aAAKxX,EAAQ2Z,iBAAkB3Z,EAAQc,SAGtDc,SAAU6Y,EAAY,aAExB,kBAACE,GAAA,EAAD,CACEC,KAAM,0BAAMva,UAAWmX,aAAKxX,EAAQ0Z,SAAU1Z,EAAQoT,QACtDyH,YACE,0BACExa,UAAWmX,aAAKxX,EAAQ2Z,iBAAkB3Z,EAAQoT,QAGtDxR,SAAU6Y,EAAY,aAExB,kBAACE,GAAA,EAAD,CACEC,KAAM,0BAAMva,UAAWmX,aAAKxX,EAAQ0Z,SAAU1Z,EAAQ6Z,SACtDgB,YACE,0BACExa,UAAWmX,aAAKxX,EAAQ2Z,iBAAkB3Z,EAAQ6Z,SAGtDjY,SAAU6Y,EAAY,aAExB,kBAACE,GAAA,EAAD,CACEC,KAAM,0BAAMva,UAAWmX,aAAKxX,EAAQ0Z,SAAU1Z,EAAQ8Z,SACtDe,YACE,0BACExa,UAAWmX,aAAKxX,EAAQ2Z,iBAAkB3Z,EAAQ8Z,SAGtDlY,SAAU6Y,EAAY,eAI5B,kBAACpX,EAAA,EAAD,CAAahD,UAAWL,EAAQ+Z,aAC9B,kBAACzW,EAAA,EAAD,CAAQhE,QAvFD,kBAAMwD,EAAQgY,UAuFI1X,QAAQ,YAAjC,QAGA,kBAACE,EAAA,EAAD,CAAQzC,MAAM,UAAUvB,QA3Fd,kBAAM4a,GAAe,IA2Fa9W,QAAQ,aAApD,UAKJ,kBAAC8M,GAAA,EAAD,CAAQ3C,KAAM0M,EAAcxM,QA9FZ,kBAAMyM,GAAe,KA+FnC,kBAAC9J,GAAA,EAAD,oBACA,kBAACC,GAAA,EAAD,KACE,kBAAC0K,GAAA,EAAD,oFAIA,kBAAC1G,GAAA,EAAD,CACE2G,WAAS,EACTC,WAAS,EACT3U,GAAG,aACH6K,MAAM,cACNY,OAAO,QACPpQ,MAAsB,sBAAfwY,EAAqC,GAAKA,EACjDvY,SA3GqB,SAACC,GAAD,OAAOtD,EAAcsD,EAAEC,OAAOH,WA8GvD,kBAAC2O,GAAA,EAAD,KACE,kBAAChN,EAAA,EAAD,CAAQzC,MAAM,UAAUvB,QAASob,GAAjC,yBAGA,kBAACpX,EAAA,EAAD,CACEzC,MAAM,UACNvB,QAlHS,WACjB,IAAM4b,EAAU5Z,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MACtEyZ,EAAQf,GAAcC,EACtB5Y,aAAa2Z,QAAQ,kBAAmB7Z,KAAKmE,UAAUyV,IACvDR,KA+GQnX,UAAW4W,GAA6B,sBAAfA,GAH3B,yBCjSJvb,GAAYC,YAAW,CAC3BuD,KAAM,KA4BOgZ,OAzBf,WACE,IAAMpb,EAAUpB,KAChB,OACE,yBAAKyB,UAAWL,EAAQoC,MACtB,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiZ,KAAK,cACV,kBAACxY,EAAD,OAEF,kBAAC,IAAD,CAAOwY,KAAK,oBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,UCrBKC,GATDC,YAAe,CAC3BC,QAAS,CACP9c,eAAgB+c,EAChB5d,iBAAkB6d,EAClB3d,SAAU4d,GACVtQ,eAAgBuQ,M,UCPLtb,GAFDub,eCUMrO,QACW,cAA7B2I,OAAOtK,SAASiQ,UAEe,UAA7B3F,OAAOtK,SAASiQ,UAEhB3F,OAAOtK,SAASiQ,SAASC,MACvB,2D,aCPNC,IAASC,OACP,kBAAC,IAAD,CAAkB3b,MAAOA,IACvB,kBAAC,IAAD,CAAUgb,MAAOA,IACf,kBAAC,KAAD,CAAYY,SAAS,KACnB,kBAAC,GAAD,SAINvT,SAASwT,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.51229ac5.chunk.js","sourcesContent":["export const LIGHTBARS = [\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n    get total() {\n      return this.front + this.rear + 6;\n    },\n  },\n];\n\nexport const COLOR_SCHEMA = [\n  {\n    title: 'Amber',\n    schema: ['#FFBF00', '#000000'],\n  },\n  {\n    title: 'Red',\n    schema: ['#FF0000', '#000000'],\n  },\n  {\n    title: 'Green',\n    schema: ['#00FF00', '#000000'],\n  },\n  {\n    title: 'Blue',\n    schema: ['#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red',\n    schema: ['#FFBF00', '#FF0000', '#000000'],\n  },\n  {\n    title: 'Amber, Green',\n    schema: ['#FFBF00', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Blue',\n    schema: ['#FFBF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Red, Green',\n    schema: ['#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Red, Blue',\n    schema: ['#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Green, Blue',\n    schema: ['#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Blue',\n    schema: ['#FFBF00', '#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Green, Blue',\n    schema: ['#FFBF00', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green, Blue',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Full Color (RGB)',\n    schema: [],\n  },\n];\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: null,\n    selectedColorSchema: null,\n    hasGreen: false,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload;\n    },\n    selectColorSchema: (state, action) => {\n      state.selectedColorSchema = action.payload;\n    },\n    setHasGreen: (state, action) => {\n      state.hasGreen = action.payload;\n    },\n  },\n});\n\nexport const { selectLightbar, selectColorSchema, setHasGreen } = slice.actions;\n\nexport const getLightbar = (state) => state.lightbarSelector.selectedModel;\nexport const getColorSchema = (state) =>\n  state.lightbarSelector.selectedColorSchema;\nexport const getHasGreen = (state) => state.lightbarSelector.hasGreen;\n\nexport default slice.reducer;\n","// eslint-disable no-parameter-reassign\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst getDefaultSchema = (lightbar) => {\n  const schema = [];\n  if (lightbar) {\n    for (let i = 0; i < lightbar.total; i += 1) {\n      schema.push([]);\n    }\n  }\n  return schema;\n};\n\nconst slice = createSlice({\n  name: 'lightbarSchema',\n  initialState: {\n    lightbar: null,\n    name: null,\n    schema: null,\n  },\n  reducers: {\n    setLightbar: (state, action) => {\n      state.lightbar = action.payload;\n      if (!state.schema || !state.schema.length) {\n        state.schema = getDefaultSchema(state.lightbar);\n      }\n    },\n    setSchemaName: (state, action) => {\n      state.name = action.payload;\n    },\n    setSchema: (state, action) => {\n      state.schema = action.payload;\n      if (!action.payload) {\n        state.name = null;\n      }\n    },\n  },\n});\n\nexport const { setLightbar, setSchemaName, setSchema } = slice.actions;\n\nexport const getSchemaState = (state) => state.lightbarSchema;\nexport const getLightbar = (state) => state.lightbarSchema.lightbar;\nexport const getSchemaName = (state) => state.lightbarSchema.name;\nexport const getSchema = (state) => state.lightbarSchema.schema;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport { setSchema } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    marginBottom: 10,\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nconst ListItems = ({ onClick, selected = null }) =>\n  LIGHTBARS.map((lightbar) => (\n    <ListItem\n      selected={selected?.model === lightbar.model}\n      key={lightbar.model}\n      onClick={() => onClick(lightbar)}\n      button\n    >\n      <ListItemText\n        primary={lightbar.model}\n        secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n      />\n    </ListItem>\n  ));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const onClick = (model) => {\n    dispatch(selectLightbar(model));\n    dispatch(setSchema(null));\n  };\n\n  return (\n    <List className={classes.list}>\n      <ListItems onClick={onClick} selected={selectedModel} />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport {\n  Select,\n  makeStyles,\n  MenuItem,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n  withStyles,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { green } from '@material-ui/core/colors';\nimport {\n  selectColorSchema,\n  getColorSchema,\n  getHasGreen,\n  setHasGreen,\n  getLightbar,\n} from './lightbar-selector-slice';\nimport {\n  setSchema,\n  setSchemaName,\n  getSchemaName,\n} from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  switch: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ColorSchemaList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedSchema = useSelector(getSchemaName);\n  const hasGreen = useSelector(getHasGreen);\n  const lightbar = useSelector(getLightbar);\n  const colorSchema = JSON.parse(\n    localStorage.getItem('lightbar-schema') || '{}',\n  );\n\n  const onChange = (e) => {\n    dispatch(setSchemaName(e.target.value));\n    dispatch(setSchema(colorSchema[e.target.value] || []));\n  };\n  const onGreenSwithChange = (e) => dispatch(setHasGreen(e.target.checked));\n\n  return (\n    <>\n      <Select\n        value={selectedSchema || ''}\n        onChange={onChange}\n        displayEmpty\n        className={classes.select}\n        inputProps={{ 'aria-label': 'Without label' }}\n      >\n        <MenuItem value=\"create-new-schema\">\n          <em>Create a new one</em>\n        </MenuItem>\n        {Object.keys(colorSchema).map(\n          (schema) =>\n            lightbar &&\n            lightbar.total === colorSchema[schema].length && (\n              <MenuItem key={schema} value={schema}>\n                {schema}\n              </MenuItem>\n            ),\n        )}\n      </Select>\n      {/*\n      <FormGroup>\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <GreenSwitch\n              name=\"hasGreen\"\n              onChange={onGreenSwithChange}\n              value={hasGreen}\n            />\n          }\n          label=\"Includes Green Light\"\n        />\n      </FormGroup>\n      */}\n    </>\n  );\n}\n\nexport default ColorSchemaList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport {\n  makeStyles,\n  Typography,\n  CardContent,\n  CardActions,\n  Button,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LightbarList from './lightbar-list';\nimport { getLightbar } from './lightbar-selector-slice';\nimport ColorSchemaList from './color-schema-list';\nimport { getSchemaName } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedLightbar = useSelector(getLightbar);\n  const selectedColorSchema = useSelector(getSchemaName);\n  // const routeToLightbar = () => history.push('/lightbar');\n  const routeToLightbar = () => history.push('/lightbar/schema');\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">Lightbars</Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n          <Typography variant=\"h6\">Color Schema</Typography>\n          <Typography className={classes.subtitle}>\n            Select the color schema of the lightbar\n          </Typography>\n          <ColorSchemaList />\n        </CardContent>\n        <CardActions className={classes.button}>\n          <Button\n            color=\"primary\"\n            disabled={!selectedLightbar || !selectedColorSchema}\n            variant=\"contained\"\n            onClick={routeToLightbar}\n          >\n            Start Configurator\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import FileSaver from 'file-saver';\nimport { rgbToHex as convertToHex } from '@material-ui/core/styles';\n\nexport const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = `0${hex}`;\n  }\n\n  return hex;\n};\n\nexport const rgbToHex = (value) => {\n  const color = value || { r: 0, g: 0, b: 0 };\n  return convertToHex(`rgb(${color.r}, ${color.g}, ${color.b})`).toUpperCase();\n};\n\nexport const createBinaryBlob = (cycles) => {\n  if (!cycles || !cycles.length) {\n    return null;\n  }\n\n  const lightLength = cycles[0].lights.length;\n  let length = 3;\n  cycles.forEach((c) => {\n    length += c.repeat * lightLength * 3;\n  });\n  const buffer = new ArrayBuffer(length);\n  const dv = new DataView(buffer);\n\n  dv.setUint8(0, lightLength);\n  dv.setUint16(1, cycles.length);\n\n  let index = 3;\n\n  cycles.forEach((c) =>\n    [...new Array(+c.repeat).keys()].forEach(() =>\n      c.lights.forEach((l) =>\n        [\n          (l.color.r * l.color.a).toFixed(0),\n          (l.color.g * l.color.a).toFixed(0),\n          (l.color.b * l.color.a).toFixed(0),\n        ].forEach((v) => dv.setUint8(index++, v)),\n      ),\n    ),\n  );\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob = (data) => {\n  const buffer = new ArrayBuffer(\n    Math.ceil(data.length / 8) * 8 * data[0].length * 3,\n  );\n  const dv = new DataView(buffer);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let i = 0; i < Math.ceil(data.length / 8); i += 1) {\n    for (let r = 0; r < data[0].length; r += 1) {\n      for (let c = 0; c < 8; c += 1) {\n        const binaryIndex = i * 8 * data[0].length * 3 + r * 8 + c * 3;\n        if (data[i * 8 + c]) {\n          data[i * 8 + c][r].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        } else {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        }\n      }\n    }\n  }\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createJSONBlob = (lightbar) =>\n  new Blob([JSON.stringify(lightbar)], { type: 'application/json' });\n\nexport const saveFile = (blob, name) => {\n  FileSaver.saveAs(blob, name);\n};\n\nexport const getDefaultLights = (lightbar) =>\n  [...Array(lightbar.front + lightbar.rear + 6).keys()].map(() => ({\n    color: {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    },\n  }));\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  createJSONBlob,\n  createBinaryBlob,\n  getDefaultLights,\n  saveFile,\n} from '../../app/utils';\n\nconst initialState = {\n  lightbar: null,\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: [0],\n  showPreview: false,\n  latestSelectedColor: null,\n};\n\nexport const slice = createSlice({\n  name: 'lightbar',\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n      ...initialState,\n      lightbar: action.payload,\n    }),\n    setSelectedCycle: (state, action) => {\n      state.selectedCycle = action.payload;\n    },\n    setSelectedLight: (state, action) => {\n      if (action.payload.shouldSetColor && state.latestSelectedColor) {\n        state.cycles[state.selectedCycle].lights[action.payload.id].color =\n          state.latestSelectedColor;\n      }\n\n      state.selectedLight = action.payload.id;\n    },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights: action.payload || getDefaultLights(state.lightbar),\n        repeat: 1,\n      });\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    duplicateCycle: (state) => {\n      state.cycles.push(state.cycles[state.selectedCycle]);\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setCycleRepeat: (state, action) => {\n      if (!isNaN(action.payload.repeat) && action.payload.repeat > 0) {\n        state.cycles[action.payload.id].repeat = action.payload.repeat;\n      } else if (action.payload.repeat === '') {\n        state.cycles[action.payload.id].repeat = 1;\n      }\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle].lights[state.selectedLight[0]] =\n        action.payload;\n      state.latestSelectedColor = action.payload.color;\n    },\n    setInitialState: (state) => {\n      state = initialState;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    saveAsFile: (state, action) => {\n      const [blob, type] = action.payload\n        ? [\n          createJSONBlob({ lightbar: state.lightbar, cycles: state.cycles }),\n          'json',\n        ]\n        : [createBinaryBlob(state.cycles), 'bin'];\n\n      saveFile(blob, `${state.lightbar.model}-${new Date().getTime()}.${type}`);\n    },\n  },\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  duplicateCycle,\n  deleteCycle,\n  setCycleRepeat,\n  setLightSetting,\n  setInitialState,\n  setShowPreview,\n  saveAsFile,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getLatestSelectedColor = (state) =>\n  state.lightbar.latestSelectedColor;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\nexport const getShowPreview = (state) => state.lightbar.showPreview;\n\nexport default slice.reducer;\n","// prettier-ignore\nconst fontMap = {\n  column: 5,\n  row: 7,\n  chars: {\n    ' ': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 0x20, Space\n    '!': [0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04], // 0x21, !\n    '\"': [0x09, 0x09, 0x12, 0x00, 0x00, 0x00, 0x00], // 0x22, \"\n    '#': [0x0a, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x0a], // 0x23, #\n    '$': [0x04, 0x0f, 0x14, 0x0e, 0x05, 0x1e, 0x04], // 0x24, $\n    '%': [0x19, 0x19, 0x02, 0x04, 0x08, 0x13, 0x13], // 0x25, %\n    '&': [0x04, 0x0a, 0x0a, 0x0a, 0x15, 0x12, 0x0d], // 0x26, &\n    \"'\": [0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00], // 0x27, '\n    '(': [0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02], // 0x28, (\n    ')': [0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08], // 0x29, )\n    '*': [0x04, 0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x04], // 0x2a, *\n    '+': [0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00], // 0x2b, +\n    ',': [0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x08], // 0x2c, ,\n    '-': [0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00], // 0x2d, -\n    '.': [0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c], // 0x2e, .\n    '/': [0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x10], // 0x2f, /\n    '0': [0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e], // 0x30, 0\n    '1': [0x04, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x0e], // 0x31, 1\n    '2': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1f], // 0x32, 2\n    '3': [0x0e, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0e], // 0x33, 3\n    '4': [0x02, 0x06, 0x0a, 0x12, 0x1f, 0x02, 0x02], // 0x34, 4\n    '5': [0x1f, 0x10, 0x1e, 0x01, 0x01, 0x11, 0x0e], // 0x35, 5\n    '6': [0x06, 0x08, 0x10, 0x1e, 0x11, 0x11, 0x0e], // 0x36, 6\n    '7': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08], // 0x37, 7\n    '8': [0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e], // 0x38, 8\n    '9': [0x0e, 0x11, 0x11, 0x0f, 0x01, 0x02, 0x0c], // 0x39, 9\n    ':': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x0c, 0x00], // 0x3a, :\n    ';': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x04, 0x08], // 0x3b, ;\n    '<': [0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02], // 0x3c, <\n    '=': [0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x00], // 0x3d, =\n    '>': [0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08], // 0x3e, >\n    '?': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04], // 0x3f, ?\n    // -----------------------------------------------------------\n    '@': [0x0e, 0x11, 0x17, 0x15, 0x17, 0x10, 0x0f,],   // 0x40, @\n    'A': [0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11,],   // 0x41, A\n    'B': [0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e,],   // 0x42, B\n    'C': [0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e,],   // 0x43, C\n    'D': [0x1e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1e,],   // 0x44, D\n    'E': [0x1f, 0x10, 0x10, 0x1c, 0x10, 0x10, 0x1f,],   // 0x45, E\n    'F': [0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10,],   // 0x46, F\n    'G': [0x0e, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0f,],   // 0x37, G\n    'H': [0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11,],   // 0x48, H\n    'I': [0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e,],   // 0x49, I\n    'J': [0x1f, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c,],   // 0x4a, J\n    'K': [0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11,],   // 0x4b, K\n    'L': [0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f,],   // 0x4c, L\n    'M': [0x11, 0x1b, 0x15, 0x11, 0x11, 0x11, 0x11,],   // 0x4d, M\n    'N': [0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11,],   // 0x4e, N\n    'O': [0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x4f, O\n    'P': [0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10,],   // 0x50, P\n    'Q': [0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d,],   // 0x51, Q\n    'R': [0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11,],   // 0x52, R\n    'S': [0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e,],   // 0x53, S\n    'T': [0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x54, T\n    'U': [0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x55, U\n    'V': [0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x56, V\n    'W': [0x11, 0x11, 0x11, 0x15, 0x15, 0x1b, 0x11,],   // 0x57, W\n    'X': [0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11,],   // 0x58, X\n    'Y': [0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04,],   // 0x59, Y\n    'Z': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f,],   // 0x5a, Z\n    '[': [0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e,],   // 0x5b, [\n    '\\\\': [0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x01,],   // 0x5c, \\\n    ']': [0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e,],   // 0x5d, ]\n    '^': [0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00,],   // 0x5e, ^\n    '_': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,],   // 0x5f, _\n    //------------------------------------------------------------\n    '`': [0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x60, `\n    'a': [0x00, 0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d,],   // 0x61, a\n    'b': [0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c,],   // 0x62, b\n    'c': [0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x0e,],   // 0x63, c\n    'd': [0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07,],   // 0x64, d\n    'e': [0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f,],   // 0x65, e\n    'f': [0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08,],   // 0x66, f\n    'g': [0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e,],   // 0x67, g\n    'h': [0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11,],   // 0x68, h\n    'i': [0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e,],   // 0x69, i\n    'j': [0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c,],   // 0x6a, j\n    'k': [0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12,],   // 0x6b, k\n    'l': [0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x6c, l\n    'm': [0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11,],   // 0x6d, m\n    'n': [0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11,],   // 0x6e, n\n    'o': [0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e,],   // 0x6f, o\n    'p': [0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10,],   // 0x70, p\n    'q': [0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01,],   // 0x71, q\n    'r': [0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10,],   // 0x72, r\n    's': [0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e,],   // 0x73, s\n    't': [0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06,],   // 0x74, t\n    'u': [0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d,],   // 0x75, u\n    'v': [0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x76, v\n    'w': [0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a,],   // 0x77, w\n    'x': [0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11,],   // 0x78, x\n    'y': [0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e,],   // 0x79, y\n    'z': [0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f,],   // 0x7a, z\n    '{': [0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06,],   // 0x7b, {\n    '|': [0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04,],   // 0x7c, |\n    '}': [0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c,],   // 0x7d, }\n    '~': [0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x7e, ~\n    'DEL': [0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,],   // 0x7f, DEL\n  },\n};\n\nexport default fontMap;\n","import Font from './Fonts/5x7-font';\n\nexport const textToBitmap = (text, color = [0, 255, 0], padding = 0) => {\n  const bitMap = [];\n\n  // [...Array(Font.row).keys()].forEach((r) =>\n  //   [...Array(Font.column).keys()].forEach(() => {\n  //     bitMap[r] = [];\n  //     text.split('').forEach((char) => {\n  //       bitMap[r].push(\n  //         ...Font.chars[char][r]\n  //           .toString(2)\n  //           .padStart(char !== ' ' ? 5 : 1, 0)\n  //           .split('')\n  //           .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n  //         ...[...Array(padding).keys()].map(() => 0), // Adding padding to right\n  //       );\n  //     });\n  //   }),\n  // );\n\n  const textArray = text.split('');\n\n  [...Array(Font.column * text.length + text.length * padding).keys()].forEach(\n    (c) => {\n      bitMap[c] = [];\n\n      if (\n        padding &&\n        c % (Font.column + padding) === Font.column + padding - 1\n      ) {\n        [...Array(Font.row).keys()].map(() => bitMap[c].push([0, 0, 0]));\n      } else {\n        [...Array(Font.row).keys()].forEach((r) => {\n          const char = textArray[Math.floor(c / (Font.column + padding))];\n          // text.split('')[text.length%column].forEach((char) => {\n          bitMap[c].push(\n            Font.chars[char][r]\n              .toString(2)\n              .padStart(char !== ' ' ? 5 : 1, 0)\n              .split('')[c % (Font.column + padding)] === '1'\n              ? color\n              : [0, 0, 0],\n            // .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n          );\n          // });\n        });\n      }\n    },\n  );\n\n  return bitMap;\n};\n","import { textToBitmap } from '../MatrixLCD/utils';\n\nexport const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = 16;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, 8);\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n\nexport const getPixelsOfLines = ({ firstLine, ledColor, secondLine }) => {\n  const result = [];\n  const color = Object.values(ledColor).splice(0, 3);\n\n  if (firstLine && firstLine !== '') {\n    result.push({ x: 0, y: 0, pixels: textToBitmap(firstLine, color, 1) });\n  }\n\n  if (secondLine && secondLine !== '') {\n    result.push({ x: 0, y: 8, pixels: textToBitmap(secondLine, color, 1) });\n  }\n\n  return result;\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport { convertTextToBitmap } from './helpers';\nimport {\n  createMessageBoardBinaryBlob,\n  saveFile,\n  createJSONBlob,\n} from '../../app/utils';\n\nexport const DEFAULT_GRAPHICAL_TEXT = 'Hello World ⛔ سلام دنیا 😁';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 48,\n    firstLine: 'HELLO WORLD',\n    imageData: [],\n    isGraphical: false,\n    ledColor: { r: 0, g: 255, b: 0, a: 1 },\n    pixelCornerRadius: 0,\n    pixelSize: 10,\n    row: 16,\n    secondLine: 'Line 2',\n    scrollSpeed: 50,\n    spaceBetweenPixels: null,\n    style: null,\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setIsGraphical: (state, action) => {\n      state.isGraphical = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n    exportData: (state, action) => {\n      const [blob, type] = action.payload\n        ? [createJSONBlob(state.imageData), 'json']\n        : [createMessageBoardBinaryBlob(state.imageData), 'bin'];\n      saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n    },\n  },\n});\n\nexport const {\n  exportData,\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setIsGraphical,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard;\nexport const getColumn = (state) => state.scrollingBoard.column;\nexport const getFirstLine = (state) => state.scrollingBoard.firstLine;\nexport const getImageData = (state) => state.scrollingBoard.imageData;\nexport const getIsGraphical = (state) => state.scrollingBoard.isGraphical;\nexport const getLedColor = (state) => state.scrollingBoard.ledColor;\nexport const getRow = (state) => state.scrollingBoard.row;\nexport const getSecondLine = (state) => state.scrollingBoard.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard.scrollSpeed;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Typography,\n  Button,\n  MenuItem,\n  Menu,\n} from '@material-ui/core';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { saveAsFile, setShowPreview } from '../features/Lightbar/ligther-slice';\nimport { exportData } from '../features/ScrollingBoard/scrolling-board-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  previewButton: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [showAppbarButtons, setShowAppbarButton] = useState({\n    showPreview: false,\n    showExport: false,\n  });\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const onCloseContexMenu = (isJSON) => () => {\n    if (location.pathname.search(/lightbar$/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(saveAsFile(isJSON));\n      }\n    } else if (location.pathname.search(/message-board/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(exportData(isJSON));\n      }\n    }\n    setAnchorEl(null);\n  };\n  const openContextMenu = (e) => setAnchorEl(e.currentTarget);\n  const onPreviewClick = () => dispatch(setShowPreview(true));\n  const goHome = () => history.replace('/');\n\n  useEffect(() => {\n    if (location.pathname.search(/lightbar$/) > 0) {\n      setShowAppbarButton({ showPreview: true, showExport: true });\n    } else if (location.pathname.search(/message-board/) > 0) {\n      setShowAppbarButton({ showPreview: false, showExport: true });\n    } else {\n      setShowAppbarButton({ showPreview: false, showExport: false });\n    }\n  }, [location]);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={goHome}\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          DandR Electronic Lighbar Configurator\n        </Typography>\n        {showAppbarButtons.showPreview && (\n          <Button\n            className={classes.previewButton}\n            onClick={onPreviewClick}\n            startIcon={<PlayArrowIcon />}\n            variant=\"outlined\"\n          >\n            Preview\n          </Button>\n        )}\n        {showAppbarButtons.showExport && (\n          <IconButton\n            aria-label=\"Download\"\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={openContextMenu}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        )}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={onCloseContexMenu()}\n        >\n          <MenuItem onClick={onCloseContexMenu(false)}>Export BIN</MenuItem>\n          <MenuItem onClick={onCloseContexMenu(true)}>Export JSON</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect, Text, Group } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: (props) => (props.width ? 'auto' : 200),\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: (props) => props.width || 500,\n    width: (props) => props.width || '100%',\n  },\n});\n\nconst Light = ({\n  fill,\n  getStrokeColor,\n  height,\n  onClick,\n  overlay,\n  rotation,\n  scale,\n  shadowBlur,\n  stroke,\n  text,\n  width,\n  x,\n  y,\n}) => (\n  <>\n    <Rect\n      fill={fill}\n      height={height}\n      cornerRadius={5}\n      onClick={onClick}\n      rotation={rotation}\n      shadowBlur={shadowBlur}\n      stroke={stroke}\n      width={width}\n      x={x}\n      y={y}\n    />\n    <Group rotation={rotation} x={x} y={y}>\n      {overlay &&\n        overlay.map((color, index) => (\n          <Rect\n            key={color}\n            fill={color}\n            height={height}\n            cornerRadius={5}\n            onClick={onClick}\n            width={width / overlay.length}\n            x={index * (width / overlay.length)}\n            y={0}\n          />\n        ))}\n    </Group>\n    {text && (\n      <Text\n        align=\"center\"\n        fontSize={10 * scale}\n        height={height}\n        rotation={rotation}\n        text={text}\n        verticalAlign=\"middle\"\n        width={width}\n        x={x}\n        y={y}\n      />\n    )}\n  </>\n);\n\nfunction LightbarPreview({\n  lights = [],\n  overlays = [],\n  onClick,\n  selectedLight = [],\n  title,\n  width,\n}) {\n  const classes = useStyles({ width });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3);\n  const originalWidth = 57 * 2 + front.length * 45;\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n\n  const onLightClick = (id) => () => onClick && onClick(id);\n\n  const getStrokeColor = (id) =>\n    selectedLight.indexOf(id) > -1 ? 'red' : null;\n\n  const getColor = ({ r, g, b, a }) =>\n    rgbToHex({\n      r: (r * a).toFixed(0),\n      g: (g * a).toFixed(0),\n      b: (b * a).toFixed(0),\n    });\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={200 * scale}>\n        <Layer x={57 * scale}>\n          {front.map((l, index) => (\n            <Light\n              fill={getColor(l.color)}\n              height={24 * scale}\n              index={index}\n              key={index}\n              stroke={getStrokeColor(index)}\n              text={l.text}\n              onClick={onLightClick(index)}\n              overlay={overlays[index]}\n              scale={scale}\n              shadowBlur={shadowBlur}\n              width={40 * scale}\n              x={45 * index * scale}\n              y={20 * scale}\n            />\n          ))}\n        </Layer>\n        <Layer\n          rotation={-180}\n          x={57 * 2 * scale + lightbarWidth}\n          y={184 * scale}\n        >\n          <Light\n            x={58 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 2].color)}\n            rotation={135}\n            text={lights[front.length + 2].text}\n            shadowBlur={shadowBlur}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 2)}\n            overlay={overlays[front.length + 2]}\n            stroke={getStrokeColor(front.length + 2)}\n            scale={scale}\n          />\n          <Light\n            x={30 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 1].color)}\n            shadowBlur={shadowBlur}\n            text={lights[front.length + 1].text}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 1)}\n            overlay={overlays[front.length + 1]}\n            stroke={getStrokeColor(front.length + 1)}\n            scale={scale}\n          />\n          <Light\n            x={30 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length].color)}\n            shadowBlur={shadowBlur}\n            text={lights[front.length].text}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(front.length)}\n            overlay={overlays[front.length]}\n            stroke={getStrokeColor(front.length)}\n            scale={scale}\n          />\n        </Layer>\n        <Layer x={57 * scale}>\n          {rear.map((l, index) => (\n            <Light\n              key={index}\n              x={45 * index * scale}\n              y={140 * scale}\n              width={40 * scale}\n              height={24 * scale}\n              fill={getColor(lights[lights.length - 4 - index].color)}\n              shadowBlur={shadowBlur}\n              text={lights[lights.length - 4 - index].text}\n              cornerRadius={5}\n              onClick={onLightClick(lights.length - 4 - index)}\n              overlay={overlays[lights.length - 4 - index]}\n              stroke={getStrokeColor(lights.length - 4 - index)}\n              scale={scale}\n            />\n          ))}\n        </Layer>\n        <Layer>\n          <Light\n            x={55 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 1].color)}\n            text={lights[lights.length - 1].text}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 1)}\n            overlay={overlays[lights.length - 1]}\n            stroke={getStrokeColor(lights.length - 1)}\n            scale={scale}\n          />\n          <Light\n            x={27 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 2].color)}\n            text={lights[lights.length - 2].text}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 2)}\n            overlay={overlays[lights.length - 2]}\n            stroke={getStrokeColor(lights.length - 2)}\n            scale={scale}\n          />\n          <Light\n            x={27 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 3].color)}\n            text={lights[lights.length - 3].text}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 3)}\n            overlay={overlays[lights.length - 3]}\n            stroke={getStrokeColor(lights.length - 3)}\n            scale={scale}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nLightbarPreview.propTypes = {\n  lights: PropTypes.array,\n  onClick: PropTypes.func,\n  selectedLight: PropTypes.array,\n  title: PropTypes.node,\n  width: PropTypes.number,\n};\n\nexport default LightbarPreview;\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Dialog,\n  useMediaQuery,\n  useTheme,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getShowPreview,\n  setShowPreview,\n  getCycles,\n} from '../Lightbar/ligther-slice';\nimport LightbarPreview from '.';\n\nconst useStyles = makeStyles({});\n\nfunction LivePreview() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const showPreview = useSelector(getShowPreview);\n  const cycles = useSelector(getCycles);\n  const dispatch = useDispatch();\n  const [visibleCycle, setVisibleCycle] = useState(0);\n  const [repeat, setRepeat] = useState(1);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        cycles[visibleCycle].repeat > 1 &&\n        repeat < cycles[visibleCycle].repeat\n      ) {\n        setRepeat(repeat + 1);\n      } else {\n        setVisibleCycle(\n          visibleCycle + 1 < cycles.length ? visibleCycle + 1 : 0,\n        );\n        setRepeat(1);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  const handleClose = () => dispatch(setShowPreview(false));\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={showPreview}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Lightbar Preview</DialogTitle>\n        <DialogContent>\n          {cycles && cycles[visibleCycle] && (\n            <LightbarPreview lights={cycles[visibleCycle].lights} />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LivePreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport map from 'lodash/map'\nimport merge from 'lodash/merge'\nimport color from 'react-color/lib/helpers/color'\n\nimport { ColorWrap, Swatch } from 'react-color/lib/components/common'\n\nexport const SchemaColorPicker = ({ onChange, onSwatchHover, hex, colors, width, triangle,\n  styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      card: {\n        width,\n        background: '#fff',\n        border: '0 solid rgba(0,0,0,0.25)',\n        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n        borderRadius: '4px',\n        position: 'relative',\n      },\n      body: {\n        padding: '15px 9px 9px 15px',\n        height: 40,\n      },\n      label: {\n        fontSize: '18px',\n        color: '#fff',\n      },\n      triangle: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent #fff transparent',\n        position: 'absolute',\n      },\n      triangleShadow: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',\n        position: 'absolute',\n      },\n      hash: {\n        background: '#F0F0F0',\n        height: '30px',\n        width: '30px',\n        borderRadius: '4px 0 0 4px',\n        float: 'left',\n        color: '#98A1A4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      input: {\n        width: '100px',\n        fontSize: '14px',\n        color: '#666',\n        border: '0px',\n        outline: 'none',\n        height: '28px',\n        boxShadow: 'inset 0 0 0 1px #F0F0F0',\n        boxSizing: 'content-box',\n        borderRadius: '0 4px 4px 0',\n        float: 'left',\n        paddingLeft: '8px',\n      },\n      swatch: {\n        width: '30px',\n        height: '30px',\n        float: 'left',\n        borderRadius: '4px',\n        margin: '0 6px 6px 0',\n      },\n      clear: {\n        clear: 'both',\n      },\n    },\n    'hide-triangle': {\n      triangle: {\n        display: 'none',\n      },\n      triangleShadow: {\n        display: 'none',\n      },\n    },\n    'top-left-triangle': {\n      triangle: {\n        top: '-10px',\n        left: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        left: '12px',\n      },\n    },\n    'top-right-triangle': {\n      triangle: {\n        top: '-10px',\n        right: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        right: '12px',\n      },\n    },\n  }, passedStyles), {\n    'hide-triangle': triangle === 'hide',\n    'top-left-triangle': triangle === 'top-left',\n    'top-right-triangle': triangle === 'top-right',\n  })\n\n  const handleChange = (hexcode, e) => {\n    color.isValidHex(hexcode) && onChange({\n      hex: hexcode,\n      source: 'hex',\n    }, e)\n  }\n\n  return (\n    <div style={ styles.card } className={ `twitter-picker ${ className }` }>\n      <div style={ styles.triangleShadow } />\n      <div style={ styles.triangle } />\n\n      <div style={ styles.body }>\n        { map(colors, (c, i) => {\n          return (\n            <Swatch\n              key={ i }\n              color={ c }\n              hex={ c }\n              style={ styles.swatch }\n              onClick={ handleChange }\n              onHover={ onSwatchHover }\n              focusStyle={{\n                boxShadow: `0 0 4px ${ c }`,\n              }}\n            />\n          )\n        }) }\n      </div>\n    </div>\n  )\n}\n\nSchemaColorPicker.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  triangle: PropTypes.oneOf(['hide', 'top-left', 'top-right']),\n  colors: PropTypes.arrayOf(PropTypes.string),\n  styles: PropTypes.object,\n}\n\nSchemaColorPicker.defaultProps = {\n  width: 276,\n  colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3',\n    '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],\n  triangle: 'top-left',\n  styles: {},\n}\n\nexport default ColorWrap(SchemaColorPicker)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core';\nimport SchemaColorPicker from './schema-color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n    backgroundColor: 'white',\n  },\n  pallete: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: '2',\n  },\n  innerPallete: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n});\n\nconst ColorPicker = ({ colors, value, onClick, onChange }) => {\n  const classes = useStyles({ colors });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.pallete}>\n        <div className={classes.innerPallete} onClick={onClick} />\n        {colors?.length ? (\n          <SchemaColorPicker\n            colors={colors}\n            hex={false}\n            triangle=\"hide\"\n            onChange={onChange}\n          />\n        ) : (\n          <SketchPicker\n            presetColors={[\n              '#FFBF00',\n              '#FF0000',\n              '#00FF00',\n              '#0000FF',\n              '#000000',\n            ]}\n            color={value}\n            onChange={onChange}\n            disableAlpha\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default ColorPicker;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nimport { AlphaPicker } from 'react-color';\nimport ColorPicker from './color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: (prop) => `rgb(${Object.values(prop.color)})`,\n  },\n});\n\nfunction LightbarSetting({ colors, config, onChange }) {\n  const classes = useStyles({\n    color: config?.color || { r: 255, g: 255, b: 255 },\n  });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    console.log(target.value);\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]:\n          +target.value >= 0 && +target.value <= 255\n            ? target.value.trim()\n            : config?.color[target.name],\n      },\n    });\n  };\n\n  const onColorPickerChange = (color) =>\n    onChange({\n      color: color.rgb,\n    });\n\n  const onAlphaPickerChage = (color) => {\n    console.log(color);\n    onChange({\n      color: color.rgb,\n    });\n  };\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n  const isRGBSchema = (list) =>\n    ['#FF0000', '#00FF00', '#0000FF'].every((v) => list.indexOf(v) > -1);\n\n  const colorSchema = [...colors, '#000000'];\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader} title=\"Set the color\" />\n        <CardContent className={classes.cardContent}>\n          {config ? (\n            <div className={classes.colorInfo}>\n              {isRGBSchema(colorSchema) ? (\n                <>\n                  <TextField\n                    label=\"Red\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"r\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.r : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Green\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"g\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.g : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Blue\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"b\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.b : 255}\n                    variant=\"outlined\"\n                  />\n                </>\n              ) : (\n                <AlphaPicker\n                  color={config.color}\n                  onChange={onAlphaPickerChage}\n                  width={280}\n                />\n              )}\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {showColorPicker && (\n                <ColorPicker\n                  colors={isRGBSchema(colorSchema) ? [] : colorSchema}\n                  onClick={setColorPickerState}\n                  onChange={onColorPickerChange}\n                  value={config?.color}\n                />\n              )}\n            </div>\n          ) : (\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the\n              color.\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import React from 'react';\nimport {\n  List,\n  makeStyles,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCycles,\n  getSelectedCycle,\n  setSelectedCycle,\n  deleteCycle,\n  setCycleRepeat,\n} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: 150,\n  },\n  itemText: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTextFirstRow: {\n    alignSelf: 'normal',\n    borderBottom: '1px solid lightgray',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 5,\n  },\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  onRepeatChange,\n  repeat,\n  selected,\n}) => (\n  <ListItem\n    alignItems=\"center\"\n    className={className.item}\n    selected={selected}\n    onClick={onClick}\n    button\n  >\n    <ListItemText>\n      <div className={className.itemText}>\n        <div className={className.itemTextFirstRow}>\n          <Typography component=\"span\" variant=\"h6\">\n            {`Cycle #${id + 1}`}\n          </Typography>\n          <TextField\n            label=\"Repeat\"\n            inputProps={{ max: 999, min: 0 }}\n            min={1}\n            onChange={onRepeatChange}\n            size=\"small\"\n            type=\"number\"\n            value={repeat}\n            variant=\"outlined\"\n          />\n        </div>\n        <LightbarPreview lights={lights} width={(lights.length - 6) * 10} />\n      </div>\n    </ListItemText>\n    <ListItemSecondaryAction>\n      <IconButton arial-label=\"delete\" edge=\"end\" onClick={onDelete}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nfunction CycleList() {\n  const classes = useStyles();\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const dispatch = useDispatch();\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n  const onRepeatChange = (id) => (e) =>\n    dispatch(setCycleRepeat({ id, repeat: e.target.value }));\n\n  return (\n    <List className={classes.root}>\n      {cycles.map((c, i) => (\n        <Cycle\n          className={{\n            item: classes.item,\n            itemText: classes.itemText,\n            itemTextFirstRow: classes.itemTextFirstRow,\n          }}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          onRepeatChange={onRepeatChange(i)}\n          repeat={c.repeat}\n          selected={i === selectedCycle}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DuplicateIcon from '@material-ui/icons/FileCopyOutlined';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle, duplicateCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onAddClick = () => dispatch(addCycle());\n  const onDuplicateClick = () => dispatch(duplicateCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onDuplicateClick}\n            >\n              <DuplicateIcon />\n            </IconButton>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onAddClick}\n            >\n              <AddIcon />\n            </IconButton>\n            </>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, { useEffect } from 'react';\nimport Konva from 'konva';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { useMediaQuery } from '@material-ui/core';\nimport LightbarPreview from '../LightbarPreview';\nimport LivePreview from '../LightbarPreview/live-preview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {\n  getLightbar,\n  getColorSchema,\n} from '../LightbarSelector/lightbar-selector-slice';\nimport {\n  getSelectedCycle,\n  setLightbar,\n  addCycle,\n  getCycles,\n  setSelectedLight,\n  getSelectedLight,\n  setLightSetting,\n  getShowPreview,\n  getLatestSelectedColor,\n} from './ligther-slice';\nimport { getSchema } from '../LightbarSchema/lightbar-shema-slice';\nimport { rgbToHex } from '../../app/utils';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n    flexWrap: (props) => (props.mqMatches ? null : 'wrap-reverse'),\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const mqMatches = useMediaQuery('(min-width: 800px)');\n  const classes = useStyles({ mqMatches });\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n  const showPreview = useSelector(getShowPreview);\n  const colorSchema = useSelector(getSchema);\n  const latestSelectedColor = useSelector(getLatestSelectedColor);\n\n  const selectLight = (id) =>\n    dispatch(\n      setSelectedLight({\n        id: [id],\n        shouldSetColor:\n          colorSchema[id].indexOf(rgbToHex(latestSelectedColor)) > -1,\n      }),\n    );\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar(selectedModel));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      {!!lightbar && (\n        <div className={classes.root}>\n          <div className={classes.cycles}>\n            <Cycles />\n          </div>\n          <div className={classes.details}>\n            <LightbarPreview\n              lights={cycles[selectedCycle]?.lights}\n              onClick={selectLight}\n              selectedLight={selectedLight}\n              title={selectedModel.model}\n            />\n            <LighbarSetting\n              config={cycles[selectedCycle]?.lights[selectedLight]}\n              colors={colorSchema[selectedLight]}\n              onChange={setLightChange}\n            />\n          </div>\n        </div>\n      )}\n      {showPreview && <LivePreview />}\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stage, Rect, Layer } from 'react-konva';\nimport { makeStyles } from '@material-ui/core';\nimport { textToBitmap } from './utils';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: (props) => props.backgroundColor || '#565656',\n    borderRadius: 4,\n    borderColor: '#333',\n    display: 'inline-block',\n    padding: 5,\n    margin: 5,\n  },\n});\n\nfunction MatrixLCD({\n  backgroundColor,\n  column,\n  hasGlow = false,\n  pixelColor = 'green',\n  pixelCornerRadius,\n  pixelSize = 10,\n  pixelStatus = [],\n  row,\n  scrollSpeed = 1000,\n  space = 2,\n}) {\n  const classes = useStyles({ backgroundColor });\n  const scale =\n    window.innerWidth - 100 < (pixelSize + space) * column\n      ? (window.innerWidth - 100) / ((pixelSize + space) * column)\n      : 1;\n  const pixelRoom = (pixelSize + space) * scale;\n  const [scroll, setScroll] = React.useState(0);\n\n  React.useEffect(() => {\n    let intervalId = 0;\n    // if (pixelStatus[0].pixels.length > column) {\n    //   pixelStatus[0].pixels = [\n    //     ...pixelStatus[0].pixels,\n    //     ...[...new Array(column).keys()],\n    //   ];\n    // }\n    pixelStatus.forEach((status, i) => {\n      if (status.pixels.length && status.pixels.length > column) {\n        status.pixels = [...status.pixels, ...[...new Array(column).keys()]];\n      }\n    });\n    intervalId = setInterval(() => {\n      pixelStatus.forEach((status, i) => {\n        if (status.pixels.length && status.pixels.length > column) {\n          // status.pixels.forEach((r) => r.push(r.shift()));\n          pixelStatus[i].pixels.push(pixelStatus[i].pixels.shift());\n        }\n      });\n      setScroll((state) => state + 1);\n    }, scrollSpeed);\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [pixelStatus]);\n\n  const getPixelColor = (r, c) => {\n    let color = 'rgba(0, 0, 0, 0.1)';\n\n    pixelStatus.forEach((item) => {\n      if (c >= item.x && r >= item.y) {\n        if (\n          item.pixels[c - item.x] &&\n          item.pixels[c - item.x][r - item.y] &&\n          item.pixels[c - item.x][r - item.y].join('') !== '000'\n        ) {\n          // color = pixelColor;\n          color = `rgba(${item.pixels[c - item.x][r - item.y]})`;\n        }\n      }\n    });\n\n    return color;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stage width={pixelRoom * column} height={pixelRoom * row}>\n        <Layer x={0} y={0}>\n          {[...Array(row).keys()]\n            .map((r) =>\n              [...Array(column).keys()].map((c) => (\n                <Rect\n                  key={`${r}-${c}`}\n                  cornerRadius={pixelCornerRadius || 0}\n                  fill={getPixelColor(r, c)}\n                  x={space + pixelRoom * c}\n                  y={space + pixelRoom * r}\n                  width={pixelSize * scale}\n                  height={pixelSize * scale}\n                />\n              )),\n            )\n            .flat()}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nMatrixLCD.propTypes = {\n  backgroundColor: PropTypes.string,\n  column: PropTypes.number,\n  hasGlow: PropTypes.bool,\n  pixelColor: PropTypes.string,\n  pixelCornerRadius: PropTypes.number,\n  pixelSize: PropTypes.number,\n  pixelStatus: PropTypes.array,\n  row: PropTypes.number,\n  scrollSpeed: PropTypes.number,\n  space: PropTypes.number,\n};\n\nexport default MatrixLCD;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.string,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  CardHeader,\n  TextField,\n  Button,\n  InputAdornment,\n  FormControlLabel,\n  Switch,\n} from '@material-ui/core';\nimport Bmp from 'binary-bmp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport html2canvas from 'html2canvas';\nimport MatrixLCD from '../MatrixLCD';\nimport { textToBitmap } from '../MatrixLCD/utils';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport {\n  getBoardState,\n  setLedColor,\n  setBoardState,\n  DEFAULT_GRAPHICAL_TEXT,\n} from './scrolling-board-slice';\nimport { convertTextToBitmap, getPixelsOfLines } from './helpers';\nimport FontToolbar from './font-toolbar';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.isGraphical && props.style && props.style.fontFamily) ||\n        'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = configs.isGraphical\n    ? [{ x: 0, y: 0, pixels: configs.imageData }]\n    : getPixelsOfLines(configs);\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState();\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ledColor: color.rgb,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const changeTextMode = (e) => {\n    const newTextConfigs = {\n      firstLine: e.target.checked ? DEFAULT_GRAPHICAL_TEXT : 'Hello World',\n      imageData: e.target.checked\n        ? convertTextToBitmap(DEFAULT_GRAPHICAL_TEXT)\n        : null,\n    };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ...newTextConfigs,\n        isGraphical: e.target.checked,\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: convertTextToBitmap(e.target.value),\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={pixelStatus}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={configs.isGraphical}\n                  onChange={changeTextMode}\n                  name=\"isGraphical\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Graphical fonts\"\n            />\n          </div>\n          <div className={classes.row}>\n            {configs.isGraphical && (\n              <FontToolbar\n                className={classes.fullwidth}\n                onChange={changeStyle}\n                addEmoji={addEmoji}\n              />\n            )}\n            <TextField\n              className={clsx([classes.text, classes.fullwidth])}\n              label=\"First Line\"\n              name=\"firstLine\"\n              onChange={onChangeText}\n              size=\"small\"\n              type=\"text\"\n              value={configs.firstLine}\n              variant=\"outlined\"\n            />\n          </div>\n          {!configs.isGraphical && (\n            <div className={classes.row}>\n              <TextField\n                className={clsx([classes.textField, classes.fullwidth])}\n                label=\"Second Line\"\n                name=\"secondLine\"\n                onChange={onChangeText}\n                size=\"small\"\n                type=\"text\"\n                value={configs.secondLine}\n                variant=\"outlined\"\n              />\n            </div>\n          )}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n  makeStyles,\n  CardHeader,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  card: {\n    width: '60vw',\n  },\n  cardContent: {\n    textAlign: 'center',\n  },\n  button: {\n    minHeight: 60,\n  },\n});\n\nfunction Platforms() {\n  const classes = useStyles();\n  const history = useHistory();\n  const route = (url) => () => history.push(url);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title=\"Select The Device\" />\n        <CardContent className={classes.cardContent}>\n          <ButtonGroup\n            className={classes.buttonGroup}\n            orientation=\"vertical\"\n            color=\"primary\"\n          >\n            <Button className={classes.button} onClick={route('/lightbars')}>\n              Lightbars Configurator\n            </Button>\n            <Button\n              className={classes.button}\n              onClick={route('/message-board')}\n            >\n              Message Board Configurator\n            </Button>\n          </ButtonGroup>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Platforms;\n","import React from 'react';\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  Button,\n  makeStyles,\n  FormControlLabel,\n  Checkbox,\n  CardActions,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { getDefaultLights } from '../../app/utils';\nimport { getLightbar } from '../LightbarSelector/lightbar-selector-slice';\nimport LightbarPreview from '../LightbarPreview';\nimport {\n  setLightbar,\n  getSchemaName,\n  getSchema,\n  setSchema,\n} from './lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  lightbar: {\n    margin: '20px 10px 0 10px',\n    textAlign: 'center',\n    display: 'inline-block',\n    '& div': {},\n  },\n  lightbarContent: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  settings: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 600,\n    alignSelf: 'center',\n  },\n  selectionButtons: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& button': {\n      margin: 5,\n    },\n  },\n  colors: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 50,\n    border: '2.5px solid rgba(0, 0, 0, 0.25)',\n  },\n  selectedCheckbox: {\n    width: 20,\n    height: 20,\n    border: '2.5px solid',\n    borderRadius: 50,\n    borderColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  red: {\n    backgroundColor: '#FF0000',\n  },\n  green: {\n    backgroundColor: '#00FF00',\n  },\n  blue: {\n    backgroundColor: '#0000FF',\n  },\n  amber: {\n    backgroundColor: '#FFBF00',\n  },\n  white: {\n    backgroundColor: '#FFFFFF',\n  },\n  cardActions: {\n    justifyContent: 'flex-end',\n  },\n});\n\nconst LightbarSchema = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const lightbar = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const name = useSelector(getSchemaName);\n  const [selectedLight, setSelectedLight] = React.useState([]);\n  const [isDialogOpen, setDialogState] = React.useState(false);\n  const [schemaName, setSchemaName] = React.useState(name);\n  const lightColors = useSelector(getSchema);\n\n  React.useEffect(() => {\n    dispatch(setLightbar(lightbar));\n  }, []);\n\n  if (!lightbar) {\n    return <Redirect to=\"/lightbars\" />;\n  }\n\n  const handleClick = (id) => {\n    const index = selectedLight.indexOf(id);\n    if (index > -1) {\n      selectedLight.splice(index, 1);\n    } else {\n      selectedLight.push(id);\n    }\n    setSelectedLight([...selectedLight]);\n  };\n\n  const lights = getDefaultLights(lightbar);\n\n  const clearSelectedLight = (sectionLights) => {\n    console.log(sectionLights);\n    const schema = _.cloneDeep(lightColors);\n    sectionLights.forEach((l) => {\n      schema[l] = [];\n    });\n    dispatch(setSchema(schema));\n  };\n\n  const selectAllFront = () => {\n    const sectionLights = [...new Array(lightbar.front).keys()];\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllRear = () => {\n    const sectionLights = [...new Array(lightbar.rear).keys()].map(\n      (i) => i + lightbar.front + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllPassengerCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllDriverCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front + lightbar.rear + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectColor = (color) => () => {\n    const schema = _.cloneDeep(lightColors);\n    selectedLight.forEach((l) => {\n      if (schema[l].indexOf(color) < 0) {\n        schema[l].push(color);\n      } else {\n        schema[l].splice(schema[l].indexOf(color), 1);\n      }\n    });\n    dispatch(setSchema(schema));\n  };\n\n  const isChecked = (color) =>\n    selectedLight.length === 1 && lightColors[selectedLight[0]]\n      ? lightColors[selectedLight[0]].indexOf(color) > -1\n      : false;\n\n  const goForward = () => setDialogState(true);\n  const goBack = () => history.goBack();\n  const closeDialog = () => setDialogState(false);\n  const handleSchemaNameChange = (e) => setSchemaName(e.target.value);\n  const goToLightbarSetting = () => history.push('/lightbar');\n  const saveSchema = () => {\n    const schemas = JSON.parse(localStorage.getItem('lightbar-schema') || '{}');\n    schemas[schemaName] = lightColors;\n    localStorage.setItem('lightbar-schema', JSON.stringify(schemas));\n    goToLightbarSetting();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.lightbar}>\n        <CardContent className={classes.lightbarContent}>\n          <LightbarPreview\n            lights={lights}\n            onClick={handleClick}\n            overlays={lightColors}\n            selectedLight={selectedLight}\n          />\n        </CardContent>\n      </Card>\n      <Card className={classes.settings}>\n        <CardContent>\n          <div className={classes.selectionButtons}>\n            <Button variant=\"outlined\" onClick={selectAllFront}>\n              All Front\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllRear}>\n              All Rear\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllPassengerCorner}>\n              All Passenger Corner\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllDriverCorner}>\n              All Driver Corner\n            </Button>\n          </div>\n          <div className={classes.colors}>\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.red)} />}\n              checked={isChecked('#FF0000')}\n              checkedIcon={\n                <span className={clsx(classes.selectedCheckbox, classes.red)} />\n              }\n              onChange={selectColor('#FF0000')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.green)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.green)}\n                />\n              }\n              onChange={selectColor('#00FF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.blue)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.blue)}\n                />\n              }\n              onChange={selectColor('#0000FF')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.amber)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.amber)}\n                />\n              }\n              onChange={selectColor('#FFBF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.white)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.white)}\n                />\n              }\n              onChange={selectColor('#FFFFFF')}\n            />\n          </div>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button onClick={goBack} variant=\"outlined\">\n            Back\n          </Button>\n          <Button color=\"primary\" onClick={goForward} variant=\"contained\">\n            Next\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog open={isDialogOpen} onClose={closeDialog}>\n        <DialogTitle>Save Schema</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you want to save the schema to use it later, please enter a name\n            for it.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            id=\"schemaName\"\n            label=\"Schema Name\"\n            margin=\"dense\"\n            value={schemaName === 'create-new-schema' ? '' : schemaName}\n            onChange={handleSchemaNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={goToLightbarSetting}>\n            Continue without save\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={saveSchema}\n            disabled={!schemaName || schemaName === 'create-new-schema'}\n          >\n            Save and Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nLightbarSchema.propTypes = {};\n\nexport default LightbarSchema;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { LightbarSelector } from './features/LightbarSelector';\nimport Header from './app/header';\nimport Lightbar from './features/Lightbar';\nimport ScrollingBoard from './features/ScrollingBoard';\n\nimport './App.css';\nimport Platforms from './features/Platforms';\nimport LightbarSchema from './features/LightbarSchema';\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Switch>\n        <Route path=\"/lightbars\">\n          <LightbarSelector />\n        </Route>\n        <Route path=\"/lightbar/schema\">\n          <LightbarSchema />\n        </Route>\n        <Route path=\"/lightbar\">\n          <Lightbar />\n        </Route>\n        <Route path=\"/message-board\">\n          <ScrollingBoard />\n        </Route>\n        <Route path=\"/\">\n          <Platforms />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport lightbarSchemaReducer from '../features/LightbarSchema/lightbar-shema-slice';\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\nimport scrollingBoardReducer from '../features/ScrollingBoard/scrolling-board-slice';\n\nconst store = configureStore({\n  reducer: {\n    lightbarSchema: lightbarSchemaReducer,\n    lightbarSelector: lightbarSelectorReducer,\n    lightbar: lightbarReducer,\n    scrollingBoard: scrollingBoardReducer,\n  },\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport theme from './app/theme';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}