{"version":3,"sources":["features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/color-schema-list.js","features/LightbarSelector/index.js","app/utils.js","features/Lightbar/ligther-slice.js","app/header.js","features/LightbarPreview/index.js","features/LightbarPreview/live-preview.js","features/Lightbar/LightbarSetting/schema-color-picker.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","features/MatrixLCD/index.js","features/ScrollingBoard/helpers.js","features/ScrollingBoard/scrolling-board-slice.js","features/ScrollingBoard/font-toolbar.js","features/ScrollingBoard/index.js","features/Platforms/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["LIGHTBARS","model","front","rear","COLOR_SCHEMA","title","schema","slice","createSlice","name","initialState","selectedModel","selectedColorSchema","hasGreen","reducers","selectLightbar","state","action","payload","selectColorSchema","setHasGreen","actions","getLightbar","lightbarSelector","getColorSchema","getHasGreen","useStyles","makeStyles","list","border","borderRadius","marginTop","marginBottom","maxHeight","overflow","ListItems","onClick","selected","map","lightbar","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","console","log","dispatch","useDispatch","List","className","theme","select","width","spacing","switch","withStyles","switchBase","color","green","backgroundColor","checked","track","Switch","ColorSchemaList","selectedSchema","Select","value","onChange","e","target","displayEmpty","inputProps","MenuItem","root","display","flexDirection","alignContent","justifyContent","minHeight","card","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","Card","CardContent","Typography","variant","CardActions","Button","disabled","push","rgbToHex","Object","values","v","hex","Number","toString","length","toHex","join","createBinaryBlob","cycles","lightLength","lights","buffer","ArrayBuffer","dv","DataView","setUint8","setUint16","index","forEach","c","l","r","a","toFixed","g","b","Blob","type","selectedCycle","selectedLight","showPreview","latestSelectedColor","setLightbar","setSelectedCycle","setSelectedLight","addCycle","Array","keys","i","duplicateCycle","deleteCycle","splice","setLightSetting","setInitialState","setShowPreview","saveAsFile","JSON","stringify","blob","FileSaver","saveAs","saveFile","Date","getTime","getCycles","getSelectedCycle","getSelectedLight","getShowPreview","menuButton","marginRight","flexGrow","previewButton","borderColor","Header","location","useLocation","useState","showAppbarButtons","setShowAppbarButton","React","anchorEl","setAnchorEl","onCloseContexMenu","isJSON","useEffect","pathname","search","AppBar","position","Toolbar","IconButton","edge","aria-label","replace","startIcon","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","height","props","marginLeft","maxWidth","minWidth","LightbarPreview","containerRef","useRef","originalWidth","scale","lightbarWidth","shadowBlur","onLightClick","getStrokeColor","getColor","ref","x","y","fill","cornerRadius","stroke","rotation","LivePreview","useTheme","fullScreen","useMediaQuery","breakpoints","down","visibleCycle","setVisibleCycle","interval","setInterval","clearInterval","Dialog","aria-labelledby","DialogTitle","DialogContent","SchemaColorPicker","onSwatchHover","colors","triangle","styles","passedStyles","reactCSS","merge","background","boxShadow","body","padding","label","borderStyle","borderWidth","triangleShadow","hash","float","alignItems","input","outline","boxSizing","paddingLeft","swatch","margin","clear","top","left","right","handleChange","hexcode","isValidHex","source","style","onHover","focusStyle","defaultProps","ColorWrap","zIndex","pallete","innerPallete","bottom","ColorPicker","presetColors","disableAlpha","cardHeader","blue","cardContent","colorInfo","colorView","prop","LightbarSetting","config","showColorPicker","setShowColorPicker","onValueChange","trim","setColorPickerState","CardHeader","rgb","TextField","max","min","size","item","Cycle","onDelete","ListItemSecondaryAction","arial-label","CycleList","Cycles","flexWrap","mqMatches","details","Lightbar","colorSchema","change","to","MatrixLCD","column","pixelCornerRadius","hasGlow","pixelColor","pixelSize","pixelStatus","row","scrollSpeed","space","window","innerWidth","pixelRoom","setScroll","intervalId","pixels","status","shift","getPixelColor","flat","convertTextToBitmap","text","userStyle","canvas","document","createElement","fontFamily","fontStyle","textColor","font","ctx","getContext","measureText","getTextWidth","textBaseline","fillStyle","fillRect","fillText","dataImage","data","col","pixel","convertToRowBaseArray","getImageData","firstLine","imageData","ledColor","secondLine","spaceBetweenPixels","setColumn","setImageData","setFirstLine","setLedColor","setPixelCornerRadius","setRow","setSecondLine","setScrollSpeed","setBoardState","getBoardState","scrollingBoard","emojiIcon","emojiPicker","formControl","toolbar","FontToolbar","addEmoji","setStyles","isEmojiPickerVisible","setEmojiPickerVisibility","onFontChange","clsx","FormControl","InputLabel","labelId","onSelect","emoji","matrixLCD","textAlign","textField","fullwidth","ScrollingBoard","configs","textStyles","setTextStyle","InputProps","endAdornment","InputAdornment","native","Platforms","route","url","ButtonGroup","buttonGroup","orientation","App","path","store","configureStore","reducer","lightbarSelectorReducer","lightbarReducer","scrollingBoardReducer","createMuiTheme","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0417dc99.chunk.js","sourcesContent":["export const LIGHTBARS = [\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n  },\n];\n\nexport const COLOR_SCHEMA = [\n  {\n    title: 'Amber',\n    schema: ['#FFBF00', '#000000'],\n  },\n  {\n    title: 'Red',\n    schema: ['#FF0000', '#000000'],\n  },\n  {\n    title: 'Green',\n    schema: ['#00FF00', '#000000'],\n  },\n  {\n    title: 'Blue',\n    schema: ['#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red',\n    schema: ['#FFBF00', '#FF0000', '#000000'],\n  },\n  {\n    title: 'Amber, Green',\n    schema: ['#FFBF00', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Blue',\n    schema: ['#FFBF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Red, Green',\n    schema: ['#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Red, Blue',\n    schema: ['#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Green, Blue',\n    schema: ['#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Blue',\n    schema: ['#FFBF00', '#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Green, Blue',\n    schema: ['#FFBF00', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green, Blue',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Full Color (RGB)',\n    schema: [],\n  },\n];\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: null,\n    selectedColorSchema: null,\n    hasGreen: false,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload;\n    },\n    selectColorSchema: (state, action) => {\n      state.selectedColorSchema = action.payload;\n    },\n    setHasGreen: (state, action) => {\n      state.hasGreen = action.payload;\n    },\n  },\n});\n\nexport const {\n  selectLightbar,\n  selectColorSchema,\n  setHasGreen,\n} = slice.actions;\n\nexport const getLightbar = state => state.lightbarSelector.selectedModel;\nexport const getColorSchema = state => state.lightbarSelector.selectedColorSchema;\nexport const getHasGreen = state => state.lightbarSelector.hasGreen;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport {useSelector, useDispatch} from 'react-redux';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    marginBottom: 10,\n    maxHeight: 150,\n    overflow: 'auto',\n  }\n});\n\nconst ListItems = ({ onClick, selected = null }) => LIGHTBARS.map(lightbar => (\n  <ListItem\n    selected={ selected?.model === lightbar.model }\n    key={lightbar.model}\n    onClick={() => onClick(lightbar)}\n    button\n  >\n    <ListItemText\n      primary={lightbar.model}\n      secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n    />\n  </ListItem>\n));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  console.log(selectedModel);\n  const dispatch = useDispatch();\n  const onClick = (model) => dispatch(selectLightbar(model));\n\n  return (\n    <List className={classes.list} >\n      <ListItems\n        onClick={onClick}\n        selected={selectedModel}\n      />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport {COLOR_SCHEMA} from './constants';\nimport {Select, makeStyles, MenuItem, Switch, FormGroup, FormControlLabel, withStyles} from '@material-ui/core';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectColorSchema, getColorSchema, getHasGreen, setHasGreen} from './lightbar-selector-slice';\nimport {green} from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  switch: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ColorSchemaList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedSchema = useSelector(getColorSchema);\n  const hasGreen = useSelector(getHasGreen);\n\n  const onChange = e => dispatch(selectColorSchema(e.target.value));\n  const onGreenSwithChange = e => dispatch(setHasGreen(e.target.checked));\n\n  return (\n    <>\n      <Select\n        value={selectedSchema || ''}\n        onChange={onChange}\n        displayEmpty\n        className={classes.select}\n        inputProps={{ 'aria-label': 'Without label' }}\n      >\n        <MenuItem value={null}>\n          <em>---</em>\n        </MenuItem>\n        {\n          COLOR_SCHEMA.map(schema =>\n            <MenuItem\n              key={schema.title}\n              value={schema}\n            >\n                {schema.title}\n            </MenuItem>\n          )\n        }\n      </Select>\n    { /*\n      <FormGroup>\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <GreenSwitch\n              name=\"hasGreen\"\n              onChange={onGreenSwithChange}\n              value={hasGreen}\n            />\n          }\n          label=\"Includes Green Light\"\n        />\n      </FormGroup>\n      */\n    }\n    </>\n  );\n}\n\nexport default ColorSchemaList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport {makeStyles, Typography, CardContent, CardActions, Button} from '@material-ui/core';\nimport LightbarList from './lightbar-list';\nimport {useSelector} from 'react-redux';\nimport {getLightbar, getColorSchema} from './lightbar-selector-slice';\nimport {useHistory} from 'react-router-dom';\nimport ColorSchemaList from './color-schema-list';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n})\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedLightbar = useSelector(getLightbar);\n  const selectedColorSchema = useSelector(getColorSchema);\n  const routeToLightbar = () => history.push('/lightbar');\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">\n            Lightbars\n          </Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n          <Typography variant=\"h6\">\n            Color Schema\n          </Typography>\n          <Typography className={classes.subtitle}>\n            Select the color schema of the lightbar\n          </Typography>\n          <ColorSchemaList />\n        </CardContent>\n          <CardActions\n              className={classes.button}\n          >\n            <Button\n              color=\"primary\"\n              disabled={!selectedLightbar || !selectedColorSchema}\n              variant=\"contained\"\n              onClick={routeToLightbar}\n            >\n              Start Configurator\n            </Button>\n          </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import FileSaver from \"file-saver\";\n\nexport const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = '0' + hex;\n  }\n\n  return hex;\n};\n\nexport const rgbToHex = (value) =>\n  Object.values(value).map(v => toHex(v)).join('');\n\nexport const createBinaryBlob = (cycles) => {\n  if (!cycles || !cycles.length) {\n    return null;\n  }\n\n  const lightLength = cycles[0].lights.length;\n  const length = 3 + (cycles.length * lightLength * 3);\n  const buffer = new ArrayBuffer(length);\n  const dv = new DataView(buffer);\n\n  dv.setUint8(0, lightLength);\n  dv.setUint16(1, cycles.length);\n\n  let index = 3;\n\n  cycles.forEach(\n    c => c.lights.forEach(\n      l => [\n        (l.color.r * l.color.a).toFixed(0),\n        (l.color.g * l.color.a).toFixed(0),\n        (l.color.b * l.color.a).toFixed(0),\n      ].forEach(\n        v => dv.setUint8(index++, v)\n      )\n    )\n  );\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createJSONBlob = (lightbar) => \n  new Blob([JSON.stringify(lightbar)], { type: 'application/json' });\n\nexport const saveFile = (blob, name) => {\n  FileSaver.saveAs(blob, name);\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { createJSONBlob, createBinaryBlob, saveFile } from '../../app/utils';\n\nconst initialState = {\n  lightbar: null,\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: 0,\n  showPreview: false,\n  latestSelectedColor: null,\n};\n\nconst getDefaultLights = (lightbar) =>\n  [...Array(lightbar.front + lightbar.rear + 6).keys()].map((i) => ({\n    color: {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    },\n  }));\n\nexport const slice = createSlice({\n  name: 'lightbar',\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n      ...initialState,\n      lightbar: action.payload,\n    }),\n    setSelectedCycle: (state, action) => {\n      state.selectedCycle = action.payload;\n    },\n    setSelectedLight: (state, action) => {\n      if (state.latestSelectedColor) {\n        state.cycles[state.selectedCycle].lights[action.payload].color =\n          state.latestSelectedColor;\n      }\n\n      state.selectedLight = action.payload;\n    },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights: action.payload || getDefaultLights(state.lightbar),\n      });\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    duplicateCycle: (state) => {\n      state.cycles.push(state.cycles[state.selectedCycle]);\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle].lights[state.selectedLight] =\n        action.payload;\n      state.latestSelectedColor = action.payload.color;\n    },\n    setInitialState: (state) => {\n      state = initialState;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    saveAsFile: (state, action) => {\n      const [blob, type] = action.payload\n        ? [\n          createJSONBlob({ lightbar: state.lightbar, cycles: state.cycles }),\n          'json',\n        ]\n        : [createBinaryBlob(state.cycles), 'bin'];\n\n      saveFile(blob, `${state.lightbar.model}-${new Date().getTime()}.${type}`);\n    },\n  },\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  duplicateCycle,\n  deleteCycle,\n  setLightSetting,\n  setInitialState,\n  setShowPreview,\n  saveAsFile,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\nexport const getShowPreview = (state) => state.lightbar.showPreview;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Typography,\n  Button,\n  MenuItem,\n  Menu,\n} from '@material-ui/core';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { saveAsFile, setShowPreview } from '../features/Lightbar/ligther-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  previewButton: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [showAppbarButtons, setShowAppbarButton] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const onCloseContexMenu = (isJSON) => () => {\n    if (isJSON !== null) {\n      dispatch(saveAsFile(isJSON));\n    }\n    setAnchorEl(null);\n  };\n  const openContextMenu = (e) => setAnchorEl(e.currentTarget);\n  const onPreviewClick = () => dispatch(setShowPreview(true));\n  const goHome = () => history.replace('/');\n\n  useEffect(() => {\n    console.log(location);\n    if (location.pathname.search(/lightbar$/) > 0) {\n      setShowAppbarButton(true);\n    } else {\n      setShowAppbarButton(false);\n    }\n  }, [location]);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={goHome}\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          DandR Electronic Lighbar Configurator\n        </Typography>\n        {showAppbarButtons && (\n          <>\n            <Button\n              className={classes.previewButton}\n              onClick={onPreviewClick}\n              startIcon={<PlayArrowIcon />}\n              variant=\"outlined\"\n            >\n              Preview\n            </Button>\n            <IconButton\n              aria-label=\"Download\"\n              color=\"inherit\"\n              edge=\"end\"\n              onClick={openContextMenu}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </>\n        )}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={onCloseContexMenu()}\n        >\n          <MenuItem onClick={onCloseContexMenu(false)}>Export BIN</MenuItem>\n          <MenuItem onClick={onCloseContexMenu(true)}>Export JSON</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: (props) => (props.width ? 'auto' : 200),\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: (props) => props.width || 500,\n    width: (props) => props.width || '100%',\n  },\n});\n\nfunction LightbarPreview({\n  lights = [],\n  onClick,\n  selectedLight,\n  title,\n  width,\n}) {\n  const classes = useStyles({ width });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3);\n  const originalWidth = 57 * 2 + front.length * 45;\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n\n  const onLightClick = (id) => () => onClick && onClick(id);\n\n  const getStrokeColor = (id) => (selectedLight === id ? 'red' : null);\n\n  const getColor = ({ r, g, b, a }) =>\n    `#${rgbToHex({\n      r: (r * a).toFixed(0),\n      g: (g * a).toFixed(0),\n      b: (b * a).toFixed(0),\n    })}`;\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={200 * scale}>\n        <Layer x={57 * scale}>\n          {front.map((l, index) => (\n            <Rect\n              key={index}\n              x={45 * index * scale}\n              y={20 * scale}\n              width={40 * scale}\n              height={24 * scale}\n              fill={getColor(l.color)}\n              shadowBlur={shadowBlur}\n              cornerRadius={5}\n              onClick={onLightClick(index)}\n              stroke={getStrokeColor(index)}\n            />\n          ))}\n        </Layer>\n        <Layer\n          rotation={-180}\n          x={57 * 2 * scale + lightbarWidth}\n          y={184 * scale}\n        >\n          <Rect\n            x={58 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 2)}\n            stroke={getStrokeColor(front.length + 2)}\n          />\n          <Rect\n            x={30 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 1].color)}\n            shadowBlur={shadowBlur}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 1)}\n            stroke={getStrokeColor(front.length + 1)}\n          />\n          <Rect\n            x={30 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(front.length)}\n            stroke={getStrokeColor(front.length)}\n          />\n        </Layer>\n        <Layer x={57 * scale}>\n          {rear.map((l, index) => (\n            <Rect\n              key={index}\n              x={45 * index * scale}\n              y={140 * scale}\n              width={40 * scale}\n              height={24 * scale}\n              fill={getColor(lights[lights.length - 4 - index].color)}\n              shadowBlur={shadowBlur}\n              cornerRadius={5}\n              onClick={onLightClick(lights.length - 4 - index)}\n              stroke={getStrokeColor(lights.length - 4 - index)}\n            />\n          ))}\n        </Layer>\n        <Layer>\n          <Rect\n            x={55 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 1].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 1)}\n            stroke={getStrokeColor(lights.length - 1)}\n          />\n          <Rect\n            x={27 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 2)}\n            stroke={getStrokeColor(lights.length - 2)}\n          />\n          <Rect\n            x={27 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 3].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 3)}\n            stroke={getStrokeColor(lights.length - 3)}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nexport default LightbarPreview;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Dialog, useMediaQuery, useTheme, DialogTitle, DialogContent } from '@material-ui/core';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getShowPreview, setShowPreview, getCycles} from '../Lightbar/ligther-slice';\nimport LightbarPreview from '.';\n\n\nconst useStyles = makeStyles({\n});\n\nfunction LivePreview () {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const showPreview = useSelector(getShowPreview);\n  const cycles = useSelector(getCycles);\n  const dispatch = useDispatch();\n  const [visibleCycle, setVisibleCycle] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setVisibleCycle(visibleCycle + 1 < cycles.length ?\n        visibleCycle + 1\n        : 0\n      );\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  const handleClose = () => dispatch(setShowPreview(false));\n\n  return(\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={showPreview}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n          <DialogTitle\n            id=\"responsive-dialog-title\">\n            Lightbar Preview\n          </DialogTitle>\n          <DialogContent>\n            { cycles && cycles[visibleCycle] &&\n              <LightbarPreview\n                lights={cycles[visibleCycle].lights}\n              />\n            }\n          </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LivePreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport map from 'lodash/map'\nimport merge from 'lodash/merge'\nimport color from 'react-color/lib/helpers/color'\n\nimport { ColorWrap, Swatch } from 'react-color/lib/components/common'\n\nexport const SchemaColorPicker = ({ onChange, onSwatchHover, hex, colors, width, triangle,\n  styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      card: {\n        width,\n        background: '#fff',\n        border: '0 solid rgba(0,0,0,0.25)',\n        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n        borderRadius: '4px',\n        position: 'relative',\n      },\n      body: {\n        padding: '15px 9px 9px 15px',\n        height: 40,\n      },\n      label: {\n        fontSize: '18px',\n        color: '#fff',\n      },\n      triangle: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent #fff transparent',\n        position: 'absolute',\n      },\n      triangleShadow: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',\n        position: 'absolute',\n      },\n      hash: {\n        background: '#F0F0F0',\n        height: '30px',\n        width: '30px',\n        borderRadius: '4px 0 0 4px',\n        float: 'left',\n        color: '#98A1A4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      input: {\n        width: '100px',\n        fontSize: '14px',\n        color: '#666',\n        border: '0px',\n        outline: 'none',\n        height: '28px',\n        boxShadow: 'inset 0 0 0 1px #F0F0F0',\n        boxSizing: 'content-box',\n        borderRadius: '0 4px 4px 0',\n        float: 'left',\n        paddingLeft: '8px',\n      },\n      swatch: {\n        width: '30px',\n        height: '30px',\n        float: 'left',\n        borderRadius: '4px',\n        margin: '0 6px 6px 0',\n      },\n      clear: {\n        clear: 'both',\n      },\n    },\n    'hide-triangle': {\n      triangle: {\n        display: 'none',\n      },\n      triangleShadow: {\n        display: 'none',\n      },\n    },\n    'top-left-triangle': {\n      triangle: {\n        top: '-10px',\n        left: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        left: '12px',\n      },\n    },\n    'top-right-triangle': {\n      triangle: {\n        top: '-10px',\n        right: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        right: '12px',\n      },\n    },\n  }, passedStyles), {\n    'hide-triangle': triangle === 'hide',\n    'top-left-triangle': triangle === 'top-left',\n    'top-right-triangle': triangle === 'top-right',\n  })\n\n  const handleChange = (hexcode, e) => {\n    color.isValidHex(hexcode) && onChange({\n      hex: hexcode,\n      source: 'hex',\n    }, e)\n  }\n\n  return (\n    <div style={ styles.card } className={ `twitter-picker ${ className }` }>\n      <div style={ styles.triangleShadow } />\n      <div style={ styles.triangle } />\n\n      <div style={ styles.body }>\n        { map(colors, (c, i) => {\n          return (\n            <Swatch\n              key={ i }\n              color={ c }\n              hex={ c }\n              style={ styles.swatch }\n              onClick={ handleChange }\n              onHover={ onSwatchHover }\n              focusStyle={{\n                boxShadow: `0 0 4px ${ c }`,\n              }}\n            />\n          )\n        }) }\n      </div>\n    </div>\n  )\n}\n\nSchemaColorPicker.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  triangle: PropTypes.oneOf(['hide', 'top-left', 'top-right']),\n  colors: PropTypes.arrayOf(PropTypes.string),\n  styles: PropTypes.object,\n}\n\nSchemaColorPicker.defaultProps = {\n  width: 276,\n  colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3',\n    '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],\n  triangle: 'top-left',\n  styles: {},\n}\n\nexport default ColorWrap(SchemaColorPicker)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core';\nimport SchemaColorPicker from './schema-color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n    backgroundColor: 'white',\n  },\n  pallete: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: '2',\n  },\n  innerPallete: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n});\n\nconst ColorPicker = ({ colors, value, onClick, onChange }) => {\n  const classes = useStyles({ colors });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.pallete}>\n        <div className={classes.innerPallete} onClick={onClick} />\n        {colors?.length ? (\n          <SchemaColorPicker\n            colors={colors}\n            hex={false}\n            triangle=\"hide\"\n            onChange={onChange}\n          />\n        ) : (\n          <SketchPicker\n            presetColors={[\n              '#FFBF00',\n              '#FF0000',\n              '#00FF00',\n              '#0000FF',\n              '#000000',\n            ]}\n            color={value}\n            onChange={onChange}\n            disableAlpha\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default ColorPicker;\n","import React, {useState} from 'react';\nimport { Card, CardContent, CardHeader, TextField, Typography, makeStyles, Button } from '@material-ui/core';\nimport {blue} from '@material-ui/core/colors';\n\nimport ColorPicker from './color-picker';\nimport {AlphaPicker} from 'react-color';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: prop => `rgb(${Object.values(prop.color)})`,\n  }\n});\n\nfunction LightbarSetting({ colors, config, onChange }) {\n  const classes = useStyles({ color: config?.color || { r: 255, g: 255, b: 255 } });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    console.log(target.value);\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]: +target.value >= 0 && +target.value <= 255 ?\n          target.value.trim()\n          : config?.color[target.name]\n      }\n    });\n  };\n\n  const onColorPickerChange = (color) => onChange({\n    color: color.rgb,\n  });\n\n  const onAlphaPickerChage = (color) => {\n    console.log(color);\n    onChange({\n      color: color.rgb,\n    });\n  };\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          className={classes.cardHeader}\n          title=\"Set the color\"\n        />\n        <CardContent className={classes.cardContent}>\n          { !!config ?\n            <div className={classes.colorInfo}>\n              { !colors.length ?\n                <>\n                  <TextField\n                    label=\"Red\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"r\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.r : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Green\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"g\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.g : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Blue\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"b\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.b : 255}\n                    variant=\"outlined\"\n                  />\n                </>\n                :\n                <AlphaPicker\n                  color={config.color}\n                  onChange={onAlphaPickerChage}\n                  width={280}\n                />\n              }\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {\n                showColorPicker &&\n                  <ColorPicker\n                    colors={colors}\n                    onClick={setColorPickerState}\n                    onChange={onColorPickerChange}\n                    value={config?.color}\n                  />\n              }\n            </div>\n            :\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the color.\n            </Typography>\n          }\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getCycles, getSelectedCycle, setSelectedCycle, deleteCycle} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: 75,\n  }\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  selected\n}) => (\n  <ListItem\n    alignItems=\"center\"\n    className={className}\n    selected={selected}\n    onClick={onClick}\n    button>\n    <ListItemText \n      primary={ `Cycle #${id + 1}` }\n    />\n    <LightbarPreview lights={lights} width={(lights.length - 6) * 10} />\n    <ListItemSecondaryAction>\n      <IconButton\n        arial-label=\"delete\"\n        edge=\"end\"\n        onClick={onDelete}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nfunction CycleList() {\n  const classes = useStyles();\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const dispatch = useDispatch();\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n\n  return (\n    <List className={classes.root}>\n      {\n        cycles.map((c, i) => <Cycle\n          className={classes.item}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          selected={i === selectedCycle}\n        />)\n      }\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DuplicateIcon from '@material-ui/icons/FileCopyOutlined';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle, duplicateCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onAddClick = () => dispatch(addCycle());\n  const onDuplicateClick = () => dispatch(duplicateCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onDuplicateClick}\n            >\n              <DuplicateIcon />\n            </IconButton>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onAddClick}\n            >\n              <AddIcon />\n            </IconButton>\n            </>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, {useEffect} from 'react';\nimport Konva from 'konva';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport LightbarPreview from '../LightbarPreview';\nimport LivePreview from '../LightbarPreview/live-preview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {getLightbar, getColorSchema} from '../LightbarSelector/lightbar-selector-slice';\nimport {getSelectedCycle, setLightbar, addCycle, getCycles, setSelectedLight, getSelectedLight, setLightSetting, getShowPreview} from './ligther-slice';\nimport {useMediaQuery} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n    flexWrap: props => props.mqMatches ? null : 'wrap-reverse',\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const mqMatches = useMediaQuery('(min-width: 800px)');\n  const classes = useStyles({mqMatches});\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar)\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n  const showPreview = useSelector(getShowPreview);\n  const colorSchema = useSelector(getColorSchema);\n\n  const selectLight = (id) => dispatch(setSelectedLight(id));\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar(selectedModel));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to='/' />;\n  }\n\n  console.log(selectedCycle);\n\n  return (\n    <>\n    { !!lightbar &&\n    <div className={classes.root}>\n      <div className={classes.cycles} >\n        <Cycles />\n      </div>\n      <div className={classes.details}>\n        <LightbarPreview\n          lights={cycles[selectedCycle]?.lights}\n          onClick={selectLight}\n          selectedLight={selectedLight}\n          title={selectedModel.model}\n        />\n        <LighbarSetting\n          config={cycles[selectedCycle]?.lights[selectedLight]}\n          colors={colorSchema.schema}\n          onChange={setLightChange}\n        />\n       </div>\n    </div>\n    }\n    { showPreview &&\n        <LivePreview />\n    }\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stage, Rect, Layer } from 'react-konva';\nimport { makeStyles } from '@material-ui/core';\nimport { textToBitmap } from './utils';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: (props) => props.backgroundColor || '#565656',\n    borderRadius: 4,\n    borderColor: '#333',\n    display: 'inline-block',\n    padding: 5,\n    margin: 5,\n  },\n});\n\nfunction MatrixLCD({\n  backgroundColor,\n  column,\n  hasGlow = false,\n  pixelColor = 'green',\n  pixelCornerRadius,\n  pixelSize = 10,\n  pixelStatus = [],\n  row,\n  scrollSpeed = 1000,\n  space = 2,\n}) {\n  const classes = useStyles({ backgroundColor });\n  const scale =\n    window.innerWidth - 100 < (pixelSize + space) * column\n      ? (window.innerWidth - 100) / ((pixelSize + space) * column)\n      : 1;\n  const pixelRoom = (pixelSize + space) * scale;\n  const [scroll, setScroll] = React.useState(0);\n\n  React.useEffect(() => {\n    let intervalId = 0;\n    if (pixelStatus[0].pixels.length > column) {\n      pixelStatus[0].pixels = [\n        ...pixelStatus[0].pixels,\n        ...[...new Array(column).keys()],\n      ];\n    }\n    pixelStatus.forEach((status, i) => {\n      if (status.pixels.length && status.pixels.length > column) {\n        status.pixels = [...status.pixels];\n        intervalId = setInterval(() => {\n          // status.pixels.forEach((r) => r.push(r.shift()));\n          pixelStatus[i].pixels.push(pixelStatus[i].pixels.shift());\n          setScroll((state) => state + 1);\n        }, scrollSpeed);\n      }\n    });\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [pixelStatus]);\n\n  const getPixelColor = (r, c) => {\n    let color = 'rgba(0, 0, 0, 0.1)';\n\n    pixelStatus.forEach((item) => {\n      if (c >= item.x && r >= item.y) {\n        if (\n          item.pixels[c - item.x] &&\n          item.pixels[c - item.x][r] &&\n          item.pixels[c - item.x][r].join('') !== '000'\n        ) {\n          // color = pixelColor;\n          color = `rgba(${item.pixels[c - item.x][r]})`;\n        }\n      }\n    });\n\n    return color;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stage width={pixelRoom * column} height={pixelRoom * row}>\n        <Layer x={0} y={0}>\n          {[...Array(row).keys()]\n            .map((r) =>\n              [...Array(column).keys()].map((c) => (\n                <Rect\n                  key={`${r}-${c}`}\n                  cornerRadius={pixelCornerRadius || 0}\n                  fill={getPixelColor(r, c)}\n                  x={space + pixelRoom * c}\n                  y={space + pixelRoom * r}\n                  width={pixelSize * scale}\n                  height={pixelSize * scale}\n                />\n              )),\n            )\n            .flat()}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nMatrixLCD.propTypes = {\n  backgroundColor: PropTypes.string,\n  column: PropTypes.number,\n  hasGlow: PropTypes.bool,\n  pixelColor: PropTypes.string,\n  pixelCornerRadius: PropTypes.number,\n  pixelSize: PropTypes.number,\n  pixelStatus: PropTypes.array,\n  row: PropTypes.number,\n  scrollSpeed: PropTypes.number,\n  space: PropTypes.number,\n};\n\nexport default MatrixLCD;\n","export const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n  console.log(dataImage.data);\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  console.log(data);\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  console.log(font);\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = 16;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, 8);\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport { convertTextToBitmap } from './helpers';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 46,\n    firstLine: 'Hello World ⛔ سلام دنیا 😁',\n    imageData: convertTextToBitmap('Hello World ⛔ سلام دنیا 😁'),\n    ledColor: { r: 0, g: 255, b: 0, a: 1 },\n    pixelCornerRadius: 0,\n    pixelSize: 10,\n    row: 16,\n    secondLine: 'Line 2',\n    scrollSpeed: 50,\n    spaceBetweenPixels: null,\n    style: null,\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n  },\n});\n\nexport const {\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard;\nexport const getColumn = (state) => state.scrollingBoard.column;\nexport const getFirstLine = (state) => state.scrollingBoard.firstLine;\nexport const ggetImageData = (state) => state.scrollingBoard.imageData;\nexport const getLedColor = (state) => state.scrollingBoard.ledColor;\nexport const getRow = (state) => state.scrollingBoard.row;\nexport const getSecondLine = (state) => state.scrollingBoard.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard.scrollSpeed;\n\nexport default slice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.string,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  CardHeader,\n  TextField,\n  Button,\n  InputAdornment,\n} from '@material-ui/core';\nimport Bmp from 'binary-bmp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport html2canvas from 'html2canvas';\nimport MatrixLCD from '../MatrixLCD';\nimport { textToBitmap } from '../MatrixLCD/utils';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport {\n  getBoardState,\n  setLedColor,\n  setBoardState,\n} from './scrolling-board-slice';\nimport { convertTextToBitmap } from './helpers';\nimport FontToolbar from './font-toolbar';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.style && props.style.fontFamily) || 'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = [{ x: 0, y: 0, pixels: configs.imageData }];\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState();\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    dispatch(setLedColor(color.rgb));\n\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: convertTextToBitmap(e.target.value),\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={pixelStatus}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FontToolbar\n              className={classes.fullwidth}\n              onChange={changeStyle}\n              addEmoji={addEmoji}\n            />\n            <TextField\n              className={clsx([classes.text, classes.fullwidth])}\n              label=\"First Line\"\n              name=\"firstLine\"\n              onChange={onChangeText}\n              size=\"small\"\n              type=\"text\"\n              value={configs.firstLine}\n              variant=\"outlined\"\n            />\n          </div>\n          {/*\n          <div className={classes.row}>\n            <TextField\n              className={clsx([classes.textField, classes.fullwidth])}\n              label=\"Second Line\"\n              name=\"secondLine\"\n              onChange={onChangeText}\n              size=\"small\"\n              type=\"text\"\n              value={configs.secondLine}\n              variant=\"outlined\"\n            />\n          </div>\n          */}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n  makeStyles,\n  CardHeader,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  card: {\n    width: '60vw',\n  },\n  cardContent: {\n    textAlign: 'center',\n  },\n  button: {\n    minHeight: 60,\n  },\n});\n\nfunction Platforms() {\n  const classes = useStyles();\n  const history = useHistory();\n  const route = (url) => () => history.push(url);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title=\"Select The Device\" />\n        <CardContent className={classes.cardContent}>\n          <ButtonGroup\n            className={classes.buttonGroup}\n            orientation=\"vertical\"\n            color=\"primary\"\n          >\n            <Button className={classes.button} onClick={route('/lightbars')}>\n              Lightbars Configurator\n            </Button>\n            <Button\n              className={classes.button}\n              onClick={route('/message-board')}\n            >\n              Message Board Configurator\n            </Button>\n          </ButtonGroup>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Platforms;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { LightbarSelector } from './features/LightbarSelector';\nimport Header from './app/header';\nimport Lightbar from './features/Lightbar';\nimport ScrollingBoard from './features/ScrollingBoard';\n\nimport './App.css';\nimport Platforms from './features/Platforms';\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Switch>\n        <Route path=\"/lightbars\">\n          <LightbarSelector />\n        </Route>\n        <Route path=\"/lightbar\">\n          <Lightbar />\n        </Route>\n        <Route path=\"/message-board\">\n          <ScrollingBoard />\n        </Route>\n        <Route path=\"/\">\n          <Platforms />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\nimport scrollingBoardReducer from '../features/ScrollingBoard/scrolling-board-slice';\n\nconst store = configureStore({\n  reducer: {\n    lightbarSelector: lightbarSelectorReducer,\n    lightbar: lightbarReducer,\n    scrollingBoard: scrollingBoardReducer,\n  },\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport theme from './app/theme';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}