{"version":3,"sources":["logo.svg","features/counter/Counter.module.css","features/counter/counterSlice.js","features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/color-schema-list.js","features/LightbarSelector/index.js","app/utils.js","features/Lightbar/ligther-slice.js","app/header.js","features/LightbarPreview/index.js","features/LightbarPreview/live-preview.js","features/Lightbar/LightbarSetting/schema-color-picker.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["module","exports","slice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","LIGHTBARS","model","front","rear","COLOR_SCHEMA","title","schema","selectedModel","selectedColorSchema","hasGreen","selectLightbar","selectColorSchema","setHasGreen","getLightbar","lightbarSelector","getColorSchema","getHasGreen","useStyles","makeStyles","list","border","borderRadius","marginTop","marginBottom","maxHeight","overflow","ListItems","onClick","selected","map","lightbar","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","console","log","dispatch","useDispatch","List","className","theme","select","width","spacing","switch","withStyles","switchBase","color","green","backgroundColor","checked","track","Switch","ColorSchemaList","selectedSchema","Select","onChange","e","target","displayEmpty","inputProps","MenuItem","root","display","flexDirection","alignContent","justifyContent","minHeight","card","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","Card","CardContent","Typography","variant","CardActions","Button","disabled","push","rgbToHex","Object","values","v","hex","Number","toString","length","toHex","join","createBinaryBlob","cycles","lightLength","lights","buffer","ArrayBuffer","dv","DataView","setUint8","setUint16","index","forEach","c","l","r","a","toFixed","g","b","Blob","type","selectedCycle","selectedLight","showPreview","latestSelectedColor","setLightbar","setSelectedCycle","setSelectedLight","addCycle","Array","keys","i","duplicateCycle","deleteCycle","splice","setLightSetting","setInitialState","setShowPreview","saveAsFile","JSON","stringify","blob","FileSaver","saveAs","saveFile","Date","getTime","getCycles","getSelectedCycle","getSelectedLight","getShowPreview","menuButton","marginRight","flexGrow","previewButton","borderColor","Header","location","useLocation","useState","showAppbarButtons","setShowAppbarButton","React","anchorEl","setAnchorEl","onCloseContexMenu","isJSON","useEffect","pathname","indexOf","AppBar","position","Toolbar","IconButton","edge","aria-label","startIcon","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","height","props","marginLeft","maxWidth","minWidth","LightbarPreview","containerRef","useRef","originalWidth","scale","lightbarWidth","shadowBlur","onLightClick","getStrokeColor","getColor","ref","x","y","fill","cornerRadius","stroke","rotation","LivePreview","useTheme","fullScreen","useMediaQuery","breakpoints","down","visibleCycle","setVisibleCycle","interval","setInterval","clearInterval","Dialog","aria-labelledby","DialogTitle","DialogContent","SchemaColorPicker","onSwatchHover","colors","triangle","styles","passedStyles","reactCSS","merge","background","boxShadow","body","padding","label","borderStyle","borderWidth","triangleShadow","hash","float","alignItems","input","outline","boxSizing","paddingLeft","swatch","margin","clear","top","left","right","handleChange","hexcode","isValidHex","source","style","onHover","focusStyle","defaultProps","ColorWrap","zIndex","pallete","innerPallete","bottom","ColorPicker","presetColors","disableAlpha","cardHeader","blue","cardContent","colorInfo","colorView","prop","LightbarSetting","config","showColorPicker","setShowColorPicker","onValueChange","trim","setColorPickerState","CardHeader","rgb","TextField","max","min","size","item","Cycle","onDelete","ListItemSecondaryAction","arial-label","CycleList","Cycles","flexWrap","mqMatches","details","Lightbar","colorSchema","change","to","App","path","store","configureStore","reducer","lightbarSelectorReducer","lightbarReducer","createMuiTheme","window","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cee70efe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = slice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default slice.reducer;\r\n","export const LIGHTBARS = [\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n  },\n];\n\nexport const COLOR_SCHEMA = [\n  {\n    title: 'Amber',\n    schema: ['#FFBF00', '#000000'],\n  },\n  {\n    title: 'Red',\n    schema: ['#FF0000', '#000000'],\n  },\n  {\n    title: 'Green',\n    schema: ['#00FF00', '#000000'],\n  },\n  {\n    title: 'Blue',\n    schema: ['#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red',\n    schema: ['#FFBF00', '#FF0000', '#000000'],\n  },\n  {\n    title: 'Amber, Green',\n    schema: ['#FFBF00', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Blue',\n    schema: ['#FFBF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Red, Green',\n    schema: ['#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Red, Blue',\n    schema: ['#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Green, Blue',\n    schema: ['#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Blue',\n    schema: ['#FFBF00', '#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Green, Blue',\n    schema: ['#FFBF00', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green, Blue',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Full Color (RGB)',\n    schema: [],\n  },\n];\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: null,\n    selectedColorSchema: null,\n    hasGreen: false,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload;\n    },\n    selectColorSchema: (state, action) => {\n      state.selectedColorSchema = action.payload;\n    },\n    setHasGreen: (state, action) => {\n      state.hasGreen = action.payload;\n    },\n  },\n});\n\nexport const {\n  selectLightbar,\n  selectColorSchema,\n  setHasGreen,\n} = slice.actions;\n\nexport const getLightbar = state => state.lightbarSelector.selectedModel;\nexport const getColorSchema = state => state.lightbarSelector.selectedColorSchema;\nexport const getHasGreen = state => state.lightbarSelector.hasGreen;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport {useSelector, useDispatch} from 'react-redux';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    marginBottom: 10,\n    maxHeight: 150,\n    overflow: 'auto',\n  }\n});\n\nconst ListItems = ({ onClick, selected = null }) => LIGHTBARS.map(lightbar => (\n  <ListItem\n    selected={ selected?.model === lightbar.model }\n    key={lightbar.model}\n    onClick={() => onClick(lightbar)}\n    button\n  >\n    <ListItemText\n      primary={lightbar.model}\n      secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n    />\n  </ListItem>\n));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  console.log(selectedModel);\n  const dispatch = useDispatch();\n  const onClick = (model) => dispatch(selectLightbar(model));\n\n  return (\n    <List className={classes.list} >\n      <ListItems\n        onClick={onClick}\n        selected={selectedModel}\n      />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport {COLOR_SCHEMA} from './constants';\nimport {Select, makeStyles, MenuItem, Switch, FormGroup, FormControlLabel, withStyles} from '@material-ui/core';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectColorSchema, getColorSchema, getHasGreen, setHasGreen} from './lightbar-selector-slice';\nimport {green} from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  switch: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ColorSchemaList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedSchema = useSelector(getColorSchema);\n  const hasGreen = useSelector(getHasGreen);\n\n  const onChange = e => dispatch(selectColorSchema(e.target.value));\n  const onGreenSwithChange = e => dispatch(setHasGreen(e.target.checked));\n\n  return (\n    <>\n      <Select\n        value={selectedSchema || ''}\n        onChange={onChange}\n        displayEmpty\n        className={classes.select}\n        inputProps={{ 'aria-label': 'Without label' }}\n      >\n        <MenuItem value={null}>\n          <em>---</em>\n        </MenuItem>\n        {\n          COLOR_SCHEMA.map(schema =>\n            <MenuItem\n              key={schema.title}\n              value={schema}\n            >\n                {schema.title}\n            </MenuItem>\n          )\n        }\n      </Select>\n    { /*\n      <FormGroup>\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <GreenSwitch\n              name=\"hasGreen\"\n              onChange={onGreenSwithChange}\n              value={hasGreen}\n            />\n          }\n          label=\"Includes Green Light\"\n        />\n      </FormGroup>\n      */\n    }\n    </>\n  );\n}\n\nexport default ColorSchemaList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport {makeStyles, Typography, CardContent, CardActions, Button} from '@material-ui/core';\nimport LightbarList from './lightbar-list';\nimport {useSelector} from 'react-redux';\nimport {getLightbar, getColorSchema} from './lightbar-selector-slice';\nimport {useHistory} from 'react-router-dom';\nimport ColorSchemaList from './color-schema-list';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n})\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedLightbar = useSelector(getLightbar);\n  const selectedColorSchema = useSelector(getColorSchema);\n  const routeToLightbar = () => history.push('/lightbar');\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">\n            Lightbars\n          </Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n          <Typography variant=\"h6\">\n            Color Schema\n          </Typography>\n          <Typography className={classes.subtitle}>\n            Select the color schema of the lightbar\n          </Typography>\n          <ColorSchemaList />\n        </CardContent>\n          <CardActions\n              className={classes.button}\n          >\n            <Button\n              color=\"primary\"\n              disabled={!selectedLightbar || !selectedColorSchema}\n              variant=\"contained\"\n              onClick={routeToLightbar}\n            >\n              Start Configurator\n            </Button>\n          </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import FileSaver from \"file-saver\";\n\nexport const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = '0' + hex;\n  }\n\n  return hex;\n};\n\nexport const rgbToHex = (value) =>\n  Object.values(value).map(v => toHex(v)).join('');\n\nexport const createBinaryBlob = (cycles) => {\n  if (!cycles || !cycles.length) {\n    return null;\n  }\n\n  const lightLength = cycles[0].lights.length;\n  const length = 3 + (cycles.length * lightLength * 3);\n  const buffer = new ArrayBuffer(length);\n  const dv = new DataView(buffer);\n\n  dv.setUint8(0, lightLength);\n  dv.setUint16(1, cycles.length);\n\n  let index = 3;\n\n  cycles.forEach(\n    c => c.lights.forEach(\n      l => [\n        (l.color.r * l.color.a).toFixed(0),\n        (l.color.g * l.color.a).toFixed(0),\n        (l.color.b * l.color.a).toFixed(0),\n      ].forEach(\n        v => dv.setUint8(index++, v)\n      )\n    )\n  );\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createJSONBlob = (lightbar) => \n  new Blob([JSON.stringify(lightbar)], { type: 'application/json' });\n\nexport const saveFile = (blob, name) => {\n  FileSaver.saveAs(blob, name);\n};\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {createJSONBlob, createBinaryBlob, saveFile} from \"../../app/utils\";\n\nconst initialState = {\n  lightbar: null,\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: 0,\n  showPreview: false,\n  latestSelectedColor: null,\n};\n\nconst getDefaultLights = (lightbar) =>\n  [...Array(lightbar.front+lightbar.rear+6).keys()].map(i => ({\n    color: {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n    },\n  }));\n\nexport const slice = createSlice({\n  name: \"lightbar\",\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n        ...initialState,\n        lightbar: action.payload,\n    }),\n    setSelectedCycle: (state, action) => { state.selectedCycle = action.payload; },\n    setSelectedLight: (state, action) => {\n      if (state.latestSelectedColor) {\n        state.cycles[state.selectedCycle].lights[action.payload].color = state.latestSelectedColor;\n      }\n\n      state.selectedLight = action.payload;\n    },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights: action.payload || getDefaultLights(state.lightbar)\n      });\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    duplicateCycle: (state) => {\n      state.cycles.push(state.cycles[state.selectedCycle]);\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle]\n        .lights[state.selectedLight] = action.payload;\n      state.latestSelectedColor = action.payload.color;\n    },\n    setInitialState: (state) => {\n      state = initialState;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    saveAsFile: (state, action) => {\n      let [blob, type] = action.payload ?\n        [createJSONBlob({ lightbar: state.lightbar, cycles: state.cycles}), 'json']\n        :\n        [createBinaryBlob(state.cycles), 'bin'];\n\n      saveFile(blob, `${state.lightbar.model}-${new Date().getTime()}.${type}`);\n    }\n  }\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  duplicateCycle,\n  deleteCycle,\n  setLightSetting,\n  setInitialState,\n  setShowPreview,\n  saveAsFile,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\nexport const getShowPreview = (state) => state.lightbar.showPreview;\n\nexport default slice.reducer;\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Toolbar, IconButton, makeStyles, Typography, Button, MenuItem, Menu} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport {useLocation} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {saveAsFile, setShowPreview} from '../features/Lightbar/ligther-slice';\n\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  previewButton: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  }\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const location = useLocation();\n  const [showAppbarButtons, setShowAppbarButton] = useState(false)\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const onCloseContexMenu = (isJSON) => () => {\n    if (isJSON !== null) {\n      dispatch(saveAsFile(isJSON));\n    }\n    setAnchorEl(null);\n  };\n  const openContextMenu = e => setAnchorEl(e.currentTarget);\n  const onPreviewClick = () => dispatch(setShowPreview(true));\n\n  useEffect(() => {\n    if (location.pathname.indexOf('lightbar') > 0) {\n      setShowAppbarButton(true);\n    } else {\n      setShowAppbarButton(false);\n    }\n  }, [location]);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"Menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          DandR Electronic Lighbar Configurator\n        </Typography>\n        { showAppbarButtons &&\n          <>\n            <Button\n              className={classes.previewButton}\n              onClick={onPreviewClick}\n              startIcon={<PlayArrowIcon />}\n              variant=\"outlined\"\n            >\n              Preview\n            </Button>\n            <IconButton\n              aria-label=\"Download\"\n              color=\"inherit\"\n              edge=\"end\"\n              onClick={openContextMenu}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </>\n        }\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={onCloseContexMenu()}\n        >\n          <MenuItem onClick={onCloseContexMenu(false)}>Export BIN</MenuItem>\n          <MenuItem onClick={onCloseContexMenu(true)}>Export JSON</MenuItem>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, {useRef, useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: props => props.width ? 'auto' : 200,\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: props => props.width || 500,\n    width: props => props.width || '100%',\n  },\n});\n\nfunction LightbarPreview({ lights = [], onClick, selectedLight, title, width }) {\n  const classes = useStyles({ width });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3);\n  const originalWidth = (57 * 2) + (front.length * 45);\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n  \n  const onLightClick = (id) => () => onClick && onClick(id);\n\n  const getStrokeColor = (id) => selectedLight === id ? 'red' : null;\n\n  const getColor = ({r, g, b, a}) => `#${rgbToHex({\n    r: (r * a).toFixed(0),\n    g: (g * a).toFixed(0), \n    b: (b * a).toFixed(0),\n  })}`;\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={200 * scale}>\n        <Layer x={57 * scale}>\n          {\n            front.map((l, index) =>\n              <Rect\n                key={index}\n                x={45 * index * scale}\n                y={20 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(l.color)}\n                shadowBlur={shadowBlur}\n                cornerRadius={5}\n                onClick={onLightClick(index)}\n                stroke={getStrokeColor(index)}\n              />\n            )\n          }\n        </Layer>\n        <Layer rotation={-180} x={(57 * 2 * scale) + lightbarWidth} y={184 * scale}>\n          <Rect\n            x={58 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 2)}\n            stroke={getStrokeColor(front.length + 2)}\n          />\n          <Rect\n            x={30 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 1].color)}\n            shadowBlur={shadowBlur}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 1)}\n            stroke={getStrokeColor(front.length + 1)}\n          />\n          <Rect\n            x={30 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(front.length)}\n            stroke={getStrokeColor(front.length)}\n          />\n        </Layer>\n        <Layer x={57 * scale}>\n          {\n            rear.map((l, index) =>\n              <Rect\n                key={index}\n                x={45 * index * scale}\n                y={140 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[lights.length - 4 - index].color)}\n                shadowBlur={shadowBlur}\n                cornerRadius={5}\n                onClick={onLightClick(lights.length - 4 - index)}\n                stroke={getStrokeColor(lights.length - 4 - index)}\n              />\n            )\n          }\n        </Layer>\n        <Layer>\n          <Rect\n            x={55 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 1].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 1)}\n            stroke={getStrokeColor(lights.length - 1)}\n          />\n          <Rect\n            x={27 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 2)}\n            stroke={getStrokeColor(lights.length - 2)}\n          />\n          <Rect\n            x={27 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 3].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 3)}\n            stroke={getStrokeColor(lights.length - 3)}\n          />\n          </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nexport default LightbarPreview;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles, Dialog, useMediaQuery, useTheme, DialogTitle, DialogContent } from '@material-ui/core';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getShowPreview, setShowPreview, getCycles} from '../Lightbar/ligther-slice';\nimport LightbarPreview from '.';\n\n\nconst useStyles = makeStyles({\n});\n\nfunction LivePreview () {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const showPreview = useSelector(getShowPreview);\n  const cycles = useSelector(getCycles);\n  const dispatch = useDispatch();\n  const [visibleCycle, setVisibleCycle] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setVisibleCycle(visibleCycle + 1 < cycles.length ?\n        visibleCycle + 1\n        : 0\n      );\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  const handleClose = () => dispatch(setShowPreview(false));\n\n  return(\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={showPreview}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n          <DialogTitle\n            id=\"responsive-dialog-title\">\n            Lightbar Preview\n          </DialogTitle>\n          <DialogContent>\n            { cycles && cycles[visibleCycle] &&\n              <LightbarPreview\n                lights={cycles[visibleCycle].lights}\n              />\n            }\n          </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LivePreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport map from 'lodash/map'\nimport merge from 'lodash/merge'\nimport color from 'react-color/lib/helpers/color'\n\nimport { ColorWrap, Swatch } from 'react-color/lib/components/common'\n\nexport const SchemaColorPicker = ({ onChange, onSwatchHover, hex, colors, width, triangle,\n  styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      card: {\n        width,\n        background: '#fff',\n        border: '0 solid rgba(0,0,0,0.25)',\n        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n        borderRadius: '4px',\n        position: 'relative',\n      },\n      body: {\n        padding: '15px 9px 9px 15px',\n        height: 40,\n      },\n      label: {\n        fontSize: '18px',\n        color: '#fff',\n      },\n      triangle: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent #fff transparent',\n        position: 'absolute',\n      },\n      triangleShadow: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',\n        position: 'absolute',\n      },\n      hash: {\n        background: '#F0F0F0',\n        height: '30px',\n        width: '30px',\n        borderRadius: '4px 0 0 4px',\n        float: 'left',\n        color: '#98A1A4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      input: {\n        width: '100px',\n        fontSize: '14px',\n        color: '#666',\n        border: '0px',\n        outline: 'none',\n        height: '28px',\n        boxShadow: 'inset 0 0 0 1px #F0F0F0',\n        boxSizing: 'content-box',\n        borderRadius: '0 4px 4px 0',\n        float: 'left',\n        paddingLeft: '8px',\n      },\n      swatch: {\n        width: '30px',\n        height: '30px',\n        float: 'left',\n        borderRadius: '4px',\n        margin: '0 6px 6px 0',\n      },\n      clear: {\n        clear: 'both',\n      },\n    },\n    'hide-triangle': {\n      triangle: {\n        display: 'none',\n      },\n      triangleShadow: {\n        display: 'none',\n      },\n    },\n    'top-left-triangle': {\n      triangle: {\n        top: '-10px',\n        left: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        left: '12px',\n      },\n    },\n    'top-right-triangle': {\n      triangle: {\n        top: '-10px',\n        right: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        right: '12px',\n      },\n    },\n  }, passedStyles), {\n    'hide-triangle': triangle === 'hide',\n    'top-left-triangle': triangle === 'top-left',\n    'top-right-triangle': triangle === 'top-right',\n  })\n\n  const handleChange = (hexcode, e) => {\n    color.isValidHex(hexcode) && onChange({\n      hex: hexcode,\n      source: 'hex',\n    }, e)\n  }\n\n  return (\n    <div style={ styles.card } className={ `twitter-picker ${ className }` }>\n      <div style={ styles.triangleShadow } />\n      <div style={ styles.triangle } />\n\n      <div style={ styles.body }>\n        { map(colors, (c, i) => {\n          return (\n            <Swatch\n              key={ i }\n              color={ c }\n              hex={ c }\n              style={ styles.swatch }\n              onClick={ handleChange }\n              onHover={ onSwatchHover }\n              focusStyle={{\n                boxShadow: `0 0 4px ${ c }`,\n              }}\n            />\n          )\n        }) }\n      </div>\n    </div>\n  )\n}\n\nSchemaColorPicker.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  triangle: PropTypes.oneOf(['hide', 'top-left', 'top-right']),\n  colors: PropTypes.arrayOf(PropTypes.string),\n  styles: PropTypes.object,\n}\n\nSchemaColorPicker.defaultProps = {\n  width: 276,\n  colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3',\n    '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],\n  triangle: 'top-left',\n  styles: {},\n}\n\nexport default ColorWrap(SchemaColorPicker)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { SketchPicker } from 'react-color'\nimport {makeStyles} from '@material-ui/core'\nimport SchemaColorPicker from './schema-color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n    backgroundColor: 'white',\n  },\n  pallete: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: '2',\n  },\n  innerPallete: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  }\n});\n\nconst ColorPicker = ({\n  colors,\n  value,\n  onClick,\n  onChange\n}) => {\n  const classes = useStyles({colors});\n\n  return (\n  <div className={classes.root}>\n    <div className={classes.pallete}>\n      <div\n        className={classes.innerPallete}\n        onClick={onClick}\n      />\n          { colors.length ?\n              <SchemaColorPicker\n                colors={colors}\n                hex={false}\n                triangle=\"hide\"\n                onChange={onChange}\n              />\n              :\n              <SketchPicker\n                presetColors={['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000']}\n                color={value}\n                onChange={onChange}\n                disableAlpha\n              />\n          }\n    </div>\n  </div>\n  );\n}\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func\n}\n\nexport default ColorPicker\n","import React, {useState} from 'react';\nimport { Card, CardContent, CardHeader, TextField, Typography, makeStyles, Button } from '@material-ui/core';\nimport {blue} from '@material-ui/core/colors';\n\nimport ColorPicker from './color-picker';\nimport {AlphaPicker} from 'react-color';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: prop => `rgb(${Object.values(prop.color)})`,\n  }\n});\n\nfunction LightbarSetting({ colors, config, onChange }) {\n  const classes = useStyles({ color: config?.color || { r: 255, g: 255, b: 255 } });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    console.log(target.value);\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]: +target.value >= 0 && +target.value <= 255 ?\n          target.value.trim()\n          : config?.color[target.name]\n      }\n    });\n  };\n\n  const onColorPickerChange = (color) => onChange({\n    color: color.rgb,\n  });\n\n  const onAlphaPickerChage = (color) => {\n    console.log(color);\n    onChange({\n      color: color.rgb,\n    });\n  };\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          className={classes.cardHeader}\n          title=\"Set the color\"\n        />\n        <CardContent className={classes.cardContent}>\n          { !!config ?\n            <div className={classes.colorInfo}>\n              { !colors.length ?\n                <>\n                  <TextField\n                    label=\"Red\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"r\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.r : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Green\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"g\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.g : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Blue\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"b\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.b : 255}\n                    variant=\"outlined\"\n                  />\n                </>\n                :\n                <AlphaPicker\n                  color={config.color}\n                  onChange={onAlphaPickerChage}\n                  width={280}\n                />\n              }\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {\n                showColorPicker &&\n                  <ColorPicker\n                    colors={colors}\n                    onClick={setColorPickerState}\n                    onChange={onColorPickerChange}\n                    value={config?.color}\n                  />\n              }\n            </div>\n            :\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the color.\n            </Typography>\n          }\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getCycles, getSelectedCycle, setSelectedCycle, deleteCycle} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: 75,\n  }\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  selected\n}) => (\n  <ListItem\n    alignItems=\"center\"\n    className={className}\n    selected={selected}\n    onClick={onClick}\n    button>\n    <ListItemText \n      primary={ `Cycle #${id + 1}` }\n    />\n    <LightbarPreview lights={lights} width={(lights.length - 6) * 10} />\n    <ListItemSecondaryAction>\n      <IconButton\n        arial-label=\"delete\"\n        edge=\"end\"\n        onClick={onDelete}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nfunction CycleList() {\n  const classes = useStyles();\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const dispatch = useDispatch();\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n\n  return (\n    <List className={classes.root}>\n      {\n        cycles.map((c, i) => <Cycle\n          className={classes.item}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          selected={i === selectedCycle}\n        />)\n      }\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DuplicateIcon from '@material-ui/icons/FileCopyOutlined';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle, duplicateCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onAddClick = () => dispatch(addCycle());\n  const onDuplicateClick = () => dispatch(duplicateCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onDuplicateClick}\n            >\n              <DuplicateIcon />\n            </IconButton>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onAddClick}\n            >\n              <AddIcon />\n            </IconButton>\n            </>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, {useEffect} from 'react';\nimport Konva from 'konva';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport LightbarPreview from '../LightbarPreview';\nimport LivePreview from '../LightbarPreview/live-preview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {getLightbar, getColorSchema} from '../LightbarSelector/lightbar-selector-slice';\nimport {getSelectedCycle, setLightbar, addCycle, getCycles, setSelectedLight, getSelectedLight, setLightSetting, getShowPreview} from './ligther-slice';\nimport {useMediaQuery} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n    flexWrap: props => props.mqMatches ? null : 'wrap-reverse',\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const mqMatches = useMediaQuery('(min-width: 800px)');\n  const classes = useStyles({mqMatches});\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar)\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n  const showPreview = useSelector(getShowPreview);\n  const colorSchema = useSelector(getColorSchema);\n\n  const selectLight = (id) => dispatch(setSelectedLight(id));\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar(selectedModel));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to='/' />;\n  }\n\n  console.log(selectedCycle);\n\n  return (\n    <>\n    { !!lightbar &&\n    <div className={classes.root}>\n      <div className={classes.cycles} >\n        <Cycles />\n      </div>\n      <div className={classes.details}>\n        <LightbarPreview\n          lights={cycles[selectedCycle]?.lights}\n          onClick={selectLight}\n          selectedLight={selectedLight}\n          title={selectedModel.model}\n        />\n        <LighbarSetting\n          config={cycles[selectedCycle]?.lights[selectedLight]}\n          colors={colorSchema.schema}\n          onChange={setLightChange}\n        />\n       </div>\n    </div>\n    }\n    { showPreview &&\n        <LivePreview />\n    }\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {LightbarSelector} from './features/LightbarSelector';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Header from './app/header';\r\nimport Lightbar from './features/Lightbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  },\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/lightbar\">\r\n          <Lightbar />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <LightbarSelector/>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\r\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    lightbarSelector: lightbarSelectorReducer,\r\n    lightbar: lightbarReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport theme from './app/theme';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}