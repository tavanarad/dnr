{"version":3,"sources":["../node_modules/shelljs/src sync /^/.//.*$","features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSchema/constants.js","features/LightbarSchema/lightbar-shema-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/color-schema-list.js","features/LightbarSelector/index.js","features/LightbarPreview/index.js","features/LightbarSchema/index.js","app/utils.js","features/Lightbar/ligther-slice.js","features/MatrixLCD/Fonts/5x7-font.js","features/MatrixLCD/utils.js","features/ScrollingBoard/helpers.js","features/ScrollingBoard/scrolling-board-slice.js","features/ScrollingBoard2/helpers.js","features/ScrollingBoard2/scrolling-board-slice.js","app/header.js","features/LightbarPreview/live-preview.js","features/Lightbar/LightbarSetting/schema-color-picker.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","features/MatrixLCD/index.js","features/ScrollingBoard/font-toolbar.js","features/ScrollingBoard/index.js","features/ScrollingBoard2/font-toolbar.js","features/ScrollingBoard2/index.js","features/Platforms/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LIGHTBARS","model","front","rear","this","numberOfSideLights","slice","createSlice","name","initialState","selectedModel","selectedColorSchema","hasGreen","reducers","selectLightbar","state","action","payload","selectColorSchema","setHasGreen","actions","getLightbar","lightbarSelector","getHasGreen","DEFAULT_LIGHT_COLOR_SCHEMA","lightbar","schema","setLightbar","length","i","total","push","getDefaultSchema","setSchemaName","setSchema","getSchemaName","lightbarSchema","getSchema","useStyles","makeStyles","list","border","borderRadius","marginTop","marginBottom","maxHeight","overflow","ListItems","onClick","selected","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","dispatch","useDispatch","List","className","theme","select","width","spacing","switch","withStyles","switchBase","color","green","backgroundColor","checked","track","Switch","ColorSchemaList","selectedSchema","colorSchema","JSON","parse","localStorage","getItem","Select","value","onChange","target","displayEmpty","inputProps","MenuItem","root","display","flexDirection","alignContent","justifyContent","minHeight","card","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","Card","CardContent","Typography","variant","CardActions","Button","disabled","height","props","marginLeft","maxWidth","minWidth","Light","fill","getStrokeColor","overlay","rotation","scale","shadowBlur","stroke","text","x","y","cornerRadius","index","align","verticalAlign","LightbarPreview","lights","overlays","selectedLight","title","containerRef","useRef","reverse","originalWidth","lightbarWidth","onLightClick","indexOf","getColor","r","g","b","a","rgbToHex","toFixed","ref","l","flexFlow","margin","textAlign","lightbarContent","settings","alignSelf","selectionButtons","flexWrap","colors","checkbox","selectedCheckbox","borderColor","red","blue","amber","white","transparent","borderStyle","cardActions","LightbarSchema","React","useState","setSelectedLight","isDialogOpen","setDialogState","isSchemaChanged","setSchemaState","schemaName","lightColors","useEffect","to","getDefaultLights","clearSelectedLight","sectionLights","_","cloneDeep","forEach","selectColor","shift","splice","goToLightbarSetting","Array","Checkbox","icon","clsx","checkedIcon","goBack","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","label","DialogActions","schemas","setItem","stringify","convertToHex","toUpperCase","createBinaryBlob","cycles","lightLength","c","repeat","buffer","ArrayBuffer","dv","DataView","setUint8","isUsable","join","v","Blob","type","createMessageBoardBinaryBlob3","boardData","column","row","isLite","firstLine","secondLine","frames","pixels","setUint32","byteLength","f","binaryIndex","console","log","createMessageBoardBinaryBlob2","data","createJSONBlob","saveFile","blob","FileSaver","saveAs","at","selectedCycle","showPreview","latestSelectedColor","setSelectedCycle","shouldSetColor","addCycle","duplicateCycle","deleteCycle","setCycleRepeat","isNaN","setLightSetting","setInitialState","setShowPreview","saveAsFile","Date","getTime","getCycles","getLatestSelectedColor","getSelectedCycle","getSelectedLight","getShowPreview","fontMap","chars","textToBitmap","padding","bitMap","textArray","split","Font","char","Math","floor","toString","padStart","convertTextToBitmap","userStyle","offset","trim","canvas","document","createElement","style","fontFamily","fontStyle","textColor","font","ctx","getContext","measureText","getTextWidth","textBaseline","fillStyle","fillRect","fillText","dataImage","col","pixel","convertToRowBaseArray","getImageData","getPixelsOfLines","firstLineOffset","ledColor","result","values","imageData","isGraphical","pixelCornerRadius","pixelSize","scrollSpeed","spaceBetweenPixels","setColumn","setImageData","setIsGraphical","setFirstLine","setLedColor","setPixelCornerRadius","setRow","setSecondLine","setScrollSpeed","setBoardState","exportData","getBoardState","scrollingBoard","exportDataLite","scrollingBoard2","menuButton","marginRight","flexGrow","previewButton","Header","location","useLocation","showExport","showAppbarButtons","setShowAppbarButton","anchorEl","setAnchorEl","onCloseContexMenu","isJSON","pathname","search","undefined","AppBar","position","Toolbar","IconButton","edge","aria-label","replace","startIcon","currentTarget","Menu","keepMounted","Boolean","LivePreview","useTheme","fullScreen","useMediaQuery","breakpoints","down","visibleCycle","setVisibleCycle","setRepeat","interval","setInterval","clearInterval","handleClose","aria-labelledby","SchemaColorPicker","onSwatchHover","hex","triangle","styles","passedStyles","reactCSS","merge","background","boxShadow","body","borderWidth","triangleShadow","hash","float","alignItems","input","outline","boxSizing","paddingLeft","swatch","clear","top","left","right","handleChange","hexcode","isValidHex","source","onHover","focusStyle","defaultProps","ColorWrap","zIndex","pallete","innerPallete","bottom","ColorPicker","presetColors","disableAlpha","cardHeader","cardContent","colorInfo","colorView","prop","LightbarSetting","config","showColorPicker","setShowColorPicker","setColorPickerState","isLightNotUsable","CardHeader","rgb","item","itemText","itemTextFirstRow","borderBottom","paddingBottom","Cycle","onDelete","onRepeatChange","component","max","min","size","ListItemSecondaryAction","arial-label","CycleList","Cycles","mqMatches","details","Lightbar","change","MatrixLCD","hasGlow","pixelColor","pixelStatus","space","window","innerWidth","pixelRoom","setScroll","intervalId","status","getPixelColor","flat","emojiIcon","emojiPicker","formControl","toolbar","FontToolbar","addEmoji","setStyles","isEmojiPickerVisible","setEmojiPickerVisibility","onFontChange","FormControl","InputLabel","labelId","onSelect","emoji","matrixLCD","textField","fullwidth","ScrollingBoard","configs","textStyles","setTextStyle","onChangeText","onChangeOffset","FormControlLabel","control","newTextConfigs","native","Grid","container","xs","maxLength","Platforms","App","path","ScrollingBoard2","store","configureStore","reducer","lightbarSchemaReducer","lightbarSelectorReducer","lightbarReducer","scrollingBoardReducer","scrollingBoardReducer2","createMuiTheme","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAE1C,IAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM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","file":"static/js/main.e72d885d.chunk.js","sourcesContent":["var map = {\n\t\"./cat\": 224,\n\t\"./cat.js\": 224,\n\t\"./cd\": 150,\n\t\"./cd.js\": 150,\n\t\"./chmod\": 225,\n\t\"./chmod.js\": 225,\n\t\"./common\": 17,\n\t\"./common.js\": 17,\n\t\"./cp\": 151,\n\t\"./cp.js\": 151,\n\t\"./dirs\": 226,\n\t\"./dirs.js\": 226,\n\t\"./echo\": 227,\n\t\"./echo.js\": 227,\n\t\"./error\": 152,\n\t\"./error.js\": 152,\n\t\"./exec\": 228,\n\t\"./exec-child\": 229,\n\t\"./exec-child.js\": 229,\n\t\"./exec.js\": 228,\n\t\"./find\": 230,\n\t\"./find.js\": 230,\n\t\"./grep\": 231,\n\t\"./grep.js\": 231,\n\t\"./head\": 232,\n\t\"./head.js\": 232,\n\t\"./ln\": 233,\n\t\"./ln.js\": 233,\n\t\"./ls\": 155,\n\t\"./ls.js\": 155,\n\t\"./mkdir\": 234,\n\t\"./mkdir.js\": 234,\n\t\"./mv\": 235,\n\t\"./mv.js\": 235,\n\t\"./popd\": 236,\n\t\"./popd.js\": 236,\n\t\"./pushd\": 237,\n\t\"./pushd.js\": 237,\n\t\"./pwd\": 154,\n\t\"./pwd.js\": 154,\n\t\"./rm\": 156,\n\t\"./rm.js\": 156,\n\t\"./sed\": 238,\n\t\"./sed.js\": 238,\n\t\"./set\": 239,\n\t\"./set.js\": 239,\n\t\"./sort\": 240,\n\t\"./sort.js\": 240,\n\t\"./tail\": 241,\n\t\"./tail.js\": 241,\n\t\"./tempdir\": 153,\n\t\"./tempdir.js\": 153,\n\t\"./test\": 242,\n\t\"./test.js\": 242,\n\t\"./to\": 243,\n\t\"./to.js\": 243,\n\t\"./toEnd\": 244,\n\t\"./toEnd.js\": 244,\n\t\"./touch\": 245,\n\t\"./touch.js\": 245,\n\t\"./uniq\": 246,\n\t\"./uniq.js\": 246,\n\t\"./which\": 247,\n\t\"./which.js\": 247\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 507;","export const numberOfSideLights = 3;\n\nexport const LIGHTBARS = [\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n];\n\nexport const COLOR_SCHEMA = [\n  {\n    title: 'Amber',\n    schema: ['#FFBF00', '#000000'],\n  },\n  {\n    title: 'Red',\n    schema: ['#FF0000', '#000000'],\n  },\n  {\n    title: 'Green',\n    schema: ['#00FF00', '#000000'],\n  },\n  {\n    title: 'Blue',\n    schema: ['#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red',\n    schema: ['#FFBF00', '#FF0000', '#000000'],\n  },\n  {\n    title: 'Amber, Green',\n    schema: ['#FFBF00', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Blue',\n    schema: ['#FFBF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Red, Green',\n    schema: ['#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Red, Blue',\n    schema: ['#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Green, Blue',\n    schema: ['#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Blue',\n    schema: ['#FFBF00', '#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Green, Blue',\n    schema: ['#FFBF00', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green, Blue',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Full Color (RGB)',\n    schema: [],\n  },\n];\n","import { createSlice } from '@reduxjs/toolkit';\nimport { numberOfSideLights } from './constants';\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: {\n      model: 'SL-48',\n      front: 6,\n      rear: 6,\n      get total() {\n        return this.front + this.rear + numberOfSideLights * 2;\n      },\n    },\n    selectedColorSchema: null,\n    hasGreen: false,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload;\n    },\n    selectColorSchema: (state, action) => {\n      state.selectedColorSchema = action.payload;\n    },\n    setHasGreen: (state, action) => {\n      state.hasGreen = action.payload;\n    },\n  },\n});\n\nexport const { selectLightbar, selectColorSchema, setHasGreen } = slice.actions;\n\nexport const getLightbar = (state) => state.lightbarSelector.selectedModel;\nexport const getColorSchema = (state) =>\n  state.lightbarSelector.selectedColorSchema;\nexport const getHasGreen = (state) => state.lightbarSelector.hasGreen;\n\nexport default slice.reducer;\n","export const DEFAULT_LIGHT_COLOR_SCHEMA = [];\n","// eslint-disable no-parameter-reassign\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { DEFAULT_LIGHT_COLOR_SCHEMA } from './constants';\n\nconst getDefaultSchema = (lightbar) => {\n  const schema = [];\n  if (lightbar) {\n    for (let i = 0; i < lightbar.total; i += 1) {\n      schema.push([...DEFAULT_LIGHT_COLOR_SCHEMA]);\n    }\n  }\n  return schema;\n};\n\nconst slice = createSlice({\n  name: 'lightbarSchema',\n  initialState: {\n    lightbar: null,\n    name: null,\n    schema: null,\n  },\n  reducers: {\n    setLightbar: (state, action) => {\n      state.lightbar = action.payload;\n      if (!state.schema || !state.schema.length) {\n        state.schema = getDefaultSchema(state.lightbar);\n      }\n    },\n    setSchemaName: (state, action) => {\n      state.name = action.payload;\n    },\n    setSchema: (state, action) => {\n      state.schema = action.payload;\n      if (!action.payload) {\n        state.name = null;\n      }\n    },\n  },\n});\n\nexport const { setLightbar, setSchemaName, setSchema } = slice.actions;\n\nexport const getSchemaState = (state) => state.lightbarSchema;\nexport const getLightbar = (state) => state.lightbarSchema.lightbar;\nexport const getSchemaName = (state) => state.lightbarSchema.name;\nexport const getSchema = (state) => state.lightbarSchema.schema;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport { setSchema } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    marginBottom: 10,\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nconst ListItems = ({ onClick, selected = null }) =>\n  LIGHTBARS.map((lightbar) => (\n    <ListItem\n      selected={selected?.model === lightbar.model}\n      key={lightbar.model}\n      onClick={() => onClick(lightbar)}\n      button\n    >\n      <ListItemText\n        primary={lightbar.model}\n        secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n      />\n    </ListItem>\n  ));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const onClick = (model) => {\n    dispatch(selectLightbar(model));\n    dispatch(setSchema(null));\n  };\n\n  return (\n    <List className={classes.list}>\n      <ListItems onClick={onClick} selected={selectedModel} />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport {\n  Select,\n  makeStyles,\n  MenuItem,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n  withStyles,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { green } from '@material-ui/core/colors';\nimport {\n  selectColorSchema,\n  getColorSchema,\n  getHasGreen,\n  setHasGreen,\n  getLightbar,\n} from './lightbar-selector-slice';\nimport {\n  setSchema,\n  setSchemaName,\n  getSchemaName,\n} from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  switch: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ColorSchemaList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedSchema = useSelector(getSchemaName);\n  const hasGreen = useSelector(getHasGreen);\n  const lightbar = useSelector(getLightbar);\n  const colorSchema = JSON.parse(\n    localStorage.getItem('lightbar-schema') || '{}',\n  );\n\n  const onChange = (e) => {\n    dispatch(setSchemaName(e.target.value));\n    dispatch(setSchema(colorSchema[e.target.value] || []));\n  };\n  const onGreenSwithChange = (e) => dispatch(setHasGreen(e.target.checked));\n\n  return (\n    <>\n      <Select\n        value={selectedSchema || ''}\n        onChange={onChange}\n        displayEmpty\n        className={classes.select}\n        inputProps={{ 'aria-label': 'Without label' }}\n      >\n        <MenuItem value=\"create-new-schema\">\n          <em>Create a new one</em>\n        </MenuItem>\n        {Object.keys(colorSchema).map(\n          (schema) =>\n            lightbar &&\n            lightbar.total === colorSchema[schema].length && (\n              <MenuItem key={schema} value={schema}>\n                {schema}\n              </MenuItem>\n            ),\n        )}\n      </Select>\n      {/*\n      <FormGroup>\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <GreenSwitch\n              name=\"hasGreen\"\n              onChange={onGreenSwithChange}\n              value={hasGreen}\n            />\n          }\n          label=\"Includes Green Light\"\n        />\n      </FormGroup>\n      */}\n    </>\n  );\n}\n\nexport default ColorSchemaList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport {\n  makeStyles,\n  Typography,\n  CardContent,\n  CardActions,\n  Button,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LightbarList from './lightbar-list';\nimport { getLightbar } from './lightbar-selector-slice';\nimport ColorSchemaList from './color-schema-list';\nimport { getSchemaName } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedLightbar = useSelector(getLightbar);\n  const selectedColorSchema = useSelector(getSchemaName);\n  // const routeToLightbar = () => history.push('/lightbar');\n  const routeToLightbar = () => history.push('/lightbar/schema');\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">Lightbars</Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n          <Typography variant=\"h6\">Color Schema</Typography>\n          <Typography className={classes.subtitle}>\n            Select the color schema of the lightbar\n          </Typography>\n          <ColorSchemaList />\n        </CardContent>\n        <CardActions className={classes.button}>\n          <Button\n            color=\"primary\"\n            disabled={!selectedLightbar || !selectedColorSchema}\n            variant=\"contained\"\n            onClick={routeToLightbar}\n          >\n            Start Configurator\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect, Text, Group } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: (props) => (props.width ? 'auto' : 210),\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: (props) => props.width || 500,\n    width: (props) => props.width || '100%',\n  },\n});\n\nconst Light = ({\n  fill,\n  getStrokeColor,\n  height,\n  onClick,\n  overlay,\n  rotation,\n  scale,\n  shadowBlur,\n  stroke,\n  text,\n  width,\n  x,\n  y,\n}) => (\n  <>\n    <Rect\n      fill={fill}\n      height={height}\n      cornerRadius={5}\n      onClick={onClick}\n      rotation={rotation}\n      shadowBlur={shadowBlur}\n      stroke={stroke}\n      width={width}\n      x={x}\n      y={y}\n    />\n    <Group rotation={rotation} x={x} y={y}>\n      {overlay &&\n        overlay.map((color, index) => (\n          <Rect\n            key={color}\n            fill={color}\n            height={height}\n            cornerRadius={5}\n            onClick={onClick}\n            width={width / overlay.length}\n            x={index * (width / overlay.length)}\n            y={0}\n          />\n        ))}\n    </Group>\n    {text && (\n      <Text\n        align=\"center\"\n        fontSize={10 * scale}\n        height={height}\n        rotation={rotation}\n        text={text}\n        verticalAlign=\"middle\"\n        onClick={onClick}\n        width={width}\n        x={x}\n        y={y + 25}\n      />\n    )}\n  </>\n);\n\nfunction LightbarPreview({\n  lights = [],\n  overlays = [],\n  onClick,\n  selectedLight = [],\n  title,\n  width,\n}) {\n  const classes = useStyles({ width });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3).reverse();\n  const originalWidth = 57 * 2 + front.length * 45;\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n\n  const onLightClick = (id) => () => {\n    onClick && onClick(id);\n  };\n\n  const getStrokeColor = (id) =>\n    selectedLight.indexOf(id) > -1 ? 'red' : null;\n\n  const getColor = ({ r, g, b, a }) =>\n    rgbToHex({\n      r: (r * a).toFixed(0),\n      g: (g * a).toFixed(0),\n      b: (b * a).toFixed(0),\n    });\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={210 * scale}>\n        <Layer x={57 * scale}>\n          {front.map((l, index) => (\n            <Light\n              fill={getColor(l.color)}\n              height={24 * scale}\n              index={index}\n              key={index}\n              stroke={getStrokeColor(index)}\n              text={l.text}\n              onClick={onLightClick(index)}\n              overlay={overlays[index]}\n              scale={scale}\n              shadowBlur={shadowBlur}\n              width={40 * scale}\n              x={45 * index * scale}\n              y={20 * scale}\n            />\n          ))}\n        </Layer>\n        <Layer x={57 * scale + lightbarWidth}>\n          <Light\n            x={12 * scale}\n            y={25 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length].color)}\n            text={lights[front.length].text}\n            shadowBlur={shadowBlur}\n            rotation={40}\n            cornerRadius={5}\n            onClick={onLightClick(front.length)}\n            overlay={overlays[front.length]}\n            stroke={getStrokeColor(front.length)}\n            scale={scale}\n          />\n          <Light\n            x={53 * scale}\n            y={70 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 1].color)}\n            text={lights[front.length + 1].text}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 1)}\n            overlay={overlays[front.length + 1]}\n            stroke={getStrokeColor(front.length + 1)}\n            scale={scale}\n          />\n          {\n            // <Light\n            //   x={53 * scale}\n            //   y={115 * scale}\n            //   width={40 * scale}\n            //   height={24 * scale}\n            //   fill={getColor(lights[front.length + 2].color)}\n            //   text={lights[front.length + 2].text}\n            //   shadowBlur={shadowBlur}\n            //   rotation={90}\n            //   cornerRadius={5}\n            //   onClick={onLightClick(front.length + 2)}\n            //   overlay={overlays[front.length + 2]}\n            //   stroke={getStrokeColor(front.length + 2)}\n            //   scale={scale}\n            // />\n          }\n          <Light\n            x={-5 * scale}\n            y={143 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 2].color)}\n            text={lights[front.length + 2].text}\n            shadowBlur={shadowBlur}\n            rotation={-40}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 2)}\n            overlay={overlays[front.length + 2]}\n            stroke={getStrokeColor(front.length + 2)}\n            scale={scale}\n          />\n        </Layer>\n        <Layer x={57 * scale}>\n          {rear.map((l, index) => (\n            <Light\n              fill={getColor(l.color)}\n              height={24 * scale}\n              index={index}\n              key={index}\n              stroke={getStrokeColor(lights.length - 4 - index)}\n              text={l.text}\n              onClick={onLightClick(lights.length - 4 - index)}\n              overlay={overlays[lights.length - 4 - index]}\n              scale={scale}\n              shadowBlur={shadowBlur}\n              width={40 * scale}\n              x={45 * index * scale}\n              y={143 * scale}\n            />\n          ))}\n        </Layer>\n        <Layer>\n          <Light\n            x={55 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 1].color)}\n            text={lights[lights.length - 1].text}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 1)}\n            overlay={overlays[lights.length - 1]}\n            stroke={getStrokeColor(lights.length - 1)}\n            scale={scale}\n          />\n          <Light\n            x={27 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 2].color)}\n            text={lights[lights.length - 2].text}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 2)}\n            overlay={overlays[lights.length - 2]}\n            stroke={getStrokeColor(lights.length - 2)}\n            scale={scale}\n          />\n          {\n            // <Light\n            //   x={27 * scale}\n            //   y={118 * scale}\n            //   width={40 * scale}\n            //   height={24 * scale}\n            //   fill={getColor(lights[lights.length - 3].color)}\n            //   text={lights[lights.length - 3].text}\n            //   shadowBlur={shadowBlur}\n            //   rotation={90}\n            //   cornerRadius={5}\n            //   onClick={onLightClick(lights.length - 3)}\n            //   overlay={overlays[lights.length - 3]}\n            //   stroke={getStrokeColor(lights.length - 3)}\n            //   scale={scale}\n            // />\n          }\n          <Light\n            x={25 * scale}\n            y={118 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 3].color)}\n            text={lights[lights.length - 3].text}\n            shadowBlur={shadowBlur}\n            rotation={40}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 3)}\n            overlay={overlays[lights.length - 3]}\n            stroke={getStrokeColor(lights.length - 3)}\n            scale={scale}\n          />\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nLightbarPreview.propTypes = {\n  lights: PropTypes.array,\n  onClick: PropTypes.func,\n  selectedLight: PropTypes.array,\n  title: PropTypes.node,\n  width: PropTypes.number,\n};\n\nexport default LightbarPreview;\n","import React from 'react';\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  Button,\n  makeStyles,\n  FormControlLabel,\n  Checkbox,\n  CardActions,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { getDefaultLights } from '../../app/utils';\nimport { getLightbar } from '../LightbarSelector/lightbar-selector-slice';\nimport LightbarPreview from '../LightbarPreview';\nimport {\n  setLightbar,\n  getSchemaName,\n  getSchema,\n  setSchema,\n} from './lightbar-shema-slice';\nimport { DEFAULT_LIGHT_COLOR_SCHEMA } from './constants';\n\nexport const TRANSPARENT_COLOR = '#B4B4B4';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  lightbar: {\n    margin: '20px 10px 0 10px',\n    textAlign: 'center',\n    display: 'inline-block',\n    '& div': {},\n  },\n  lightbarContent: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  settings: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 600,\n    alignSelf: 'center',\n  },\n  selectionButtons: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& button': {\n      margin: 5,\n    },\n  },\n  colors: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 50,\n    border: '2.5px solid rgba(0, 0, 0, 0.25)',\n  },\n  selectedCheckbox: {\n    width: 20,\n    height: 20,\n    border: '2.5px solid',\n    borderRadius: 50,\n    borderColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  red: {\n    backgroundColor: '#FF0000',\n  },\n  green: {\n    backgroundColor: '#00FF00',\n  },\n  blue: {\n    backgroundColor: '#0000FF',\n  },\n  amber: {\n    backgroundColor: '#FFBF00',\n  },\n  white: {\n    backgroundColor: '#FFFFFF',\n  },\n  transparent: {\n    backgroundColor: TRANSPARENT_COLOR,\n    borderStyle: 'dashed',\n    display: 'none',\n  },\n  cardActions: {\n    justifyContent: 'flex-end',\n  },\n});\n\nconst LightbarSchema = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const lightbar = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const name = useSelector(getSchemaName);\n  const [selectedLight, setSelectedLight] = React.useState([]);\n  const [isDialogOpen, setDialogState] = React.useState(false);\n  const [isSchemaChanged, setSchemaState] = React.useState(false);\n  const [schemaName, setSchemaName] = React.useState(name);\n  const lightColors = useSelector(getSchema);\n\n  React.useEffect(() => {\n    dispatch(setLightbar(lightbar));\n  }, []);\n\n  if (!lightbar) {\n    return <Redirect to=\"/lightbars\" />;\n  }\n\n  const handleClick = (id) => {\n    const index = selectedLight.indexOf(id);\n    if (index > -1) {\n      selectedLight.splice(index, 1);\n    } else {\n      selectedLight.push(id);\n    }\n    setSelectedLight([...selectedLight]);\n  };\n\n  const lights = getDefaultLights(lightbar);\n\n  const clearSelectedLight = (sectionLights) => {\n    const schema = _.cloneDeep(lightColors);\n    sectionLights.forEach((l) => {\n      schema[l] = [...DEFAULT_LIGHT_COLOR_SCHEMA];\n    });\n    dispatch(setSchema(schema));\n  };\n\n  const selectAllFront = () => {\n    const sectionLights = [...new Array(lightbar.front).keys()];\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllRear = () => {\n    const sectionLights = [...new Array(lightbar.rear).keys()].map(\n      (i) => i + lightbar.front + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllPassengerCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllDriverCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front + lightbar.rear + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectColor = (color) => () => {\n    const schema = _.cloneDeep(lightColors);\n    selectedLight.forEach((l) => {\n      if (\n        color !== TRANSPARENT_COLOR &&\n        schema[l].indexOf(TRANSPARENT_COLOR) > -1\n      ) {\n        schema[l].shift();\n      }\n\n      if (color === TRANSPARENT_COLOR) {\n        schema[l] = [TRANSPARENT_COLOR];\n        return;\n      }\n\n      if (schema[l].indexOf(color) < 0) {\n        schema[l].push(color);\n        if (schema[l].length > 3) {\n          schema[l].shift();\n        }\n      } else {\n        schema[l].splice(schema[l].indexOf(color), 1);\n      }\n    });\n    dispatch(setSchema(schema));\n    setSchemaState(true);\n  };\n\n  const isChecked = (color) =>\n    selectedLight.length === 1 && lightColors[selectedLight[0]]\n      ? lightColors[selectedLight[0]].indexOf(color) > -1\n      : false;\n\n  const goForward = () => isSchemaChanged ? setDialogState(true) : goToLightbarSetting();\n  const goBack = () => history.goBack();\n  const closeDialog = () => setDialogState(false);\n  const handleSchemaNameChange = (e) => setSchemaName(e.target.value);\n  const goToLightbarSetting = () => history.push('/lightbar');\n  const saveSchema = () => {\n    const schemas = JSON.parse(localStorage.getItem('lightbar-schema') || '{}');\n    schemas[schemaName] = lightColors;\n    localStorage.setItem('lightbar-schema', JSON.stringify(schemas));\n    goToLightbarSetting();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.lightbar}>\n        <CardContent className={classes.lightbarContent}>\n          <LightbarPreview\n            lights={lights}\n            onClick={handleClick}\n            overlays={lightColors}\n            selectedLight={selectedLight}\n          />\n        </CardContent>\n      </Card>\n      <Card className={classes.settings}>\n        <CardContent>\n          <div className={classes.selectionButtons}>\n            <Button variant=\"outlined\" onClick={selectAllFront}>\n              All Front\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllRear}>\n              All Rear\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllPassengerCorner}>\n              All Passenger Corner\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllDriverCorner}>\n              All Driver Corner\n            </Button>\n          </div>\n          <div className={classes.colors}>\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.red)} />}\n              checked={isChecked('#FF0000')}\n              checkedIcon={\n                <span className={clsx(classes.selectedCheckbox, classes.red)} />\n              }\n              onChange={selectColor('#FF0000')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.green)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.green)}\n                />\n              }\n              onChange={selectColor('#00FF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.blue)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.blue)}\n                />\n              }\n              onChange={selectColor('#0000FF')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.amber)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.amber)}\n                />\n              }\n              onChange={selectColor('#FFBF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.white)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.white)}\n                />\n              }\n              onChange={selectColor('#FFFFFF')}\n            />\n            <Checkbox\n              icon={\n                <span className={clsx(classes.checkbox, classes.transparent)} />\n              }\n              checkedIcon={\n                <span\n                  className={clsx(\n                    classes.selectedCheckbox,\n                    classes.transparent,\n                  )}\n                />\n              }\n              onChange={selectColor('#B4B4B4')}\n            />\n          </div>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button onClick={goBack} variant=\"outlined\">\n            Back\n          </Button>\n          <Button color=\"primary\" onClick={goForward} variant=\"contained\">\n            Next\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog open={isDialogOpen} onClose={closeDialog}>\n        <DialogTitle>Save Schema</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you want to save the schema to use it later, please enter a name\n            for it.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            id=\"schemaName\"\n            label=\"Schema Name\"\n            margin=\"dense\"\n            value={schemaName === 'create-new-schema' ? '' : schemaName}\n            onChange={handleSchemaNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={goToLightbarSetting}>\n            Continue without save\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={saveSchema}\n            disabled={!schemaName || schemaName === 'create-new-schema'}\n          >\n            Save and Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nLightbarSchema.propTypes = {};\n\nexport default LightbarSchema;\n","import FileSaver from 'file-saver';\nimport { rgbToHex as convertToHex } from '@material-ui/core/styles';\nimport { TRANSPARENT_COLOR } from '../features/LightbarSchema';\n\nconst reorderLights = (lights) => [\n  ...lights.slice(10, 16).reverse(),\n  ...lights.slice(6, 10).reverse(),\n  ...lights.slice(0, 6).reverse(),\n  ...lights.slice(16).reverse(),\n];\n\nexport const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = `0${hex}`;\n  }\n\n  return hex;\n};\n\nexport const rgbToHex = (value) => {\n  const color = value || { r: 0, g: 0, b: 0 };\n  return convertToHex(`rgb(${color.r}, ${color.g}, ${color.b})`).toUpperCase();\n};\n\nexport const createBinaryBlob = (cycles) => {\n  if (!cycles || !cycles.length) {\n    return null;\n  }\n\n  const lightLength = cycles[0].lights.length;\n  let length = 3;\n  cycles.forEach((c) => {\n    length += c.repeat * lightLength * 3;\n  });\n  const buffer = new ArrayBuffer(length);\n  const dv = new DataView(buffer);\n\n  dv.setUint8(0, cycles.length);\n  dv.setUint8(1, 0);\n  dv.setUint8(2, lightLength);\n\n  let index = 3;\n\n  cycles.forEach((c) =>\n    [...new Array(+c.repeat).keys()].forEach(() =>\n      // reorderLights(c.lights).forEach((l) => {\n      c.lights.forEach((l) => {\n        const { r, g, b, a } = l.color;\n        const isUsable = [r, g, b].join(',') !== [180, 180, 180].join(',');\n        const isOff = [r, g, b].join(',') === [1, 1, 1].join(',');\n        let red;\n        let blue;\n        let green = 0;\n\n        if (isOff) {\n          red = 1;\n          blue = 1;\n          green = 1;\n        } else {\n          red = r !== 0 && g === 0 && b === 0 && isUsable ? a * 255 : (isUsable ? 1 : 0);\n          blue = r === 0 && g === 0 && b !== 0 && isUsable ? a * 255 : (isUsable ? 1 : 0);\n          green = isUsable ? (red > 1 || blue > 1 ? 1 : a * 255) : 0;\n        }\n\n        return [\n          red.toFixed(0),\n          green.toFixed(0),\n          blue.toFixed(0),\n        ].forEach((v) => dv.setUint8(index++, v));\n      }),\n    ),\n  );\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob = (data) => {\n  const buffer = new ArrayBuffer(\n    Math.ceil(data.length / 8) * 8 * data[0].length * 3,\n  );\n  const dv = new DataView(buffer);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let i = 0; i < Math.ceil(data.length / 8); i += 1) {\n    for (let r = 0; r < data[0].length; r += 1) {\n      for (let c = 0; c < 8; c += 1) {\n        const binaryIndex = i * 8 * data[0].length * 3 + r * 8 + c * 3;\n        if (data[i * 8 + c]) {\n          data[i * 8 + c][r].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        } else {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        }\n      }\n    }\n  }\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob3 = (\n  boardData,\n  column = 48,\n  row = 18,\n  isLite = false,\n) => {\n  const [firstLine, secondLine] = boardData;\n  let frames =\n    secondLine && secondLine.pixels.length > column + 1 - 2\n      ? secondLine.pixels.length + 1\n      : 1;\n\n  if (isLite) {\n    frames =\n      firstLine && firstLine.pixels.length > column + 1 - 2\n        ? firstLine.pixels.length + 1\n        : 1;\n  }\n  const buffer = new ArrayBuffer(frames * column * row * 3 + 4);\n  const dv = new DataView(buffer);\n  dv.setUint32(0, buffer.byteLength);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let f = 0; f < frames; f += 1) {\n    for (let c = 0; c < column; c += 1) {\n      for (let r = 0; r < row; r += 1) {\n        const binaryIndex = f * column * row * 3 + c * row * 3 + r * 3 + 4;\n\n        if ([0, 8, 9, 17].indexOf(r) > -1) {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        } else if (r < 8) {\n          if (isLite) {\n            if (firstLine && firstLine.pixels[f + c]) {\n              firstLine.pixels[f + c][r - 1].forEach((value, index) => {\n                // console.log(binaryIndex, '-', index, '-', value);\n                dv.setUint8(binaryIndex + index, value);\n              });\n            } else {\n              [0, 0, 0].forEach((value, index) =>\n                dv.setUint8(binaryIndex + index, value),\n              );\n            }\n          } else if (firstLine && firstLine.pixels[c]) {\n            firstLine.pixels[c][r - 1].forEach((value, index) => {\n              // console.log(binaryIndex, '-', index, '-', value);\n              dv.setUint8(binaryIndex + index, value);\n            });\n          } else {\n            [0, 0, 0].forEach((value, index) =>\n              dv.setUint8(binaryIndex + index, value),\n            );\n          }\n        } else if (r > 9) {\n          if (secondLine && secondLine.pixels[f + c]) {\n            secondLine.pixels[f + c][r - 10].forEach((value, index) => {\n              // console.log(binaryIndex, '-', index, '-', value);\n              dv.setUint8(binaryIndex + index, value);\n            });\n          } else {\n            [0, 0, 0].forEach((value, index) =>\n              dv.setUint8(binaryIndex + index, value),\n            );\n          }\n        }\n      }\n    }\n\n    if (isLite) {\n      if (!firstLine || firstLine.length <= column - 1) {\n        break;\n      }\n    } else if (!secondLine || secondLine.length <= column - 1) {\n      break;\n    }\n  }\n\n  console.log(dv.buffer);\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob2 = (data, column = 48, row = 18) => {\n  const frames = data.length > column + 1 - 2 ? data.length + 1 : 1;\n  // console.log(frames);\n  const buffer = new ArrayBuffer(frames * column * data[0].length * 3 + 4);\n  const dv = new DataView(buffer);\n  dv.setUint32(0, buffer.byteLength);\n  // console.log(buffer.length);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let f = 0; f < frames; f += 1) {\n    for (let c = 0; c < column; c += 1) {\n      for (let r = 0; r < data[0].length; r += 1) {\n        const binaryIndex =\n          f * column * data[0].length * 3 + c * data[0].length * 3 + r * 3 + 4;\n\n        if (data[f + c]) {\n          data[f + c][r].forEach((value, index) => {\n            // console.log(binaryIndex, '-', index, '-', value);\n            dv.setUint8(binaryIndex + index, value);\n          });\n        } else {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        }\n      }\n    }\n\n    if (data.length <= column - 1) {\n      break;\n    }\n    // for (let r = 0; r < data[0].length; r += 1) {\n    //   for (let c = 0; c < 8; c += 1) {\n    //     const binaryIndex = i * 8 * data[0].length * 3 + r * 8 + c * 3;\n    //     if (data[i * 8 + c]) {\n    //       data[i * 8 + c][r].forEach((value, index) =>\n    //         dv.setUint8(binaryIndex + index, value),\n    //       );\n    //     } else {\n    //       [0, 0, 0].forEach((value, index) =>\n    //         dv.setUint8(binaryIndex + index, value),\n    //       );\n    //     }\n    //   }\n    // }\n  }\n\n  // console.log(dv.buffer);\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createJSONBlob = (lightbar) =>\n  new Blob([JSON.stringify(lightbar)], { type: 'application/json' });\n\nexport const saveFile = (blob, name) => {\n  FileSaver.saveAs(blob, name);\n};\n\nexport const getDefaultLights = (lightbar, schema = []) =>\n  [...Array(lightbar.total).keys()].map((key) => ({\n    text: key + 1,\n    color:\n      (schema.at(key) || []).indexOf(TRANSPARENT_COLOR) > -1\n        ? {\n          r: 180,\n          g: 180,\n          b: 180,\n          a: 1,\n        }\n        : {\n            r: 1,\n          g: 1,\n          b: 1,\n          a: 1,\n        },\n  }));\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  createJSONBlob,\n  createBinaryBlob,\n  getDefaultLights,\n  saveFile,\n} from '../../app/utils';\n\nconst initialState = {\n  lightbar: null,\n  schema: [],\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: [0],\n  showPreview: false,\n  latestSelectedColor: null,\n};\n\nexport const slice = createSlice({\n  name: 'lightbar',\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n      ...initialState,\n      lightbar: action.payload.lightbar,\n      schema: action.payload.schema || [],\n    }),\n    setSelectedCycle: (state, action) => {\n      state.selectedCycle = action.payload;\n    },\n    setSelectedLight: (state, action) => {\n      if (action.payload.shouldSetColor && state.latestSelectedColor) {\n        state.cycles[state.selectedCycle].lights[action.payload.id].color =\n          state.latestSelectedColor;\n      }\n\n      state.selectedLight = action.payload.id;\n    },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights:\n          action.payload || getDefaultLights(state.lightbar, state.schema),\n        repeat: 1,\n      });\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    duplicateCycle: (state) => {\n      state.cycles.push(state.cycles[state.selectedCycle]);\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setCycleRepeat: (state, action) => {\n      if (!isNaN(action.payload.repeat) && action.payload.repeat > 0) {\n        state.cycles[action.payload.id].repeat = action.payload.repeat;\n      } else if (action.payload.repeat === '') {\n        state.cycles[action.payload.id].repeat = 1;\n      }\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle].lights[state.selectedLight[0]] = {\n        ...state.cycles[state.selectedCycle].lights[state.selectedLight[0]],\n        ...action.payload,\n      };\n      state.latestSelectedColor = action.payload.color;\n    },\n    setInitialState: (state) => {\n      state = initialState;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    setSchema: (state, action) => {\n      state.schema = action.payload;\n    },\n    saveAsFile: (state, action) => {\n      const [blob, type] = action.payload\n        ? [\n          createJSONBlob({ lightbar: state.lightbar, cycles: state.cycles }),\n          'json',\n        ]\n        : [createBinaryBlob(state.cycles), 'bin'];\n\n      saveFile(blob, `${state.lightbar.model}-${new Date().getTime()}.${type}`);\n    },\n  },\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  duplicateCycle,\n  deleteCycle,\n  setCycleRepeat,\n  setLightSetting,\n  setInitialState,\n  setShowPreview,\n  setSchema,\n  saveAsFile,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getLatestSelectedColor = (state) =>\n  state.lightbar.latestSelectedColor;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\nexport const getShowPreview = (state) => state.lightbar.showPreview;\n\nexport default slice.reducer;\n","// prettier-ignore\nconst fontMap = {\n  column: 5,\n  row: 7,\n  chars: {\n    ' ': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 0x20, Space\n    '!': [0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04], // 0x21, !\n    '\"': [0x09, 0x09, 0x12, 0x00, 0x00, 0x00, 0x00], // 0x22, \"\n    '#': [0x0a, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x0a], // 0x23, #\n    '$': [0x04, 0x0f, 0x14, 0x0e, 0x05, 0x1e, 0x04], // 0x24, $\n    '%': [0x19, 0x19, 0x02, 0x04, 0x08, 0x13, 0x13], // 0x25, %\n    '&': [0x04, 0x0a, 0x0a, 0x0a, 0x15, 0x12, 0x0d], // 0x26, &\n    \"'\": [0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00], // 0x27, '\n    '(': [0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02], // 0x28, (\n    ')': [0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08], // 0x29, )\n    '*': [0x04, 0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x04], // 0x2a, *\n    '+': [0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00], // 0x2b, +\n    ',': [0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x08], // 0x2c, ,\n    '-': [0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00], // 0x2d, -\n    '.': [0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c], // 0x2e, .\n    '/': [0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x10], // 0x2f, /\n    '0': [0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e], // 0x30, 0\n    '1': [0x04, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x0e], // 0x31, 1\n    '2': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1f], // 0x32, 2\n    '3': [0x0e, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0e], // 0x33, 3\n    '4': [0x02, 0x06, 0x0a, 0x12, 0x1f, 0x02, 0x02], // 0x34, 4\n    '5': [0x1f, 0x10, 0x1e, 0x01, 0x01, 0x11, 0x0e], // 0x35, 5\n    '6': [0x06, 0x08, 0x10, 0x1e, 0x11, 0x11, 0x0e], // 0x36, 6\n    '7': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08], // 0x37, 7\n    '8': [0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e], // 0x38, 8\n    '9': [0x0e, 0x11, 0x11, 0x0f, 0x01, 0x02, 0x0c], // 0x39, 9\n    ':': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x0c, 0x00], // 0x3a, :\n    ';': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x04, 0x08], // 0x3b, ;\n    '<': [0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02], // 0x3c, <\n    '=': [0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x00], // 0x3d, =\n    '>': [0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08], // 0x3e, >\n    '?': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04], // 0x3f, ?\n    // -----------------------------------------------------------\n    '@': [0x0e, 0x11, 0x17, 0x15, 0x17, 0x10, 0x0f,],   // 0x40, @\n    'A': [0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11,],   // 0x41, A\n    'B': [0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e,],   // 0x42, B\n    'C': [0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e,],   // 0x43, C\n    'D': [0x1e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1e,],   // 0x44, D\n    'E': [0x1f, 0x10, 0x10, 0x1c, 0x10, 0x10, 0x1f,],   // 0x45, E\n    'F': [0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10,],   // 0x46, F\n    'G': [0x0e, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0f,],   // 0x37, G\n    'H': [0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11,],   // 0x48, H\n    'I': [0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e,],   // 0x49, I\n    'J': [0x1f, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c,],   // 0x4a, J\n    'K': [0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11,],   // 0x4b, K\n    'L': [0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f,],   // 0x4c, L\n    'M': [0x11, 0x1b, 0x15, 0x11, 0x11, 0x11, 0x11,],   // 0x4d, M\n    'N': [0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11,],   // 0x4e, N\n    'O': [0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x4f, O\n    'P': [0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10,],   // 0x50, P\n    'Q': [0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d,],   // 0x51, Q\n    'R': [0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11,],   // 0x52, R\n    'S': [0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e,],   // 0x53, S\n    'T': [0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x54, T\n    'U': [0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x55, U\n    'V': [0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x56, V\n    'W': [0x11, 0x11, 0x11, 0x15, 0x15, 0x1b, 0x11,],   // 0x57, W\n    'X': [0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11,],   // 0x58, X\n    'Y': [0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04,],   // 0x59, Y\n    'Z': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f,],   // 0x5a, Z\n    '[': [0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e,],   // 0x5b, [\n    '\\\\': [0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x01,],   // 0x5c, \\\n    ']': [0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e,],   // 0x5d, ]\n    '^': [0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00,],   // 0x5e, ^\n    '_': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,],   // 0x5f, _\n    //------------------------------------------------------------\n    '`': [0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x60, `\n    'a': [0x00, 0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d,],   // 0x61, a\n    'b': [0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c,],   // 0x62, b\n    'c': [0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x0e,],   // 0x63, c\n    'd': [0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07,],   // 0x64, d\n    'e': [0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f,],   // 0x65, e\n    'f': [0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08,],   // 0x66, f\n    'g': [0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e,],   // 0x67, g\n    'h': [0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11,],   // 0x68, h\n    'i': [0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e,],   // 0x69, i\n    'j': [0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c,],   // 0x6a, j\n    'k': [0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12,],   // 0x6b, k\n    'l': [0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x6c, l\n    'm': [0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11,],   // 0x6d, m\n    'n': [0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11,],   // 0x6e, n\n    'o': [0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e,],   // 0x6f, o\n    'p': [0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10,],   // 0x70, p\n    'q': [0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01,],   // 0x71, q\n    'r': [0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10,],   // 0x72, r\n    's': [0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e,],   // 0x73, s\n    't': [0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06,],   // 0x74, t\n    'u': [0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d,],   // 0x75, u\n    'v': [0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x76, v\n    'w': [0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a,],   // 0x77, w\n    'x': [0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11,],   // 0x78, x\n    'y': [0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e,],   // 0x79, y\n    'z': [0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f,],   // 0x7a, z\n    '{': [0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06,],   // 0x7b, {\n    '|': [0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04,],   // 0x7c, |\n    '}': [0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c,],   // 0x7d, }\n    '~': [0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x7e, ~\n    'DEL': [0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,],   // 0x7f, DEL\n  },\n};\n\nexport default fontMap;\n","import Font from './Fonts/5x7-font';\n\nexport const textToBitmap = (text, color = [0, 255, 0], padding = 0) => {\n  const bitMap = [];\n\n  // [...Array(Font.row).keys()].forEach((r) =>\n  //   [...Array(Font.column).keys()].forEach(() => {\n  //     bitMap[r] = [];\n  //     text.split('').forEach((char) => {\n  //       bitMap[r].push(\n  //         ...Font.chars[char][r]\n  //           .toString(2)\n  //           .padStart(char !== ' ' ? 5 : 1, 0)\n  //           .split('')\n  //           .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n  //         ...[...Array(padding).keys()].map(() => 0), // Adding padding to right\n  //       );\n  //     });\n  //   }),\n  // );\n\n  const textArray = text.split('');\n\n  [...Array(Font.column * text.length + text.length * padding).keys()].forEach(\n    (c) => {\n      bitMap[c] = [];\n\n      if (\n        padding &&\n        c % (Font.column + padding) === Font.column + padding - 1\n      ) {\n        [...Array(Font.row).keys()].map(() => bitMap[c].push([0, 0, 0]));\n      } else {\n        [...Array(Font.row).keys()].forEach((r) => {\n          const char = textArray[Math.floor(c / (Font.column + padding))];\n          // text.split('')[text.length%column].forEach((char) => {\n          bitMap[c].push(\n            Font.chars[char][r]\n              .toString(2)\n              .padStart(char !== ' ' ? 5 : 1, 0)\n              .split('')[c % (Font.column + padding)] === '1'\n              ? color\n              : [0, 0, 0],\n            // .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n          );\n          // });\n        });\n      }\n    },\n  );\n\n  return bitMap;\n};\n","import { textToBitmap } from '../MatrixLCD/utils';\n\nexport const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle, offset) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      // backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = 18;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, 9 + (offset || 0));\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n\nexport const getPixelsOfLines = ({\n  firstLine,\n  firstLineOffset,\n  ledColor,\n  secondLine,\n}) => {\n  const result = [];\n  const color = Object.values(ledColor).splice(0, 3);\n\n  if (firstLine && firstLine !== '') {\n    result.push({\n      x: 0,\n      y: 1,\n      pixels: [\n        ...[...Array(firstLineOffset)].map(() =>\n          [...Array(7)].map(() => [0, 0, 0]),\n        ),\n        ...textToBitmap(firstLine, color, 1),\n      ],\n    });\n  } else {\n    result.push({\n      x: 0, // + (firstLineOffset || 0), // TODO it should be removed\n      y: 1,\n      pixels: [],\n    });\n  }\n\n  if (secondLine && secondLine !== '') {\n    result.push({ x: 0, y: 10, pixels: textToBitmap(secondLine, color, 1) });\n  }\n\n  return result;\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  createMessageBoardBinaryBlob2,\n  createMessageBoardBinaryBlob3,\n  saveFile,\n  createJSONBlob,\n} from '../../app/utils';\nimport { getPixelsOfLines } from './helpers';\n\nexport const DEFAULT_GRAPHICAL_TEXT = 'Hello World ⛔ سلام دنیا 😁';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 48,\n    firstLine: 'Line 1',\n    firstLineOffset: 0,\n    imageData: [],\n    isGraphical: false,\n    ledColor: { r: 0, g: 255, b: 0, a: 1 },\n    pixelCornerRadius: 5,\n    pixelSize: 10,\n    row: 18,\n    secondLine: 'Line 2',\n    scrollSpeed: 40,\n    spaceBetweenPixels: null,\n    style: null,\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setIsGraphical: (state, action) => {\n      state.isGraphical = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n    exportData: (state, action) => {\n      if (state.isGraphical) {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [createMessageBoardBinaryBlob2(state.imageData), 'bin'];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      } else {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [createMessageBoardBinaryBlob3(getPixelsOfLines(state)), 'bin'];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      }\n    },\n  },\n});\n\nexport const {\n  exportData,\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setIsGraphical,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard;\nexport const getColumn = (state) => state.scrollingBoard.column;\nexport const getFirstLine = (state) => state.scrollingBoard.firstLine;\nexport const getImageData = (state) => state.scrollingBoard.imageData;\nexport const getIsGraphical = (state) => state.scrollingBoard.isGraphical;\nexport const getLedColor = (state) => state.scrollingBoard.ledColor;\nexport const getRow = (state) => state.scrollingBoard.row;\nexport const getSecondLine = (state) => state.scrollingBoard.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard.scrollSpeed;\n\nexport default slice.reducer;\n","import { textToBitmap } from '../MatrixLCD/utils';\n\nexport const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle, offset, height) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      // backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = height || 18;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, height / 2 + (offset || 0));\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n\nexport const getPixelsOfLines = ({\n  firstLine,\n  firstLineOffset,\n  ledColor,\n  secondLine,\n}) => {\n  const result = [];\n  const color = Object.values(ledColor).splice(0, 3);\n\n  if (firstLine && firstLine !== '') {\n    result.push({\n      x: 0,\n      y: 1,\n      pixels: [\n        ...[...Array(firstLineOffset)].map(() =>\n          [...Array(7)].map(() => [0, 0, 0]),\n        ),\n        ...textToBitmap(firstLine, color, 1),\n      ],\n    });\n  } else {\n    result.push({\n      x: 0, // + (firstLineOffset || 0), // TODO it should be removed\n      y: 1,\n      pixels: [],\n    });\n  }\n\n  if (secondLine && secondLine !== '') {\n    result.push({ x: 0, y: 10, pixels: textToBitmap(secondLine, color, 1) });\n  }\n\n  return result;\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  createMessageBoardBinaryBlob2,\n  createMessageBoardBinaryBlob3,\n  saveFile,\n  createJSONBlob,\n} from '../../app/utils';\nimport { getPixelsOfLines } from './helpers';\n\nexport const DEFAULT_GRAPHICAL_TEXT = '⛔ CAUTION ⛔';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 36,\n    firstLine: 'CAUTION',\n    firstLineOffset: 0,\n    imageData: [],\n    isGraphical: false,\n    ledColor: { r: 255, g: 0, b: 0, a: 1 },\n    pixelCornerRadius: 5,\n    pixelSize: 10,\n    row: 8,\n    secondLine: 'Line 1',\n    scrollSpeed: 40,\n    spaceBetweenPixels: null,\n    style: {\n      textColor: '#ff0000',\n      fontSize: 8,\n    },\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setIsGraphical: (state, action) => {\n      state.isGraphical = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n    exportDataLite: (state, action) => {\n      if (state.isGraphical) {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [\n            createMessageBoardBinaryBlob2(\n              state.imageData,\n              state.column,\n              state.row,\n            ),\n            'bin',\n          ];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      } else {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [\n            createMessageBoardBinaryBlob3(\n              getPixelsOfLines(state),\n              state.column,\n              state.row,\n              true,\n            ),\n            'bin',\n          ];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      }\n    },\n  },\n});\n\nexport const {\n  exportDataLite,\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setIsGraphical,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard2;\nexport const getColumn = (state) => state.scrollingBoard2.column;\nexport const getFirstLine = (state) => state.scrollingBoard2.firstLine;\nexport const getImageData = (state) => state.scrollingBoard2.imageData;\nexport const getIsGraphical = (state) => state.scrollingBoard2.isGraphical;\nexport const getLedColor = (state) => state.scrollingBoard2.ledColor;\nexport const getRow = (state) => state.scrollingBoard2.row;\nexport const getSecondLine = (state) => state.scrollingBoard2.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard2.scrollSpeed;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Typography,\n  Button,\n  MenuItem,\n  Menu,\n} from '@material-ui/core';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { saveAsFile, setShowPreview } from '../features/Lightbar/ligther-slice';\nimport { exportData } from '../features/ScrollingBoard/scrolling-board-slice';\nimport { exportDataLite } from '../features/ScrollingBoard2/scrolling-board-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  previewButton: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [showAppbarButtons, setShowAppbarButton] = useState({\n    showPreview: false,\n    showExport: false,\n  });\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const onCloseContexMenu = (isJSON) => () => {\n    if (location.pathname.search(/lightbar$/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(saveAsFile(isJSON));\n      }\n    } else if (location.pathname.search(/message-board-lite/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(exportDataLite(isJSON));\n      }\n    } else if (location.pathname.search(/message-board/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(exportData(isJSON));\n      }\n    }\n    setAnchorEl(null);\n  };\n  const openContextMenu = (e) => setAnchorEl(e.currentTarget);\n  const onPreviewClick = () => dispatch(setShowPreview(true));\n  const goHome = () => history.replace('/');\n\n  useEffect(() => {\n    if (location.pathname.search(/lightbar$/) > 0) {\n      setShowAppbarButton({ showPreview: true, showExport: true });\n    } else if (location.pathname.search(/message-board/) > 0) {\n      setShowAppbarButton({ showPreview: false, showExport: true });\n    } else {\n      setShowAppbarButton({ showPreview: false, showExport: false });\n    }\n  }, [location]);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={goHome}\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          DandR Electronics\n        </Typography>\n        {showAppbarButtons.showPreview && (\n          <Button\n            className={classes.previewButton}\n            onClick={onPreviewClick}\n            startIcon={<PlayArrowIcon />}\n            variant=\"outlined\"\n          >\n            Preview\n          </Button>\n        )}\n        {showAppbarButtons.showExport && (\n          <IconButton\n            aria-label=\"Download\"\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={openContextMenu}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        )}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={onCloseContexMenu()}\n        >\n          <MenuItem onClick={onCloseContexMenu(false)}>Export BIN</MenuItem>\n          {\n            // <MenuItem onClick={onCloseContexMenu(true)}>Export JSON</MenuItem>\n          }\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Dialog,\n  useMediaQuery,\n  useTheme,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getShowPreview,\n  setShowPreview,\n  getCycles,\n} from '../Lightbar/ligther-slice';\nimport LightbarPreview from '.';\n\nconst useStyles = makeStyles({});\n\nfunction LivePreview() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const showPreview = useSelector(getShowPreview);\n  const cycles = useSelector(getCycles);\n  const dispatch = useDispatch();\n  const [visibleCycle, setVisibleCycle] = useState(0);\n  const [repeat, setRepeat] = useState(1);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        cycles[visibleCycle].repeat > 1 &&\n        repeat < cycles[visibleCycle].repeat\n      ) {\n        setRepeat(repeat + 1);\n      } else {\n        setVisibleCycle(\n          visibleCycle + 1 < cycles.length ? visibleCycle + 1 : 0,\n        );\n        setRepeat(1);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  const handleClose = () => dispatch(setShowPreview(false));\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={showPreview}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Lightbar Preview</DialogTitle>\n        <DialogContent>\n          {cycles && cycles[visibleCycle] && (\n            <LightbarPreview lights={cycles[visibleCycle].lights} />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LivePreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport map from 'lodash/map'\nimport merge from 'lodash/merge'\nimport color from 'react-color/lib/helpers/color'\n\nimport { ColorWrap, Swatch } from 'react-color/lib/components/common'\n\nexport const SchemaColorPicker = ({ onChange, onSwatchHover, hex, colors, width, triangle,\n  styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      card: {\n        width,\n        background: '#fff',\n        border: '0 solid rgba(0,0,0,0.25)',\n        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n        borderRadius: '4px',\n        position: 'relative',\n      },\n      body: {\n        padding: '15px 9px 9px 15px',\n        height: 40,\n      },\n      label: {\n        fontSize: '18px',\n        color: '#fff',\n      },\n      triangle: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent #fff transparent',\n        position: 'absolute',\n      },\n      triangleShadow: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',\n        position: 'absolute',\n      },\n      hash: {\n        background: '#F0F0F0',\n        height: '30px',\n        width: '30px',\n        borderRadius: '4px 0 0 4px',\n        float: 'left',\n        color: '#98A1A4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      input: {\n        width: '100px',\n        fontSize: '14px',\n        color: '#666',\n        border: '0px',\n        outline: 'none',\n        height: '28px',\n        boxShadow: 'inset 0 0 0 1px #F0F0F0',\n        boxSizing: 'content-box',\n        borderRadius: '0 4px 4px 0',\n        float: 'left',\n        paddingLeft: '8px',\n      },\n      swatch: {\n        width: '30px',\n        height: '30px',\n        float: 'left',\n        borderRadius: '4px',\n        borderColor: '#F0F0F0',\n        margin: '0 6px 6px 0',\n      },\n      clear: {\n        clear: 'both',\n      },\n    },\n    'hide-triangle': {\n      triangle: {\n        display: 'none',\n      },\n      triangleShadow: {\n        display: 'none',\n      },\n    },\n    'top-left-triangle': {\n      triangle: {\n        top: '-10px',\n        left: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        left: '12px',\n      },\n    },\n    'top-right-triangle': {\n      triangle: {\n        top: '-10px',\n        right: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        right: '12px',\n      },\n    },\n  }, passedStyles), {\n    'hide-triangle': triangle === 'hide',\n    'top-left-triangle': triangle === 'top-left',\n    'top-right-triangle': triangle === 'top-right',\n  })\n\n  const handleChange = (hexcode, e) => {\n    color.isValidHex(hexcode) && onChange({\n      hex: hexcode,\n      source: 'hex',\n    }, e)\n  }\n\n  return (\n    <div style={ styles.card } className={ `twitter-picker ${ className }` }>\n      <div style={ styles.triangleShadow } />\n      <div style={ styles.triangle } />\n\n      <div style={ styles.body }>\n        { map(colors, (c, i) => {\n          return (\n            <Swatch\n              key={ i }\n              color={ c }\n              hex={ c }\n              style={ styles.swatch }\n              onClick={ handleChange }\n              onHover={ onSwatchHover }\n              focusStyle={{\n                boxShadow: `0 0 4px ${ c }`,\n              }}\n            />\n          )\n        }) }\n      </div>\n    </div>\n  )\n}\n\nSchemaColorPicker.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  triangle: PropTypes.oneOf(['hide', 'top-left', 'top-right']),\n  colors: PropTypes.arrayOf(PropTypes.string),\n  styles: PropTypes.object,\n}\n\nSchemaColorPicker.defaultProps = {\n  width: 276,\n  colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3',\n    '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],\n  triangle: 'top-left',\n  styles: {},\n}\n\nexport default ColorWrap(SchemaColorPicker)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core';\nimport SchemaColorPicker from './schema-color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n    backgroundColor: 'white',\n  },\n  pallete: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: '2',\n  },\n  innerPallete: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n});\n\nconst ColorPicker = ({ colors, value, onClick, onChange }) => {\n  const classes = useStyles({ colors });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.pallete}>\n        <div className={classes.innerPallete} onClick={onClick} />\n        {colors?.length ? (\n          <SchemaColorPicker\n            colors={colors}\n            hex={false}\n            triangle=\"hide\"\n            onChange={onChange}\n          />\n        ) : (\n          <SketchPicker\n            presetColors={[\n              '#FFBF00',\n              '#FF0000',\n              '#00FF00',\n              '#0000FF',\n              '#000000',\n            ]}\n            color={value}\n            onChange={onChange}\n            disableAlpha\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default ColorPicker;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nimport { AlphaPicker } from 'react-color';\nimport ColorPicker from './color-picker';\nimport { TRANSPARENT_COLOR } from '../../LightbarSchema';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n    marginTop: 20,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: (prop) => `rgb(${Object.values(prop.color)})`,\n  },\n});\n\nfunction LightbarSetting({ colors, config, onChange }) {\n  const classes = useStyles({\n    color: config?.color || { r: 255, g: 255, b: 255 },\n  });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]:\n          +target.value >= 0 && +target.value <= 255\n            ? target.value.trim()\n            : config?.color[target.name],\n      },\n    });\n  };\n\n  const onColorPickerChange = (color) =>\n    onChange({\n      color: color.rgb,\n    });\n\n  const onAlphaPickerChage = (color) => {\n    onChange({\n      color: color.rgb,\n    });\n  };\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n  // const isRGBSchema = (list) =>\n  //   ['#FF0000', '#00FF00', '#0000FF'].every((v) => list.indexOf(v) > -1);\n  const isRGBSchema = (_) => false;\n\n  const colorSchema = [...colors];\n  const isLightNotUsable = colors.indexOf(TRANSPARENT_COLOR) > -1;\n\n  // if (isLightNotUsable) {\n  //   colorSchema.push('#000000');\n  // }\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader} title=\"Set the color\" />\n        <CardContent className={classes.cardContent}>\n          {config ? (\n            <div className={classes.colorInfo}>\n              {isRGBSchema(colorSchema) ? (\n                <>\n                  <TextField\n                    label=\"Red\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"r\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.r : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Green\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"g\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.g : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Blue\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"b\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.b : 255}\n                    variant=\"outlined\"\n                  />\n                </>\n              ) : (\n                <AlphaPicker\n                  color={config.color}\n                  onChange={onAlphaPickerChage}\n                  width={280}\n                />\n              )}\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {showColorPicker && (\n                <ColorPicker\n                  colors={\n                    isRGBSchema(colorSchema) ? [] : [...colorSchema, '#010101', TRANSPARENT_COLOR]\n                  }\n                  onClick={setColorPickerState}\n                  onChange={onColorPickerChange}\n                  value={config?.color}\n                />\n              )}\n            </div>\n          ) : isLightNotUsable ? (\n            <Typography variant=\"h6\">\n              This light is not usable, please select another light.\n            </Typography>\n          ) : (\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the\n              color.\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import React from 'react';\nimport {\n  List,\n  makeStyles,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCycles,\n  getSelectedCycle,\n  setSelectedCycle,\n  deleteCycle,\n  setCycleRepeat,\n} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: 150,\n  },\n  itemText: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTextFirstRow: {\n    alignSelf: 'normal',\n    borderBottom: '1px solid lightgray',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 5,\n  },\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  onRepeatChange,\n  repeat,\n  selected,\n}) => (\n  <ListItem\n    alignItems=\"center\"\n    className={className.item}\n    selected={selected}\n    onClick={onClick}\n    button\n  >\n    <ListItemText>\n      <div className={className.itemText}>\n        <div className={className.itemTextFirstRow}>\n          <Typography component=\"span\" variant=\"h6\">\n            {`Cycle #${id + 1}`}\n          </Typography>\n          <TextField\n            label=\"Repeat\"\n            inputProps={{ max: 999, min: 0 }}\n            min={1}\n            onChange={onRepeatChange}\n            size=\"small\"\n            type=\"number\"\n            value={repeat}\n            variant=\"outlined\"\n          />\n        </div>\n        <LightbarPreview lights={lights} width={(lights.length - 6) * 10} />\n      </div>\n    </ListItemText>\n    <ListItemSecondaryAction>\n      <IconButton arial-label=\"delete\" edge=\"end\" onClick={onDelete}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nfunction CycleList() {\n  const classes = useStyles();\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const dispatch = useDispatch();\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n  const onRepeatChange = (id) => (e) =>\n    dispatch(setCycleRepeat({ id, repeat: e.target.value }));\n\n  return (\n    <List className={classes.root}>\n      {cycles.map((c, i) => (\n        <Cycle\n          className={{\n            item: classes.item,\n            itemText: classes.itemText,\n            itemTextFirstRow: classes.itemTextFirstRow,\n          }}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          onRepeatChange={onRepeatChange(i)}\n          repeat={c.repeat}\n          selected={i === selectedCycle}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DuplicateIcon from '@material-ui/icons/FileCopyOutlined';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle, duplicateCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onAddClick = () => dispatch(addCycle());\n  const onDuplicateClick = () => dispatch(duplicateCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onDuplicateClick}\n            >\n              <DuplicateIcon />\n            </IconButton>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onAddClick}\n            >\n              <AddIcon />\n            </IconButton>\n            </>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, { useEffect } from 'react';\nimport Konva from 'konva';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { useMediaQuery } from '@material-ui/core';\nimport LightbarPreview from '../LightbarPreview';\nimport LivePreview from '../LightbarPreview/live-preview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {\n  getLightbar,\n  getColorSchema,\n} from '../LightbarSelector/lightbar-selector-slice';\nimport {\n  getSelectedCycle,\n  setLightbar,\n  addCycle,\n  getCycles,\n  setSelectedLight,\n  getSelectedLight,\n  setLightSetting,\n  getShowPreview,\n  getLatestSelectedColor,\n} from './ligther-slice';\nimport { getSchema } from '../LightbarSchema/lightbar-shema-slice';\nimport { rgbToHex } from '../../app/utils';\n// import { DEFAULT_COLOR_SCHEMA } from './constants';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n    flexWrap: (props) => (props.mqMatches ? null : 'wrap-reverse'),\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const mqMatches = useMediaQuery('(min-width: 800px)');\n  const classes = useStyles({ mqMatches });\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n  const showPreview = useSelector(getShowPreview);\n  const colorSchema = useSelector(getSchema);\n  // const colorSchema = DEFAULT_COLOR_SCHEMA;\n  const latestSelectedColor = useSelector(getLatestSelectedColor);\n\n  const selectLight = (id) =>\n    dispatch(\n      setSelectedLight({\n        id: [id],\n        shouldSetColor:\n          colorSchema[id].indexOf(rgbToHex(latestSelectedColor)) > -1,\n      }),\n    );\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar({ lightbar: selectedModel, schema: colorSchema }));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      {!!lightbar && (\n        <div className={classes.root}>\n          <div className={classes.cycles}>\n            <Cycles />\n          </div>\n          <div className={classes.details}>\n            <LightbarPreview\n              lights={cycles[selectedCycle]?.lights}\n              onClick={selectLight}\n              selectedLight={selectedLight}\n              title={selectedModel.model}\n            />\n            <LighbarSetting\n              config={cycles[selectedCycle]?.lights[selectedLight]}\n              colors={colorSchema[selectedLight]}\n              onChange={setLightChange}\n            />\n          </div>\n        </div>\n      )}\n      {showPreview && <LivePreview />}\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stage, Rect, Layer } from 'react-konva';\nimport { makeStyles } from '@material-ui/core';\nimport { textToBitmap } from './utils';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: (props) => props.backgroundColor || '#565656',\n    borderRadius: 4,\n    borderColor: '#333',\n    display: 'inline-block',\n    padding: 5,\n    margin: 5,\n  },\n});\n\nfunction MatrixLCD({\n  backgroundColor,\n  column,\n  hasGlow = false,\n  pixelColor = 'green',\n  pixelCornerRadius,\n  pixelSize = 10,\n  pixelStatus = [],\n  row,\n  scrollSpeed = 1000,\n  space = 2,\n}) {\n  const classes = useStyles({ backgroundColor });\n  const scale =\n    window.innerWidth - 100 < (pixelSize + space) * column\n      ? (window.innerWidth - 100) / ((pixelSize + space) * column)\n      : 1;\n  const pixelRoom = (pixelSize + space) * scale;\n  const [scroll, setScroll] = React.useState(0);\n\n  React.useEffect(() => {\n    let intervalId = 0;\n    // if (pixelStatus[0].pixels.length > column) {\n    //   pixelStatus[0].pixels = [\n    //     ...pixelStatus[0].pixels,\n    //     ...[...new Array(column).keys()],\n    //   ];\n    // }\n    pixelStatus.forEach((status, i) => {\n      if (status.pixels.length && status.pixels.length > column) {\n        status.pixels = [...status.pixels, ...[...new Array(column).keys()]];\n      }\n    });\n    intervalId = setInterval(() => {\n      pixelStatus.forEach((status, i) => {\n        if (status.pixels.length && status.pixels.length > column) {\n          // status.pixels.forEach((r) => r.push(r.shift()));\n          pixelStatus[i].pixels.push(pixelStatus[i].pixels.shift());\n        }\n      });\n      setScroll((state) => state + 1);\n    }, scrollSpeed);\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [pixelStatus]);\n\n  const getPixelColor = (r, c) => {\n    let color = 'rgba(0, 0, 0, 0.1)';\n\n    pixelStatus.forEach((item) => {\n      if (c >= item.x && r >= item.y) {\n        if (\n          item.pixels[c - item.x] &&\n          item.pixels[c - item.x][r - item.y] &&\n          item.pixels[c - item.x][r - item.y].join('') !== '000'\n        ) {\n          // color = pixelColor;\n          color = `rgba(${item.pixels[c - item.x][r - item.y]})`;\n        }\n      }\n    });\n\n    return color;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stage width={pixelRoom * column} height={pixelRoom * row}>\n        <Layer x={0} y={0}>\n          {[...Array(row).keys()]\n            .map((r) =>\n              [...Array(column).keys()].map((c) => (\n                <Rect\n                  key={`${r}-${c}`}\n                  cornerRadius={pixelCornerRadius || 0}\n                  fill={getPixelColor(r, c)}\n                  x={space + pixelRoom * c}\n                  y={space + pixelRoom * r}\n                  width={pixelSize * scale}\n                  height={pixelSize * scale}\n                />\n              )),\n            )\n            .flat()}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nMatrixLCD.propTypes = {\n  backgroundColor: PropTypes.string,\n  column: PropTypes.number,\n  hasGlow: PropTypes.bool,\n  pixelColor: PropTypes.string,\n  pixelCornerRadius: PropTypes.number,\n  pixelSize: PropTypes.number,\n  pixelStatus: PropTypes.array,\n  row: PropTypes.number,\n  scrollSpeed: PropTypes.number,\n  space: PropTypes.number,\n};\n\nexport default MatrixLCD;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.string,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  CardHeader,\n  TextField,\n  Button,\n  InputAdornment,\n  FormControlLabel,\n  Switch,\n  Grid,\n} from '@material-ui/core';\nimport Bmp from 'binary-bmp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport html2canvas from 'html2canvas';\nimport MatrixLCD from '../MatrixLCD';\nimport { textToBitmap } from '../MatrixLCD/utils';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport {\n  getBoardState,\n  setLedColor,\n  setBoardState,\n  DEFAULT_GRAPHICAL_TEXT,\n} from './scrolling-board-slice';\nimport { convertTextToBitmap, getPixelsOfLines } from './helpers';\nimport FontToolbar from './font-toolbar';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.isGraphical && props.style && props.style.fontFamily) ||\n        'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = configs.isGraphical\n    ? [{ x: 0, y: 0, pixels: configs.imageData }]\n    : getPixelsOfLines(configs);\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState();\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ledColor: color.rgb,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const changeTextMode = (e) => {\n    const newTextConfigs = {\n      firstLine: e.target.checked ? DEFAULT_GRAPHICAL_TEXT : 'Line 1',\n      imageData: e.target.checked\n        ? convertTextToBitmap(DEFAULT_GRAPHICAL_TEXT)\n        : null,\n    };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ...newTextConfigs,\n        isGraphical: e.target.checked,\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            e.target.value,\n            configs.style,\n            configs.firstLineOffset,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const onChangeOffset = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: +e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            configs.firstLine,\n            configs.style,\n            +e.target.value,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n        ),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={JSON.parse(JSON.stringify(pixelStatus))}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          {/*\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          */}\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={configs.isGraphical}\n                  onChange={changeTextMode}\n                  name=\"isGraphical\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Graphical fonts\"\n            />\n          </div>\n          <div className={classes.row}>\n            {configs.isGraphical && (\n              <FontToolbar\n                className={classes.fullwidth}\n                onChange={changeStyle}\n                addEmoji={addEmoji}\n              />\n            )}\n            {configs.isGraphical ? (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Top Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    inputProps={{ maxLength: 8 }}\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Left Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </div>\n          {!configs.isGraphical && (\n            <div className={classes.row}>\n              <TextField\n                className={clsx([classes.textField, classes.fullwidth])}\n                label=\"Second Line\"\n                name=\"secondLine\"\n                onChange={onChangeText}\n                size=\"small\"\n                type=\"text\"\n                value={configs.secondLine}\n                variant=\"outlined\"\n              />\n            </div>\n          )}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Switch,\n  TextField,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { config } from 'shelljs';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport MatrixLCD from '../MatrixLCD';\nimport FontToolbar from './font-toolbar';\nimport { convertTextToBitmap, getPixelsOfLines } from './helpers';\nimport {\n  DEFAULT_GRAPHICAL_TEXT,\n  getBoardState,\n  setBoardState,\n} from './scrolling-board-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.isGraphical && props.style && props.style.fontFamily) ||\n        'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = configs.isGraphical\n    ? [{ x: 0, y: 0, pixels: configs.imageData }]\n    : getPixelsOfLines(configs);\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState(configs.style);\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ledColor: color.rgb,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n  };\n\n  const changeTextMode = (e) => {\n    const newTextConfigs = {\n      firstLine: e.target.checked ? DEFAULT_GRAPHICAL_TEXT : 'CAUTION',\n      imageData: e.target.checked\n        ? convertTextToBitmap(\n          DEFAULT_GRAPHICAL_TEXT,\n          configs.style,\n          configs.firstLineOffset,\n          configs.row,\n        )\n        : null,\n    };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ...newTextConfigs,\n        isGraphical: e.target.checked,\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            e.target.value,\n            configs.style,\n            configs.firstLineOffset,\n            configs.row,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const onChangeOffset = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: +e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            configs.firstLine,\n            configs.style,\n            +e.target.value,\n            configs.row,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={JSON.parse(JSON.stringify(pixelStatus))}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          {/*\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          */}\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={configs.isGraphical}\n                  onChange={changeTextMode}\n                  name=\"isGraphical\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Graphical fonts\"\n            />\n          </div>\n          <div className={classes.row}>\n            {configs.isGraphical && (\n              <FontToolbar\n                className={classes.fullwidth}\n                fontSize={configs.style.fontSize}\n                onChange={changeStyle}\n                addEmoji={addEmoji}\n              />\n            )}\n            {configs.isGraphical ? (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Top Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Left Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </div>\n          {/* !configs.isGraphical && (\n            <div className={classes.row}>\n              <TextField\n                className={clsx([classes.textField, classes.fullwidth])}\n                label=\"Second Line\"\n                name=\"secondLine\"\n                onChange={onChangeText}\n                size=\"small\"\n                type=\"text\"\n                value={configs.secondLine}\n                variant=\"outlined\"\n              />\n            </div>\n          ) */}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n  makeStyles,\n  CardHeader,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  card: {\n    width: '60vw',\n  },\n  cardContent: {\n    textAlign: 'center',\n  },\n  button: {\n    minHeight: 60,\n  },\n});\n\nfunction Platforms() {\n  const classes = useStyles();\n  const history = useHistory();\n  const route = (url) => () => history.push(url);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title=\"Select The Device\" />\n        <CardContent className={classes.cardContent}>\n          <ButtonGroup\n            className={classes.buttonGroup}\n            orientation=\"vertical\"\n            color=\"primary\"\n          >\n            <Button className={classes.button} onClick={route('/lightbars')}>\n              Lightbars\n            </Button>\n            {\n              // <Button className={classes.button} onClick={route('/lightbar')}>\n              //   Odyssey Lightbar Configuration\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/lightbar/schema')}\n              // >\n              //   Lightbar Schema\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/message-board')}\n              // >\n              //   Odyssey Message Board Configuration\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/message-board-lite')}\n              // >\n              //   Roadalert Message Configuration\n              // </Button>\n            }\n          </ButtonGroup>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Platforms;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { LightbarSelector } from './features/LightbarSelector';\nimport Header from './app/header';\nimport Lightbar from './features/Lightbar';\nimport ScrollingBoard from './features/ScrollingBoard';\nimport ScrollingBoard2 from './features/ScrollingBoard2';\n\nimport './App.css';\nimport Platforms from './features/Platforms';\nimport LightbarSchema from './features/LightbarSchema';\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Switch>\n        <Route path=\"/lightbars\">\n          <LightbarSelector />\n        </Route>\n        <Route path=\"/lightbar/schema\">\n          <LightbarSchema />\n        </Route>\n        <Route path=\"/lightbar\">\n          <Lightbar />\n        </Route>\n        <Route path=\"/message-board\">\n          <ScrollingBoard />\n        </Route>\n        <Route path=\"/message-board-lite\">\n          <ScrollingBoard2 />\n        </Route>\n        <Route path=\"/\">\n          <LightbarSelector />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport lightbarSchemaReducer from '../features/LightbarSchema/lightbar-shema-slice';\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\nimport scrollingBoardReducer from '../features/ScrollingBoard/scrolling-board-slice';\nimport scrollingBoardReducer2 from '../features/ScrollingBoard2/scrolling-board-slice';\n\nconst store = configureStore({\n  reducer: {\n    lightbarSchema: lightbarSchemaReducer,\n    lightbarSelector: lightbarSelectorReducer,\n    lightbar: lightbarReducer,\n    scrollingBoard: scrollingBoardReducer,\n    scrollingBoard2: scrollingBoardReducer2,\n  },\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { MuiThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter, MemoryRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './app/store';\nimport theme from './app/theme';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Provider store={store}>\n      <MemoryRouter basename=\"/\">\n        <App />\n      </MemoryRouter>\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}