{"version":3,"sources":["../node_modules/shelljs/src sync /^/.//.*$","features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSchema/constants.js","features/LightbarSchema/lightbar-shema-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/color-schema-list.js","features/LightbarSelector/index.js","features/LightbarPreview/index.js","features/LightbarSchema/index.js","app/utils.js","features/Lightbar/ligther-slice.js","features/MatrixLCD/Fonts/5x7-font.js","features/MatrixLCD/utils.js","features/ScrollingBoard/helpers.js","features/ScrollingBoard/scrolling-board-slice.js","features/ScrollingBoard2/helpers.js","features/ScrollingBoard2/scrolling-board-slice.js","app/header.js","features/LightbarPreview/live-preview.js","features/Lightbar/LightbarSetting/schema-color-picker.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","features/MatrixLCD/index.js","features/ScrollingBoard/font-toolbar.js","features/ScrollingBoard/index.js","features/ScrollingBoard2/font-toolbar.js","features/ScrollingBoard2/index.js","features/Platforms/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","LIGHTBARS","model","front","rear","isLinear","this","numberOfSideLights","isCustom","slice","createSlice","name","initialState","selectedModel","selectedColorSchema","hasGreen","reducers","selectLightbar","state","action","payload","selectColorSchema","setHasGreen","actions","getLightbar","lightbarSelector","getHasGreen","DEFAULT_LIGHT_COLOR_SCHEMA","lightbar","schema","setLightbar","length","i","total","push","getDefaultSchema","setSchemaName","setSchema","getSchemaName","lightbarSchema","getSchema","useStyles","makeStyles","list","border","borderRadius","marginTop","marginBottom","maxHeight","overflow","ListItems","onClick","selected","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","dispatch","useDispatch","List","className","theme","select","width","spacing","switch","withStyles","switchBase","color","green","backgroundColor","checked","track","Switch","ColorSchemaList","selectedSchema","colorSchema","JSON","parse","localStorage","getItem","Select","value","onChange","target","displayEmpty","inputProps","MenuItem","root","display","flexDirection","alignContent","justifyContent","minHeight","card","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","useState","shouldAskForNumberOfLights","askForNumberOfLights","routeToLightbar","closeDialog","Card","CardContent","Typography","variant","CardActions","Button","disabled","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","label","margin","type","_","cloneDeep","parseInt","isNaN","DialogActions","height","props","marginLeft","maxWidth","minWidth","Light","fill","getStrokeColor","overlay","rotation","scale","shadowBlur","stroke","text","x","y","cornerRadius","index","align","verticalAlign","LightbarPreview","lights","overlays","selectedLight","title","showLightLabel","containerRef","useRef","reverse","originalWidth","lightbarWidth","onLightClick","indexOf","getColor","r","g","b","a","rgbToHex","toFixed","ref","l","visible","flexFlow","textAlign","lightbarContent","settings","alignSelf","selectionButtons","flexWrap","colors","checkbox","selectedCheckbox","borderColor","red","blue","amber","white","transparent","borderStyle","cardActions","LightbarSchema","React","setSelectedLight","isDialogOpen","setDialogState","isSchemaChanged","setSchemaState","schemaName","lightColors","useEffect","to","getDefaultLights","clearSelectedLight","sectionLights","forEach","selectColor","shift","splice","goToLightbarSetting","Array","Checkbox","icon","clsx","checkedIcon","goBack","schemas","setItem","stringify","convertToHex","toUpperCase","createBinaryBlob","cycles","lightLength","c","repeat","buffer","ArrayBuffer","dv","DataView","setUint8","isUsable","join","isOff","linearValue","v","Blob","createMessageBoardBinaryBlob3","boardData","column","row","isLite","firstLine","secondLine","frames","pixels","setUint32","byteLength","f","binaryIndex","console","log","createMessageBoardBinaryBlob2","data","createJSONBlob","saveFile","blob","FileSaver","saveAs","at","selectedCycle","showPreview","latestSelectedColor","setSelectedCycle","shouldSetColor","addCycle","duplicateCycle","deleteCycle","setCycleRepeat","setLightSetting","setInitialState","setShowPreview","saveAsFile","Date","getTime","getCycles","getLatestSelectedColor","getSelectedCycle","getSelectedLight","getShowPreview","fontMap","chars","textToBitmap","padding","bitMap","textArray","split","Font","char","Math","floor","toString","padStart","convertTextToBitmap","userStyle","offset","trim","canvas","document","createElement","style","fontFamily","fontStyle","textColor","font","ctx","getContext","measureText","getTextWidth","textBaseline","fillStyle","fillRect","fillText","dataImage","col","pixel","convertToRowBaseArray","getImageData","getPixelsOfLines","firstLineOffset","ledColor","result","values","imageData","isGraphical","pixelCornerRadius","pixelSize","scrollSpeed","spaceBetweenPixels","setColumn","setImageData","setIsGraphical","setFirstLine","setLedColor","setPixelCornerRadius","setRow","setSecondLine","setScrollSpeed","setBoardState","exportData","getBoardState","scrollingBoard","exportDataLite","scrollingBoard2","menuButton","marginRight","flexGrow","previewButton","Header","location","useLocation","showExport","showAppbarButtons","setShowAppbarButton","anchorEl","setAnchorEl","onCloseContexMenu","isJSON","pathname","search","undefined","AppBar","position","Toolbar","IconButton","edge","aria-label","replace","startIcon","currentTarget","Menu","keepMounted","Boolean","LivePreview","useTheme","fullScreen","useMediaQuery","breakpoints","down","visibleCycle","setVisibleCycle","setRepeat","interval","setInterval","clearInterval","handleClose","aria-labelledby","SchemaColorPicker","onSwatchHover","hex","triangle","styles","passedStyles","reactCSS","merge","background","boxShadow","body","borderWidth","triangleShadow","hash","float","alignItems","input","outline","boxSizing","paddingLeft","swatch","clear","top","left","right","handleChange","hexcode","isValidHex","source","onHover","focusStyle","defaultProps","ColorWrap","zIndex","pallete","innerPallete","bottom","ColorPicker","presetColors","disableAlpha","cardHeader","cardContent","colorInfo","colorView","prop","LightbarSetting","config","showColorPicker","setShowColorPicker","setColorPickerState","isLightNotUsable","CardHeader","rgb","item","itemText","itemTextFirstRow","borderBottom","paddingBottom","Cycle","onDelete","onRepeatChange","component","max","min","size","ListItemSecondaryAction","arial-label","CycleList","Cycles","mqMatches","details","Lightbar","change","MatrixLCD","hasGlow","pixelColor","pixelStatus","space","window","innerWidth","pixelRoom","setScroll","intervalId","status","getPixelColor","flat","emojiIcon","emojiPicker","formControl","toolbar","FontToolbar","addEmoji","setStyles","isEmojiPickerVisible","setEmojiPickerVisibility","onFontChange","FormControl","InputLabel","labelId","onSelect","emoji","matrixLCD","textField","fullwidth","ScrollingBoard","configs","textStyles","setTextStyle","onChangeText","onChangeOffset","FormControlLabel","control","newTextConfigs","native","Grid","container","xs","maxLength","Platforms","App","path","ScrollingBoard2","store","configureStore","reducer","lightbarSchemaReducer","lightbarSelectorReducer","lightbarReducer","scrollingBoardReducer","scrollingBoardReducer2","createMuiTheme","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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IAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,IAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAC1C,IAAK,CAAC,EAAM,GAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAC1C,IAAK,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,IAAK,CAAC,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAE1C,IAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,EAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAC1C,EAAK,CAAC,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,IAC1C,EAAK,CAA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","file":"static/js/main.c235f643.chunk.js","sourcesContent":["var map = {\n\t\"./cat\": 224,\n\t\"./cat.js\": 224,\n\t\"./cd\": 151,\n\t\"./cd.js\": 151,\n\t\"./chmod\": 225,\n\t\"./chmod.js\": 225,\n\t\"./common\": 17,\n\t\"./common.js\": 17,\n\t\"./cp\": 152,\n\t\"./cp.js\": 152,\n\t\"./dirs\": 226,\n\t\"./dirs.js\": 226,\n\t\"./echo\": 227,\n\t\"./echo.js\": 227,\n\t\"./error\": 153,\n\t\"./error.js\": 153,\n\t\"./exec\": 228,\n\t\"./exec-child\": 229,\n\t\"./exec-child.js\": 229,\n\t\"./exec.js\": 228,\n\t\"./find\": 230,\n\t\"./find.js\": 230,\n\t\"./grep\": 231,\n\t\"./grep.js\": 231,\n\t\"./head\": 232,\n\t\"./head.js\": 232,\n\t\"./ln\": 233,\n\t\"./ln.js\": 233,\n\t\"./ls\": 156,\n\t\"./ls.js\": 156,\n\t\"./mkdir\": 234,\n\t\"./mkdir.js\": 234,\n\t\"./mv\": 235,\n\t\"./mv.js\": 235,\n\t\"./popd\": 236,\n\t\"./popd.js\": 236,\n\t\"./pushd\": 237,\n\t\"./pushd.js\": 237,\n\t\"./pwd\": 155,\n\t\"./pwd.js\": 155,\n\t\"./rm\": 157,\n\t\"./rm.js\": 157,\n\t\"./sed\": 238,\n\t\"./sed.js\": 238,\n\t\"./set\": 239,\n\t\"./set.js\": 239,\n\t\"./sort\": 240,\n\t\"./sort.js\": 240,\n\t\"./tail\": 241,\n\t\"./tail.js\": 241,\n\t\"./tempdir\": 154,\n\t\"./tempdir.js\": 154,\n\t\"./test\": 242,\n\t\"./test.js\": 242,\n\t\"./to\": 243,\n\t\"./to.js\": 243,\n\t\"./toEnd\": 244,\n\t\"./toEnd.js\": 244,\n\t\"./touch\": 245,\n\t\"./touch.js\": 245,\n\t\"./uniq\": 246,\n\t\"./uniq.js\": 246,\n\t\"./which\": 247,\n\t\"./which.js\": 247\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 507;","export const numberOfSideLights = 3;\n\nexport const LIGHTBARS = [\n  {\n    model: 'OLD-21',\n    front: 21,\n    rear: 0,\n    isLinear: true,\n    get total() {\n      return this.front;\n    },\n  },\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n    get total() {\n      return this.front + this.rear + numberOfSideLights * 2;\n    },\n  },\n  {\n    model: 'Custom',\n    front: 0,\n    rear: 0,\n    isCustom: true,\n    get total() {\n      return this.front;\n    },\n  },\n];\n\nexport const COLOR_SCHEMA = [\n  {\n    title: 'Amber',\n    schema: ['#FFBF00', '#000000'],\n  },\n  {\n    title: 'Red',\n    schema: ['#FF0000', '#000000'],\n  },\n  {\n    title: 'Green',\n    schema: ['#00FF00', '#000000'],\n  },\n  {\n    title: 'Blue',\n    schema: ['#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red',\n    schema: ['#FFBF00', '#FF0000', '#000000'],\n  },\n  {\n    title: 'Amber, Green',\n    schema: ['#FFBF00', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Blue',\n    schema: ['#FFBF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Red, Green',\n    schema: ['#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Red, Blue',\n    schema: ['#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Green, Blue',\n    schema: ['#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Blue',\n    schema: ['#FFBF00', '#FF0000', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Green, Blue',\n    schema: ['#FFBF00', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Amber, Red, Green, Blue',\n    schema: ['#FFBF00', '#FF0000', '#00FF00', '#0000FF', '#000000'],\n  },\n  {\n    title: 'Full Color (RGB)',\n    schema: [],\n  },\n];\n","import { createSlice } from '@reduxjs/toolkit';\nimport { numberOfSideLights } from './constants';\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: {\n      model: 'SL-48',\n      front: 6,\n      rear: 6,\n      get total() {\n        return this.front + this.rear + numberOfSideLights * 2;\n      },\n    },\n    selectedColorSchema: null,\n    hasGreen: false,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload;\n    },\n    selectColorSchema: (state, action) => {\n      state.selectedColorSchema = action.payload;\n    },\n    setHasGreen: (state, action) => {\n      state.hasGreen = action.payload;\n    },\n  },\n});\n\nexport const { selectLightbar, selectColorSchema, setHasGreen } = slice.actions;\n\nexport const getLightbar = (state) => state.lightbarSelector.selectedModel;\nexport const getColorSchema = (state) =>\n  state.lightbarSelector.selectedColorSchema;\nexport const getHasGreen = (state) => state.lightbarSelector.hasGreen;\n\nexport default slice.reducer;\n","export const DEFAULT_LIGHT_COLOR_SCHEMA = [];\n","// eslint-disable no-parameter-reassign\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { DEFAULT_LIGHT_COLOR_SCHEMA } from './constants';\n\nconst getDefaultSchema = (lightbar) => {\n  const schema = [];\n  if (lightbar) {\n    for (let i = 0; i < lightbar.total; i += 1) {\n      schema.push([...DEFAULT_LIGHT_COLOR_SCHEMA]);\n    }\n  }\n  return schema;\n};\n\nconst slice = createSlice({\n  name: 'lightbarSchema',\n  initialState: {\n    lightbar: null,\n    name: null,\n    schema: null,\n  },\n  reducers: {\n    setLightbar: (state, action) => {\n      state.lightbar = action.payload;\n      if (!state.schema || !state.schema.length) {\n        state.schema = getDefaultSchema(state.lightbar);\n      }\n    },\n    setSchemaName: (state, action) => {\n      state.name = action.payload;\n    },\n    setSchema: (state, action) => {\n      state.schema = action.payload;\n      if (!action.payload) {\n        state.name = null;\n      }\n    },\n  },\n});\n\nexport const { setLightbar, setSchemaName, setSchema } = slice.actions;\n\nexport const getSchemaState = (state) => state.lightbarSchema;\nexport const getLightbar = (state) => state.lightbarSchema.lightbar;\nexport const getSchemaName = (state) => state.lightbarSchema.name;\nexport const getSchema = (state) => state.lightbarSchema.schema;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport { setSchema } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    marginBottom: 10,\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nconst ListItems = ({ onClick, selected = null }) =>\n  LIGHTBARS.map((lightbar) => (\n    <ListItem\n      selected={selected?.model === lightbar.model}\n      key={lightbar.model}\n      onClick={() => onClick(lightbar)}\n      button\n    >\n      <ListItemText\n        primary={lightbar.model}\n        secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n      />\n    </ListItem>\n  ));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const onClick = (model) => {\n    dispatch(selectLightbar(model));\n    dispatch(setSchema(null));\n  };\n\n  return (\n    <List className={classes.list}>\n      <ListItems onClick={onClick} selected={selectedModel} />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport {\n  Select,\n  makeStyles,\n  MenuItem,\n  Switch,\n  FormGroup,\n  FormControlLabel,\n  withStyles,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { green } from '@material-ui/core/colors';\nimport {\n  selectColorSchema,\n  getColorSchema,\n  getHasGreen,\n  setHasGreen,\n  getLightbar,\n} from './lightbar-selector-slice';\nimport {\n  setSchema,\n  setSchemaName,\n  getSchemaName,\n} from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: '100%',\n    marginTop: theme.spacing(2),\n  },\n  switch: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst GreenSwitch = withStyles({\n  switchBase: {\n    color: green[300],\n    '&$checked': {\n      color: green[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: green[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nfunction ColorSchemaList() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedSchema = useSelector(getSchemaName);\n  const hasGreen = useSelector(getHasGreen);\n  const lightbar = useSelector(getLightbar);\n  const colorSchema = JSON.parse(\n    localStorage.getItem('lightbar-schema') || '{}',\n  );\n\n  const onChange = (e) => {\n    dispatch(setSchemaName(e.target.value));\n    dispatch(setSchema(colorSchema[e.target.value] || []));\n  };\n  const onGreenSwithChange = (e) => dispatch(setHasGreen(e.target.checked));\n\n  return (\n    <>\n      <Select\n        value={selectedSchema || ''}\n        onChange={onChange}\n        displayEmpty\n        className={classes.select}\n        inputProps={{ 'aria-label': 'Without label' }}\n      >\n        <MenuItem value=\"create-new-schema\">\n          <em>Create a new one</em>\n        </MenuItem>\n        {Object.keys(colorSchema).map(\n          (schema) =>\n            lightbar &&\n            lightbar.total === colorSchema[schema].length && (\n              <MenuItem key={schema} value={schema}>\n                {schema}\n              </MenuItem>\n            ),\n        )}\n      </Select>\n      {/*\n      <FormGroup>\n        <FormControlLabel\n          className={classes.switch}\n          control={\n            <GreenSwitch\n              name=\"hasGreen\"\n              onChange={onGreenSwithChange}\n              value={hasGreen}\n            />\n          }\n          label=\"Includes Green Light\"\n        />\n      </FormGroup>\n      */}\n    </>\n  );\n}\n\nexport default ColorSchemaList;\n","import _ from 'lodash';\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport {\n  makeStyles,\n  Typography,\n  CardContent,\n  CardActions,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport LightbarList from './lightbar-list';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport ColorSchemaList from './color-schema-list';\nimport { getSchemaName } from '../LightbarSchema/lightbar-shema-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const selectedLightbar = useSelector(getLightbar);\n  const selectedColorSchema = useSelector(getSchemaName);\n  const [shouldAskForNumberOfLights, askForNumberOfLights] = useState(false);\n\n  // const routeToLightbar = () => history.push('/lightbar');\n  const routeToLightbar = () => {\n    if(selectedLightbar.isCustom && selectedLightbar.total == 0){\n      askForNumberOfLights(true);\n      return;\n    }\n    askForNumberOfLights(false);\n    history.push('/lightbar/schema');\n  }\n\n  const closeDialog = () => askForNumberOfLights(false);\n  const handleCustomLightbarChanges = (e) => {\n    const lightbar = _.cloneDeep(selectedLightbar);\n    lightbar.front = parseInt(e.target.value);\n    lightbar.total = lightbar.front;\n\n    if(!lightbar.front.isNaN){\n      dispatch(selectLightbar(lightbar));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">Lightbars</Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n          <Typography variant=\"h6\">Color Schema</Typography>\n          <Typography className={classes.subtitle}>\n            Select the color schema of the lightbar\n          </Typography>\n          <ColorSchemaList />\n        </CardContent>\n        <CardActions className={classes.button}>\n          <Button\n            color=\"primary\"\n            disabled={!selectedLightbar || !selectedColorSchema}\n            variant=\"contained\"\n            onClick={routeToLightbar}\n          >\n            Start Configurator\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog open={shouldAskForNumberOfLights} onClose={closeDialog}>\n        <DialogTitle>Custom Lightbar</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter the number of lights\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            id=\"numberOfLight\"\n            label=\"Number of lights\"\n            margin=\"dense\"\n            type=\"number\"\n            value={selectedLightbar.front}\n            onChange={handleCustomLightbarChanges}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={routeToLightbar}>\n            Continue\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={closeDialog}\n          >\n            Back\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect, Text, Group } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: (props) => ((props.isCustom || props.width) ? 'auto' : 210),\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: (props) => props.width || 500,\n    width: (props) => props.width || '100%',\n  },\n});\n\nconst Light = ({\n  fill,\n  getStrokeColor,\n  height,\n  onClick,\n  overlay,\n  rotation,\n  scale,\n  shadowBlur,\n  stroke,\n  text,\n  width,\n  x,\n  y,\n}) => (\n  <>\n    <Rect\n      fill={fill}\n      height={height}\n      cornerRadius={5}\n      onClick={onClick}\n      rotation={rotation}\n      shadowBlur={shadowBlur}\n      stroke={stroke}\n      width={width}\n      x={x}\n      y={y}\n    />\n    <Group rotation={rotation} x={x} y={y}>\n      {overlay &&\n        overlay.map((color, index) => (\n          <Rect\n            key={color}\n            fill={color}\n            height={height}\n            cornerRadius={5}\n            onClick={onClick}\n            width={width / overlay.length}\n            x={index * (width / overlay.length)}\n            y={0}\n          />\n        ))}\n    </Group>\n    {text && (\n      <Text\n        align=\"center\"\n        fontSize={10 * scale}\n        height={height}\n        rotation={rotation}\n        text={text}\n        verticalAlign=\"middle\"\n        onClick={onClick}\n        width={width}\n        x={x}\n        y={y + 25}\n      />\n    )}\n  </>\n);\n\nfunction LightbarPreview({\n  lights = [],\n  overlays = [],\n  onClick,\n  selectedLight = [],\n  title,\n  width,\n  isLinear = false,\n  isCustom = false,\n  showLightLabel = false,\n}) {\n  const classes = useStyles({ width, isCustom });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = (isLinear || isCustom) ? lights : lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3).reverse();\n  const originalWidth = isCustom ? 565 : (57 * 2 + front.length * 45);\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n\n  const onLightClick = (id) => () => {\n    onClick && onClick(id);\n  };\n\n  const getStrokeColor = (id) =>\n    selectedLight.indexOf(id) > -1 ? 'red' : null;\n\n  const getColor = ({ r, g, b, a }) =>\n    rgbToHex({\n      r: (r * a).toFixed(0),\n      g: (g * a).toFixed(0),\n      b: (b * a).toFixed(0),\n    });\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={(isCustom ? (lights.length / 10) * 60: 210) * scale}>\n        {\n          !isCustom ?\n            <Layer x={57 * scale}>\n              {front.map((l, index) => (\n                <Light\n                  fill={getColor(l.color)}\n                  height={24 * scale}\n                  index={index}\n                  key={index}\n                  stroke={getStrokeColor(index)}\n                  text={showLightLabel && l.text}\n                  onClick={onLightClick(index)}\n                  overlay={overlays[index]}\n                  scale={scale}\n                  shadowBlur={shadowBlur}\n                  width={40 * scale}\n                  x={45 * index * scale}\n                  y={20 * scale}\n                />\n              ))}\n            </Layer>\n            :\n            <Layer x={57 * scale}>\n              {front.map((l, index) => (\n                <Light\n                  fill={getColor(l.color)}\n                  height={24 * scale}\n                  index={index}\n                  key={index}\n                  stroke={getStrokeColor(index)}\n                  text={showLightLabel && l.text}\n                  onClick={onLightClick(index)}\n                  overlay={overlays[index]}\n                  scale={scale}\n                  shadowBlur={shadowBlur}\n                  width={40 * scale}\n                  x={45 * (((index + 1) % 10) || 10) * scale}\n                  y={(20 + (50 * parseInt(index/10))) * scale}\n                />\n              ))}\n            </Layer>\n\n        }\n        { !isLinear && !isCustom &&\n          <>\n            <Layer x={57 * scale + lightbarWidth}>\n              <Light\n                x={12 * scale}\n                y={25 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[front.length].color)}\n                text={showLightLabel && lights[front.length].text}\n                shadowBlur={shadowBlur}\n                rotation={40}\n                cornerRadius={5}\n                onClick={onLightClick(front.length)}\n                overlay={overlays[front.length]}\n                stroke={getStrokeColor(front.length)}\n                scale={scale}\n              />\n              <Light\n                x={53 * scale}\n                y={70 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[front.length + 1].color)}\n                text={showLightLabel && lights[front.length + 1].text}\n                shadowBlur={shadowBlur}\n                rotation={90}\n                cornerRadius={5}\n                onClick={onLightClick(front.length + 1)}\n                overlay={overlays[front.length + 1]}\n                stroke={getStrokeColor(front.length + 1)}\n                scale={scale}\n              />\n              {\n                // <Light\n                //   x={53 * scale}\n                //   y={115 * scale}\n                //   width={40 * scale}\n                //   height={24 * scale}\n                //   fill={getColor(lights[front.length + 2].color)}\n                //   text={lights[front.length + 2].text}\n                //   shadowBlur={shadowBlur}\n                //   rotation={90}\n                //   cornerRadius={5}\n                //   onClick={onLightClick(front.length + 2)}\n                //   overlay={overlays[front.length + 2]}\n                //   stroke={getStrokeColor(front.length + 2)}\n                //   scale={scale}\n                // />\n              }\n              <Light\n                x={-5 * scale}\n                y={143 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[front.length + 2].color)}\n                text={showLightLabel && lights[front.length + 2].text}\n                shadowBlur={shadowBlur}\n                rotation={-40}\n                cornerRadius={5}\n                onClick={onLightClick(front.length + 2)}\n                overlay={overlays[front.length + 2]}\n                stroke={getStrokeColor(front.length + 2)}\n                scale={scale}\n              />\n            </Layer>\n            <Layer x={57 * scale}>\n              {rear.map((l, index) => (\n                <Light\n                  fill={getColor(l.color)}\n                  height={24 * scale}\n                  index={index}\n                  key={index}\n                  stroke={getStrokeColor(lights.length - 4 - index)}\n                  text={showLightLabel && l.text}\n                  onClick={onLightClick(lights.length - 4 - index)}\n                  overlay={overlays[lights.length - 4 - index]}\n                  scale={scale}\n                  shadowBlur={shadowBlur}\n                  width={40 * scale}\n                  x={45 * index * scale}\n                  y={143 * scale}\n                />\n              ))}\n            </Layer>\n            <Layer visible={!isLinear}>\n              <Light\n                x={55 * scale}\n                y={44 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[lights.length - 1].color)}\n                text={showLightLabel && lights[lights.length - 1].text}\n                shadowBlur={shadowBlur}\n                rotation={135}\n                cornerRadius={5}\n                onClick={onLightClick(lights.length - 1)}\n                overlay={overlays[lights.length - 1]}\n                stroke={getStrokeColor(lights.length - 1)}\n                scale={scale}\n              />\n              <Light\n                x={27 * scale}\n                y={73 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[lights.length - 2].color)}\n                text={showLightLabel && lights[lights.length - 2].text}\n                shadowBlur={shadowBlur}\n                rotation={90}\n                cornerRadius={5}\n                onClick={onLightClick(lights.length - 2)}\n                overlay={overlays[lights.length - 2]}\n                stroke={getStrokeColor(lights.length - 2)}\n                scale={scale}\n              />\n              {\n                // <Light\n                //   x={27 * scale}\n                //   y={118 * scale}\n                //   width={40 * scale}\n                //   height={24 * scale}\n                //   fill={getColor(lights[lights.length - 3].color)}\n                //   text={lights[lights.length - 3].text}\n                //   shadowBlur={shadowBlur}\n                //   rotation={90}\n                //   cornerRadius={5}\n                //   onClick={onLightClick(lights.length - 3)}\n                //   overlay={overlays[lights.length - 3]}\n                //   stroke={getStrokeColor(lights.length - 3)}\n                //   scale={scale}\n                // />\n              }\n              <Light\n                x={25 * scale}\n                y={118 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[lights.length - 3].color)}\n                text={showLightLabel && lights[lights.length - 3].text}\n                shadowBlur={shadowBlur}\n                rotation={40}\n                cornerRadius={5}\n                onClick={onLightClick(lights.length - 3)}\n                overlay={overlays[lights.length - 3]}\n                stroke={getStrokeColor(lights.length - 3)}\n                scale={scale}\n              />\n            </Layer>\n          </>\n        }\n      </Stage>\n    </div>\n  );\n}\n\nLightbarPreview.propTypes = {\n  lights: PropTypes.array,\n  onClick: PropTypes.func,\n  selectedLight: PropTypes.array,\n  title: PropTypes.node,\n  width: PropTypes.number,\n  isLinear: PropTypes.bool,\n  showLightLabel: PropTypes.bool,\n};\n\nexport default LightbarPreview;\n","import React from 'react';\nimport _ from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  Button,\n  makeStyles,\n  FormControlLabel,\n  Checkbox,\n  CardActions,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { getDefaultLights } from '../../app/utils';\nimport { getLightbar } from '../LightbarSelector/lightbar-selector-slice';\nimport LightbarPreview from '../LightbarPreview';\nimport {\n  setLightbar,\n  getSchemaName,\n  getSchema,\n  setSchema,\n} from './lightbar-shema-slice';\nimport { DEFAULT_LIGHT_COLOR_SCHEMA } from './constants';\n\nexport const TRANSPARENT_COLOR = '#B4B4B4';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexFlow: 'column',\n  },\n  lightbar: {\n    margin: '20px 10px 0 10px',\n    textAlign: 'center',\n    display: 'inline-block',\n    '& div': {},\n  },\n  lightbarContent: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  settings: {\n    marginTop: 10,\n    display: 'flex',\n    flexDirection: 'column',\n    width: 600,\n    alignSelf: 'center',\n  },\n  selectionButtons: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    '& button': {\n      margin: 5,\n    },\n  },\n  colors: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 50,\n    border: '2.5px solid rgba(0, 0, 0, 0.25)',\n  },\n  selectedCheckbox: {\n    width: 20,\n    height: 20,\n    border: '2.5px solid',\n    borderRadius: 50,\n    borderColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  red: {\n    backgroundColor: '#FF0000',\n  },\n  green: {\n    backgroundColor: '#00FF00',\n  },\n  blue: {\n    backgroundColor: '#0000FF',\n  },\n  amber: {\n    backgroundColor: '#FFBF00',\n  },\n  white: {\n    backgroundColor: '#FFFFFF',\n  },\n  transparent: {\n    backgroundColor: TRANSPARENT_COLOR,\n    borderStyle: 'dashed',\n    display: 'none',\n  },\n  cardActions: {\n    justifyContent: 'flex-end',\n  },\n});\n\nconst LightbarSchema = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const lightbar = useSelector(getLightbar);\n  const dispatch = useDispatch();\n  const name = useSelector(getSchemaName);\n  const [selectedLight, setSelectedLight] = React.useState([]);\n  const [isDialogOpen, setDialogState] = React.useState(false);\n  const [isSchemaChanged, setSchemaState] = React.useState(false);\n  const [schemaName, setSchemaName] = React.useState(name);\n  const lightColors = useSelector(getSchema);\n\n  React.useEffect(() => {\n    dispatch(setLightbar(lightbar));\n  }, []);\n\n  if (!lightbar) {\n    return <Redirect to=\"/lightbars\" />;\n  }\n\n  const handleClick = (id) => {\n    const index = selectedLight.indexOf(id);\n    if (index > -1) {\n      selectedLight.splice(index, 1);\n    } else {\n      selectedLight.push(id);\n    }\n    setSelectedLight([...selectedLight]);\n  };\n\n  const lights = getDefaultLights(lightbar);\n\n  const clearSelectedLight = (sectionLights) => {\n    const schema = _.cloneDeep(lightColors);\n    sectionLights.forEach((l) => {\n      schema[l] = [...DEFAULT_LIGHT_COLOR_SCHEMA];\n    });\n    dispatch(setSchema(schema));\n  };\n\n  const selectAllFront = () => {\n    const sectionLights = [...new Array(lightbar.front).keys()];\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllRear = () => {\n    const sectionLights = [...new Array(lightbar.rear).keys()].map(\n      (i) => i + lightbar.front + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllPassengerCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectAllDriverCorner = () => {\n    const sectionLights = [...new Array(3).keys()].map(\n      (i) => i + lightbar.front + lightbar.rear + 3,\n    );\n    setSelectedLight(sectionLights);\n    clearSelectedLight(sectionLights);\n  };\n\n  const selectColor = (color) => () => {\n    const schema = _.cloneDeep(lightColors);\n    selectedLight.forEach((l) => {\n      if (\n        color !== TRANSPARENT_COLOR &&\n        schema[l].indexOf(TRANSPARENT_COLOR) > -1\n      ) {\n        schema[l].shift();\n      }\n\n      if (color === TRANSPARENT_COLOR) {\n        schema[l] = [TRANSPARENT_COLOR];\n        return;\n      }\n\n      if (schema[l].indexOf(color) < 0) {\n        schema[l].push(color);\n        if (schema[l].length > 3) {\n          schema[l].shift();\n        }\n      } else {\n        schema[l].splice(schema[l].indexOf(color), 1);\n      }\n    });\n    dispatch(setSchema(schema));\n    setSchemaState(true);\n  };\n\n  const isChecked = (color) =>\n    selectedLight.length === 1 && lightColors[selectedLight[0]]\n      ? lightColors[selectedLight[0]].indexOf(color) > -1\n      : false;\n\n  const goForward = () => isSchemaChanged ? setDialogState(true) : goToLightbarSetting();\n  const goBack = () => history.goBack();\n  const closeDialog = () => setDialogState(false);\n  const handleSchemaNameChange = (e) => setSchemaName(e.target.value);\n  const goToLightbarSetting = () => history.push('/lightbar');\n  const saveSchema = () => {\n    const schemas = JSON.parse(localStorage.getItem('lightbar-schema') || '{}');\n    schemas[schemaName] = lightColors;\n    localStorage.setItem('lightbar-schema', JSON.stringify(schemas));\n    goToLightbarSetting();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.lightbar}>\n        <CardContent className={classes.lightbarContent}>\n          <LightbarPreview\n            lights={lights}\n            onClick={handleClick}\n            overlays={lightColors}\n            selectedLight={selectedLight}\n            isLinear={lightbar.isLinear}\n            isCustom={lightbar.isCustom}\n            showLightLabel\n          />\n        </CardContent>\n      </Card>\n      <Card className={classes.settings}>\n        <CardContent>\n          <div className={classes.selectionButtons}>\n            <Button variant=\"outlined\" onClick={selectAllFront}>\n              All {(lightbar.isLinear || lightbar.isCustom) ? '' : 'Front'}\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllRear} disabled={lightbar.isLinear || lightbar.isCustom}>\n              All Rear\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllPassengerCorner} disabled={lightbar.isLinear || lightbar.isCustom}>\n              All Passenger Corner\n            </Button>\n            <Button variant=\"outlined\" onClick={selectAllDriverCorner} disabled={lightbar.isLinear || lightbar.isCustom}>\n              All Driver Corner\n            </Button>\n          </div>\n          <div className={classes.colors}>\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.red)} />}\n              checked={isChecked('#FF0000')}\n              checkedIcon={\n                <span className={clsx(classes.selectedCheckbox, classes.red)} />\n              }\n              onChange={selectColor('#FF0000')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.green)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.green)}\n                />\n              }\n              onChange={selectColor('#00FF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.blue)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.blue)}\n                />\n              }\n              onChange={selectColor('#0000FF')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.amber)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.amber)}\n                />\n              }\n              onChange={selectColor('#FFBF00')}\n            />\n            <Checkbox\n              icon={<span className={clsx(classes.checkbox, classes.white)} />}\n              checkedIcon={\n                <span\n                  className={clsx(classes.selectedCheckbox, classes.white)}\n                />\n              }\n              onChange={selectColor('#FFFFFF')}\n            />\n            <Checkbox\n              icon={\n                <span className={clsx(classes.checkbox, classes.transparent)} />\n              }\n              checkedIcon={\n                <span\n                  className={clsx(\n                    classes.selectedCheckbox,\n                    classes.transparent,\n                  )}\n                />\n              }\n              onChange={selectColor('#B4B4B4')}\n            />\n          </div>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Button onClick={goBack} variant=\"outlined\">\n            Back\n          </Button>\n          <Button color=\"primary\" onClick={goForward} variant=\"contained\">\n            Next\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog open={isDialogOpen} onClose={closeDialog}>\n        <DialogTitle>Save Schema</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            If you want to save the schema to use it later, please enter a name\n            for it.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            fullWidth\n            id=\"schemaName\"\n            label=\"Schema Name\"\n            margin=\"dense\"\n            value={schemaName === 'create-new-schema' ? '' : schemaName}\n            onChange={handleSchemaNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={goToLightbarSetting}>\n            Continue without save\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={saveSchema}\n            disabled={!schemaName || schemaName === 'create-new-schema'}\n          >\n            Save and Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nLightbarSchema.propTypes = {};\n\nexport default LightbarSchema;\n","import FileSaver from 'file-saver';\nimport { rgbToHex as convertToHex } from '@material-ui/core/styles';\nimport { TRANSPARENT_COLOR } from '../features/LightbarSchema';\n\nconst reorderLights = (lights) => [\n  ...lights.slice(10, 16).reverse(),\n  ...lights.slice(6, 10).reverse(),\n  ...lights.slice(0, 6).reverse(),\n  ...lights.slice(16).reverse(),\n];\n\nexport const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = `0${hex}`;\n  }\n\n  return hex;\n};\n\nexport const rgbToHex = (value) => {\n  const color = value || { r: 0, g: 0, b: 0 };\n  return convertToHex(`rgb(${color.r}, ${color.g}, ${color.b})`).toUpperCase();\n};\n\nexport const createBinaryBlob = (lightbar, cycles) => {\n  if (!cycles || !cycles.length) {\n    return null;\n  }\n\n  const lightLength = cycles[0].lights.length + (lightbar.isLinear ? 1 : 0);\n  let length = lightbar.isLinear ? 2 : 3;\n\n  cycles.forEach((c) => {\n    length += c.repeat * lightLength * (lightbar.isLinear ? 1 : 3);\n  });\n\n  const buffer = new ArrayBuffer(length);\n  const dv = new DataView(buffer);\n  let index = 3;\n\n  if(lightbar.isLinear) {\n    dv.setUint8(0, 0);\n    dv.setUint8(1, cycles.length);\n    index = 2;\n  } else {\n    dv.setUint8(0, cycles.length);\n    dv.setUint8(1, 0);\n    dv.setUint8(2, lightLength);\n  }\n\n\n  cycles.forEach((c) =>\n    [...new Array(+c.repeat).keys()].forEach(() =>\n      // reorderLights(c.lights).forEach((l) => {\n      c.lights.forEach((l, i) => {\n        const { r, g, b, a } = l.color;\n        const isUsable = [r, g, b].join(',') !== [180, 180, 180].join(',');\n        const isOff = [r, g, b].join(',') === [1, 1, 1].join(',');\n        let red;\n        let blue;\n        let green = 0;\n\n        if (isOff) {\n          red = 1;\n          blue = 1;\n          green = 1;\n        } else {\n          red = r !== 0 && g === 0 && b === 0 && isUsable ? a * 255 : (isUsable ? 1 : 0);\n          blue = r === 0 && g === 0 && b !== 0 && isUsable ? a * 255 : (isUsable ? 1 : 0);\n          green = isUsable ? (red > 1 || blue > 1 ? 1 : a * 255) : 0;\n        }\n\n        const msb = isUsable ? 128 : 0;\n        const linearValue = [(msb + (isOff || !isUsable ? 0 : (a*100))).toFixed(0)];\n\n        if(i === 20) {\n          linearValue.push(0);\n        }\n\n        const output = lightbar.isLinear ?\n          linearValue : [\n            red.toFixed(0),\n            green.toFixed(0),\n            blue.toFixed(0),\n          ];\n        return output.forEach((v) => dv.setUint8(index++, v));\n      }),\n    ),\n  );\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob = (data) => {\n  const buffer = new ArrayBuffer(\n    Math.ceil(data.length / 8) * 8 * data[0].length * 3,\n  );\n  const dv = new DataView(buffer);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let i = 0; i < Math.ceil(data.length / 8); i += 1) {\n    for (let r = 0; r < data[0].length; r += 1) {\n      for (let c = 0; c < 8; c += 1) {\n        const binaryIndex = i * 8 * data[0].length * 3 + r * 8 + c * 3;\n        if (data[i * 8 + c]) {\n          data[i * 8 + c][r].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        } else {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        }\n      }\n    }\n  }\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob3 = (\n  boardData,\n  column = 48,\n  row = 18,\n  isLite = false,\n) => {\n  const [firstLine, secondLine] = boardData;\n  let frames =\n    secondLine && secondLine.pixels.length > column + 1 - 2\n      ? secondLine.pixels.length + 1\n      : 1;\n\n  if (isLite) {\n    frames =\n      firstLine && firstLine.pixels.length > column + 1 - 2\n        ? firstLine.pixels.length + 1\n        : 1;\n  }\n  const buffer = new ArrayBuffer(frames * column * row * 3 + 4);\n  const dv = new DataView(buffer);\n  dv.setUint32(0, buffer.byteLength);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let f = 0; f < frames; f += 1) {\n    for (let c = 0; c < column; c += 1) {\n      for (let r = 0; r < row; r += 1) {\n        const binaryIndex = f * column * row * 3 + c * row * 3 + r * 3 + 4;\n\n        if ([0, 8, 9, 17].indexOf(r) > -1) {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        } else if (r < 8) {\n          if (isLite) {\n            if (firstLine && firstLine.pixels[f + c]) {\n              firstLine.pixels[f + c][r - 1].forEach((value, index) => {\n                // console.log(binaryIndex, '-', index, '-', value);\n                dv.setUint8(binaryIndex + index, value);\n              });\n            } else {\n              [0, 0, 0].forEach((value, index) =>\n                dv.setUint8(binaryIndex + index, value),\n              );\n            }\n          } else if (firstLine && firstLine.pixels[c]) {\n            firstLine.pixels[c][r - 1].forEach((value, index) => {\n              // console.log(binaryIndex, '-', index, '-', value);\n              dv.setUint8(binaryIndex + index, value);\n            });\n          } else {\n            [0, 0, 0].forEach((value, index) =>\n              dv.setUint8(binaryIndex + index, value),\n            );\n          }\n        } else if (r > 9) {\n          if (secondLine && secondLine.pixels[f + c]) {\n            secondLine.pixels[f + c][r - 10].forEach((value, index) => {\n              // console.log(binaryIndex, '-', index, '-', value);\n              dv.setUint8(binaryIndex + index, value);\n            });\n          } else {\n            [0, 0, 0].forEach((value, index) =>\n              dv.setUint8(binaryIndex + index, value),\n            );\n          }\n        }\n      }\n    }\n\n    if (isLite) {\n      if (!firstLine || firstLine.length <= column - 1) {\n        break;\n      }\n    } else if (!secondLine || secondLine.length <= column - 1) {\n      break;\n    }\n  }\n\n  console.log(dv.buffer);\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createMessageBoardBinaryBlob2 = (data, column = 48, row = 18) => {\n  const frames = data.length > column + 1 - 2 ? data.length + 1 : 1;\n  // console.log(frames);\n  const buffer = new ArrayBuffer(frames * column * data[0].length * 3 + 4);\n  const dv = new DataView(buffer);\n  dv.setUint32(0, buffer.byteLength);\n  // console.log(buffer.length);\n\n  // Reformats the data to be as a area of 8 * 16 pixels\n  for (let f = 0; f < frames; f += 1) {\n    for (let c = 0; c < column; c += 1) {\n      for (let r = 0; r < data[0].length; r += 1) {\n        const binaryIndex =\n          f * column * data[0].length * 3 + c * data[0].length * 3 + r * 3 + 4;\n\n        if (data[f + c]) {\n          data[f + c][r].forEach((value, index) => {\n            // console.log(binaryIndex, '-', index, '-', value);\n            dv.setUint8(binaryIndex + index, value);\n          });\n        } else {\n          [0, 0, 0].forEach((value, index) =>\n            dv.setUint8(binaryIndex + index, value),\n          );\n        }\n      }\n    }\n\n    if (data.length <= column - 1) {\n      break;\n    }\n    // for (let r = 0; r < data[0].length; r += 1) {\n    //   for (let c = 0; c < 8; c += 1) {\n    //     const binaryIndex = i * 8 * data[0].length * 3 + r * 8 + c * 3;\n    //     if (data[i * 8 + c]) {\n    //       data[i * 8 + c][r].forEach((value, index) =>\n    //         dv.setUint8(binaryIndex + index, value),\n    //       );\n    //     } else {\n    //       [0, 0, 0].forEach((value, index) =>\n    //         dv.setUint8(binaryIndex + index, value),\n    //       );\n    //     }\n    //   }\n    // }\n  }\n\n  // console.log(dv.buffer);\n\n  return new Blob([dv.buffer], { type: 'application/octet-stream' });\n};\n\nexport const createJSONBlob = (lightbar) =>\n  new Blob([JSON.stringify(lightbar)], { type: 'application/json' });\n\nexport const saveFile = (blob, name) => {\n  FileSaver.saveAs(blob, name);\n};\n\nexport const getDefaultLights = (lightbar, schema = []) =>\n  [...Array(lightbar.total).keys()].map((key) => ({\n    text: key + 1,\n    color:\n      (schema.at(key) || []).indexOf(TRANSPARENT_COLOR) > -1\n        ? {\n          r: 180,\n          g: 180,\n          b: 180,\n          a: 1,\n        }\n        : {\n            r: 1,\n          g: 1,\n          b: 1,\n          a: 1,\n        },\n  }));\n","import { createSlice } from '@reduxjs/toolkit';\nimport {\n  createJSONBlob,\n  createBinaryBlob,\n  getDefaultLights,\n  saveFile,\n} from '../../app/utils';\n\nconst initialState = {\n  lightbar: null,\n  schema: [],\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: [0],\n  showPreview: false,\n  latestSelectedColor: null,\n};\n\nexport const slice = createSlice({\n  name: 'lightbar',\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n      ...initialState,\n      lightbar: action.payload.lightbar,\n      schema: action.payload.schema || [],\n    }),\n    setSelectedCycle: (state, action) => {\n      state.selectedCycle = action.payload;\n    },\n    setSelectedLight: (state, action) => {\n      if (action.payload.shouldSetColor && state.latestSelectedColor) {\n        state.cycles[state.selectedCycle].lights[action.payload.id].color =\n          state.latestSelectedColor;\n      }\n\n      state.selectedLight = action.payload.id;\n    },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights:\n          action.payload || getDefaultLights(state.lightbar, state.schema),\n        repeat: 1,\n      });\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    duplicateCycle: (state) => {\n      state.cycles.push(state.cycles[state.selectedCycle]);\n      state.selectedCycle = state.cycles.length - 1;\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setCycleRepeat: (state, action) => {\n      if (!isNaN(action.payload.repeat) && action.payload.repeat > 0) {\n        state.cycles[action.payload.id].repeat = action.payload.repeat;\n      } else if (action.payload.repeat === '') {\n        state.cycles[action.payload.id].repeat = 1;\n      }\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle].lights[state.selectedLight[0]] = {\n        ...state.cycles[state.selectedCycle].lights[state.selectedLight[0]],\n        ...action.payload,\n      };\n      state.latestSelectedColor = action.payload.color;\n    },\n    setInitialState: (state) => {\n      state = initialState;\n    },\n    setShowPreview: (state, action) => {\n      state.showPreview = action.payload;\n    },\n    setSchema: (state, action) => {\n      state.schema = action.payload;\n    },\n    saveAsFile: (state, action) => {\n      const [blob, type] = action.payload\n        ? [\n          createJSONBlob({ lightbar: state.lightbar, cycles: state.cycles }),\n          'json',\n        ]\n        : [createBinaryBlob(state.lightbar, state.cycles), 'bin'];\n\n      saveFile(blob, `${state.lightbar.model}-${new Date().getTime()}.${type}`);\n    },\n  },\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  duplicateCycle,\n  deleteCycle,\n  setCycleRepeat,\n  setLightSetting,\n  setInitialState,\n  setShowPreview,\n  setSchema,\n  saveAsFile,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getLatestSelectedColor = (state) =>\n  state.lightbar.latestSelectedColor;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\nexport const getShowPreview = (state) => state.lightbar.showPreview;\n\nexport default slice.reducer;\n","// prettier-ignore\nconst fontMap = {\n  column: 5,\n  row: 7,\n  chars: {\n    ' ': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], // 0x20, Space\n    '!': [0x04, 0x04, 0x04, 0x04, 0x04, 0x00, 0x04], // 0x21, !\n    '\"': [0x09, 0x09, 0x12, 0x00, 0x00, 0x00, 0x00], // 0x22, \"\n    '#': [0x0a, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x0a], // 0x23, #\n    '$': [0x04, 0x0f, 0x14, 0x0e, 0x05, 0x1e, 0x04], // 0x24, $\n    '%': [0x19, 0x19, 0x02, 0x04, 0x08, 0x13, 0x13], // 0x25, %\n    '&': [0x04, 0x0a, 0x0a, 0x0a, 0x15, 0x12, 0x0d], // 0x26, &\n    \"'\": [0x04, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00], // 0x27, '\n    '(': [0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02], // 0x28, (\n    ')': [0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08], // 0x29, )\n    '*': [0x04, 0x15, 0x0e, 0x1f, 0x0e, 0x15, 0x04], // 0x2a, *\n    '+': [0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00], // 0x2b, +\n    ',': [0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x08], // 0x2c, ,\n    '-': [0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00], // 0x2d, -\n    '.': [0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c], // 0x2e, .\n    '/': [0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x10], // 0x2f, /\n    '0': [0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e], // 0x30, 0\n    '1': [0x04, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x0e], // 0x31, 1\n    '2': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1f], // 0x32, 2\n    '3': [0x0e, 0x11, 0x01, 0x06, 0x01, 0x11, 0x0e], // 0x33, 3\n    '4': [0x02, 0x06, 0x0a, 0x12, 0x1f, 0x02, 0x02], // 0x34, 4\n    '5': [0x1f, 0x10, 0x1e, 0x01, 0x01, 0x11, 0x0e], // 0x35, 5\n    '6': [0x06, 0x08, 0x10, 0x1e, 0x11, 0x11, 0x0e], // 0x36, 6\n    '7': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x08, 0x08], // 0x37, 7\n    '8': [0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e], // 0x38, 8\n    '9': [0x0e, 0x11, 0x11, 0x0f, 0x01, 0x02, 0x0c], // 0x39, 9\n    ':': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x0c, 0x00], // 0x3a, :\n    ';': [0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x04, 0x08], // 0x3b, ;\n    '<': [0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02], // 0x3c, <\n    '=': [0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x00], // 0x3d, =\n    '>': [0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08], // 0x3e, >\n    '?': [0x0e, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04], // 0x3f, ?\n    // -----------------------------------------------------------\n    '@': [0x0e, 0x11, 0x17, 0x15, 0x17, 0x10, 0x0f,],   // 0x40, @\n    'A': [0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11,],   // 0x41, A\n    'B': [0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e,],   // 0x42, B\n    'C': [0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e,],   // 0x43, C\n    'D': [0x1e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1e,],   // 0x44, D\n    'E': [0x1f, 0x10, 0x10, 0x1c, 0x10, 0x10, 0x1f,],   // 0x45, E\n    'F': [0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10,],   // 0x46, F\n    'G': [0x0e, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0f,],   // 0x37, G\n    'H': [0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11,],   // 0x48, H\n    'I': [0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e,],   // 0x49, I\n    'J': [0x1f, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c,],   // 0x4a, J\n    'K': [0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11,],   // 0x4b, K\n    'L': [0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f,],   // 0x4c, L\n    'M': [0x11, 0x1b, 0x15, 0x11, 0x11, 0x11, 0x11,],   // 0x4d, M\n    'N': [0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11,],   // 0x4e, N\n    'O': [0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x4f, O\n    'P': [0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10,],   // 0x50, P\n    'Q': [0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d,],   // 0x51, Q\n    'R': [0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11,],   // 0x52, R\n    'S': [0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e,],   // 0x53, S\n    'T': [0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x54, T\n    'U': [0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e,],   // 0x55, U\n    'V': [0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x56, V\n    'W': [0x11, 0x11, 0x11, 0x15, 0x15, 0x1b, 0x11,],   // 0x57, W\n    'X': [0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11,],   // 0x58, X\n    'Y': [0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04,],   // 0x59, Y\n    'Z': [0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f,],   // 0x5a, Z\n    '[': [0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e,],   // 0x5b, [\n    '\\\\': [0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x01,],   // 0x5c, \\\n    ']': [0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e,],   // 0x5d, ]\n    '^': [0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00,],   // 0x5e, ^\n    '_': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,],   // 0x5f, _\n    //------------------------------------------------------------\n    '`': [0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x60, `\n    'a': [0x00, 0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d,],   // 0x61, a\n    'b': [0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c,],   // 0x62, b\n    'c': [0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x0e,],   // 0x63, c\n    'd': [0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07,],   // 0x64, d\n    'e': [0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f,],   // 0x65, e\n    'f': [0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08,],   // 0x66, f\n    'g': [0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e,],   // 0x67, g\n    'h': [0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11,],   // 0x68, h\n    'i': [0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e,],   // 0x69, i\n    'j': [0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c,],   // 0x6a, j\n    'k': [0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12,],   // 0x6b, k\n    'l': [0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,],   // 0x6c, l\n    'm': [0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11,],   // 0x6d, m\n    'n': [0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11,],   // 0x6e, n\n    'o': [0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e,],   // 0x6f, o\n    'p': [0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10,],   // 0x70, p\n    'q': [0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01,],   // 0x71, q\n    'r': [0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10,],   // 0x72, r\n    's': [0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e,],   // 0x73, s\n    't': [0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06,],   // 0x74, t\n    'u': [0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d,],   // 0x75, u\n    'v': [0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04,],   // 0x76, v\n    'w': [0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a,],   // 0x77, w\n    'x': [0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11,],   // 0x78, x\n    'y': [0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e,],   // 0x79, y\n    'z': [0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f,],   // 0x7a, z\n    '{': [0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06,],   // 0x7b, {\n    '|': [0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04,],   // 0x7c, |\n    '}': [0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c,],   // 0x7d, }\n    '~': [0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00,],   // 0x7e, ~\n    'DEL': [0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,],   // 0x7f, DEL\n  },\n};\n\nexport default fontMap;\n","import Font from './Fonts/5x7-font';\n\nexport const textToBitmap = (text, color = [0, 255, 0], padding = 0) => {\n  const bitMap = [];\n\n  // [...Array(Font.row).keys()].forEach((r) =>\n  //   [...Array(Font.column).keys()].forEach(() => {\n  //     bitMap[r] = [];\n  //     text.split('').forEach((char) => {\n  //       bitMap[r].push(\n  //         ...Font.chars[char][r]\n  //           .toString(2)\n  //           .padStart(char !== ' ' ? 5 : 1, 0)\n  //           .split('')\n  //           .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n  //         ...[...Array(padding).keys()].map(() => 0), // Adding padding to right\n  //       );\n  //     });\n  //   }),\n  // );\n\n  const textArray = text.split('');\n\n  [...Array(Font.column * text.length + text.length * padding).keys()].forEach(\n    (c) => {\n      bitMap[c] = [];\n\n      if (\n        padding &&\n        c % (Font.column + padding) === Font.column + padding - 1\n      ) {\n        [...Array(Font.row).keys()].map(() => bitMap[c].push([0, 0, 0]));\n      } else {\n        [...Array(Font.row).keys()].forEach((r) => {\n          const char = textArray[Math.floor(c / (Font.column + padding))];\n          // text.split('')[text.length%column].forEach((char) => {\n          bitMap[c].push(\n            Font.chars[char][r]\n              .toString(2)\n              .padStart(char !== ' ' ? 5 : 1, 0)\n              .split('')[c % (Font.column + padding)] === '1'\n              ? color\n              : [0, 0, 0],\n            // .map((v) => (+v === 1 ? color : [0, 0, 0])), // Adding the char in binary\n          );\n          // });\n        });\n      }\n    },\n  );\n\n  return bitMap;\n};\n","import { textToBitmap } from '../MatrixLCD/utils';\n\nexport const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle, offset) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      // backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = 18;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, 9 + (offset || 0));\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n\nexport const getPixelsOfLines = ({\n  firstLine,\n  firstLineOffset,\n  ledColor,\n  secondLine,\n}) => {\n  const result = [];\n  const color = Object.values(ledColor).splice(0, 3);\n\n  if (firstLine && firstLine !== '') {\n    result.push({\n      x: 0,\n      y: 1,\n      pixels: [\n        ...[...Array(firstLineOffset)].map(() =>\n          [...Array(7)].map(() => [0, 0, 0]),\n        ),\n        ...textToBitmap(firstLine, color, 1),\n      ],\n    });\n  } else {\n    result.push({\n      x: 0, // + (firstLineOffset || 0), // TODO it should be removed\n      y: 1,\n      pixels: [],\n    });\n  }\n\n  if (secondLine && secondLine !== '') {\n    result.push({ x: 0, y: 10, pixels: textToBitmap(secondLine, color, 1) });\n  }\n\n  return result;\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  createMessageBoardBinaryBlob2,\n  createMessageBoardBinaryBlob3,\n  saveFile,\n  createJSONBlob,\n} from '../../app/utils';\nimport { getPixelsOfLines } from './helpers';\n\nexport const DEFAULT_GRAPHICAL_TEXT = 'Hello World ⛔ سلام دنیا 😁';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 48,\n    firstLine: 'Line 1',\n    firstLineOffset: 0,\n    imageData: [],\n    isGraphical: false,\n    ledColor: { r: 0, g: 255, b: 0, a: 1 },\n    pixelCornerRadius: 5,\n    pixelSize: 10,\n    row: 18,\n    secondLine: 'Line 2',\n    scrollSpeed: 40,\n    spaceBetweenPixels: null,\n    style: null,\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setIsGraphical: (state, action) => {\n      state.isGraphical = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n    exportData: (state, action) => {\n      if (state.isGraphical) {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [createMessageBoardBinaryBlob2(state.imageData), 'bin'];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      } else {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [createMessageBoardBinaryBlob3(getPixelsOfLines(state)), 'bin'];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      }\n    },\n  },\n});\n\nexport const {\n  exportData,\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setIsGraphical,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard;\nexport const getColumn = (state) => state.scrollingBoard.column;\nexport const getFirstLine = (state) => state.scrollingBoard.firstLine;\nexport const getImageData = (state) => state.scrollingBoard.imageData;\nexport const getIsGraphical = (state) => state.scrollingBoard.isGraphical;\nexport const getLedColor = (state) => state.scrollingBoard.ledColor;\nexport const getRow = (state) => state.scrollingBoard.row;\nexport const getSecondLine = (state) => state.scrollingBoard.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard.scrollSpeed;\n\nexport default slice.reducer;\n","import { textToBitmap } from '../MatrixLCD/utils';\n\nexport const getTextWidth = (text, font) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  ctx.font = font;\n  return ctx.measureText(text).width;\n};\n\nexport const convertToRowBaseArray = (dataImage) => {\n  const data = [];\n\n  for (let c = 0; c < dataImage.width; c += 1) {\n    const col = [];\n    for (let r = 0; r < dataImage.height; r += 1) {\n      const pixel = r * dataImage.width * 4 + c * 4;\n      col.push([\n        // dataImage.data[pixel],\n        // dataImage.data[pixel + 1],\n        // dataImage.data[pixel + 2],\n        dataImage.data[pixel] < 100 ? 0 : dataImage.data[pixel],\n        dataImage.data[pixel + 1] < 100 ? 0 : dataImage.data[pixel + 1],\n        dataImage.data[pixel + 2] < 100 ? 0 : dataImage.data[pixel + 2],\n        // dataImage.data[pixel + 3],\n      ]);\n    }\n    data.push(col);\n  }\n\n  return data;\n};\n\nexport const convertTextToBitmap = (text, userStyle, offset, height) => {\n  if (!text || text.trim() === '') {\n    return [];\n  }\n  const canvas = document.createElement('canvas');\n  const style = {\n    ...{\n      fontFamily: 'Open Sans',\n      fontSize: 14,\n      fontStyle: 'bold',\n      textColor: '#00ff00',\n      // backgroundColor: 'rgba(0, 0, 0)',\n    },\n    ...userStyle,\n  };\n  const font = `${style.fontStyle} ${style.fontSize}px ${style.fontFamily}`;\n  canvas.width = getTextWidth(text, font).toFixed(0);\n  canvas.height = height || 18;\n  const ctx = canvas.getContext('2d');\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = style.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.fillStyle = style.textColor;\n  ctx.fillText(text, 0, height / 2 + (offset || 0));\n  return convertToRowBaseArray(\n    ctx.getImageData(0, 0, canvas.width, canvas.height),\n  );\n};\n\nexport const getPixelsOfLines = ({\n  firstLine,\n  firstLineOffset,\n  ledColor,\n  secondLine,\n}) => {\n  const result = [];\n  const color = Object.values(ledColor).splice(0, 3);\n\n  if (firstLine && firstLine !== '') {\n    result.push({\n      x: 0,\n      y: 1,\n      pixels: [\n        ...[...Array(firstLineOffset)].map(() =>\n          [...Array(7)].map(() => [0, 0, 0]),\n        ),\n        ...textToBitmap(firstLine, color, 1),\n      ],\n    });\n  } else {\n    result.push({\n      x: 0, // + (firstLineOffset || 0), // TODO it should be removed\n      y: 1,\n      pixels: [],\n    });\n  }\n\n  if (secondLine && secondLine !== '') {\n    result.push({ x: 0, y: 10, pixels: textToBitmap(secondLine, color, 1) });\n  }\n\n  return result;\n};\n","// eslint-disable no-parameter-reassign\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  createMessageBoardBinaryBlob2,\n  createMessageBoardBinaryBlob3,\n  saveFile,\n  createJSONBlob,\n} from '../../app/utils';\nimport { getPixelsOfLines } from './helpers';\n\nexport const DEFAULT_GRAPHICAL_TEXT = '⛔ CAUTION ⛔';\n\nconst slice = createSlice({\n  name: 'scrollingBoard',\n  initialState: {\n    column: 36,\n    firstLine: 'CAUTION',\n    firstLineOffset: 0,\n    imageData: [],\n    isGraphical: false,\n    ledColor: { r: 255, g: 0, b: 0, a: 1 },\n    pixelCornerRadius: 5,\n    pixelSize: 10,\n    row: 8,\n    secondLine: 'Line 1',\n    scrollSpeed: 40,\n    spaceBetweenPixels: null,\n    style: {\n      textColor: '#ff0000',\n      fontSize: 8,\n    },\n  },\n  reducers: {\n    setColumn: (state, action) => {\n      state.column = action.payload;\n    },\n    setImageData: (state, action) => {\n      state.imageData = action.payload;\n    },\n    setIsGraphical: (state, action) => {\n      state.isGraphical = action.payload;\n    },\n    setFirstLine: (state, action) => {\n      state.firstLine = action.payload;\n    },\n    setLedColor: (state, action) => {\n      state.ledColor = action.payload;\n    },\n    setPixelCornerRadius: (state, action) => {\n      state.pixelCornerRadius = action.payload;\n    },\n    setRow: (state, action) => {\n      state.row = action.payload;\n    },\n    setSecondLine: (state, action) => {\n      state.secondLine = action.payload;\n    },\n    setScrollSpeed: (state, action) => {\n      state.scrollSpeed = action.payload;\n    },\n    setBoardState: (state, action) => action.payload,\n    exportDataLite: (state, action) => {\n      if (state.isGraphical) {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [\n            createMessageBoardBinaryBlob2(\n              state.imageData,\n              state.column,\n              state.row,\n            ),\n            'bin',\n          ];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      } else {\n        const [blob, type] = action.payload\n          ? [createJSONBlob(state.imageData), 'json']\n          : [\n            createMessageBoardBinaryBlob3(\n              getPixelsOfLines(state),\n              state.column,\n              state.row,\n              true,\n            ),\n            'bin',\n          ];\n        saveFile(blob, `message-board-${new Date().getTime()}.${type}`);\n      }\n    },\n  },\n});\n\nexport const {\n  exportDataLite,\n  setColumn,\n  setFirstLine,\n  setImageData,\n  setIsGraphical,\n  setLedColor,\n  setRow,\n  setSecondLine,\n  setScrollSpeed,\n  setBoardState,\n} = slice.actions;\n\nexport const getBoardState = (state) => state.scrollingBoard2;\nexport const getColumn = (state) => state.scrollingBoard2.column;\nexport const getFirstLine = (state) => state.scrollingBoard2.firstLine;\nexport const getImageData = (state) => state.scrollingBoard2.imageData;\nexport const getIsGraphical = (state) => state.scrollingBoard2.isGraphical;\nexport const getLedColor = (state) => state.scrollingBoard2.ledColor;\nexport const getRow = (state) => state.scrollingBoard2.row;\nexport const getSecondLine = (state) => state.scrollingBoard2.secondLine;\nexport const getScrollSpeed = (state) => state.scrollingBoard2.scrollSpeed;\n\nexport default slice.reducer;\n","import React, { useEffect, useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n  Typography,\n  Button,\n  MenuItem,\n  Menu,\n} from '@material-ui/core';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { saveAsFile, setShowPreview } from '../features/Lightbar/ligther-slice';\nimport { exportData } from '../features/ScrollingBoard/scrolling-board-slice';\nimport { exportDataLite } from '../features/ScrollingBoard2/scrolling-board-slice';\n\nconst useStyles = makeStyles((theme) => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  previewButton: {\n    color: '#ffffff',\n    borderColor: '#ffffff',\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const location = useLocation();\n  const history = useHistory();\n  const [showAppbarButtons, setShowAppbarButton] = useState({\n    showPreview: false,\n    showExport: false,\n  });\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const dispatch = useDispatch();\n\n  const onCloseContexMenu = (isJSON) => () => {\n    if (location.pathname.search(/lightbar$/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(saveAsFile(isJSON));\n      }\n    } else if (location.pathname.search(/message-board-lite/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(exportDataLite(isJSON));\n      }\n    } else if (location.pathname.search(/message-board/) > -1) {\n      if (isJSON !== undefined) {\n        dispatch(exportData(isJSON));\n      }\n    }\n    setAnchorEl(null);\n  };\n  const openContextMenu = (e) => setAnchorEl(e.currentTarget);\n  const onPreviewClick = () => dispatch(setShowPreview(true));\n  const goHome = () => history.replace('/');\n\n  useEffect(() => {\n    if (location.pathname.search(/lightbar$/) > 0) {\n      setShowAppbarButton({ showPreview: true, showExport: true });\n    } else if (location.pathname.search(/message-board/) > 0) {\n      setShowAppbarButton({ showPreview: false, showExport: true });\n    } else {\n      setShowAppbarButton({ showPreview: false, showExport: false });\n    }\n  }, [location]);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"Menu\"\n          onClick={goHome}\n        >\n          <HomeIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          DandR Electronics\n        </Typography>\n        {showAppbarButtons.showPreview && (\n          <Button\n            className={classes.previewButton}\n            onClick={onPreviewClick}\n            startIcon={<PlayArrowIcon />}\n            variant=\"outlined\"\n          >\n            Preview\n          </Button>\n        )}\n        {showAppbarButtons.showExport && (\n          <IconButton\n            aria-label=\"Download\"\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={openContextMenu}\n          >\n            <MoreVertIcon />\n          </IconButton>\n        )}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={onCloseContexMenu()}\n        >\n          <MenuItem onClick={onCloseContexMenu(false)}>Export BIN</MenuItem>\n          {\n            // <MenuItem onClick={onCloseContexMenu(true)}>Export JSON</MenuItem>\n          }\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Dialog,\n  useMediaQuery,\n  useTheme,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getShowPreview,\n  setShowPreview,\n  getCycles,\n} from '../Lightbar/ligther-slice';\nimport LightbarPreview from '.';\nimport { getLightbar } from '../LightbarSelector/lightbar-selector-slice';\n\nconst useStyles = makeStyles({});\n\nfunction LivePreview() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const showPreview = useSelector(getShowPreview);\n  const lightbar = useSelector(getLightbar);\n  const cycles = useSelector(getCycles);\n  const dispatch = useDispatch();\n  const [visibleCycle, setVisibleCycle] = useState(0);\n  const [repeat, setRepeat] = useState(1);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        cycles[visibleCycle].repeat > 1 &&\n        repeat < cycles[visibleCycle].repeat\n      ) {\n        setRepeat(repeat + 1);\n      } else {\n        setVisibleCycle(\n          visibleCycle + 1 < cycles.length ? visibleCycle + 1 : 0,\n        );\n        setRepeat(1);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  });\n\n  const handleClose = () => dispatch(setShowPreview(false));\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={showPreview}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Lightbar Preview</DialogTitle>\n        <DialogContent>\n          {cycles && cycles[visibleCycle] && (\n            <LightbarPreview\n              lights={cycles[visibleCycle].lights}\n              isLinear={lightbar.isLinear}\n              isCustom={lightbar.isCustom}\n              width={lightbar.isLinear && 400}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default LivePreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport reactCSS from 'reactcss'\nimport map from 'lodash/map'\nimport merge from 'lodash/merge'\nimport color from 'react-color/lib/helpers/color'\n\nimport { ColorWrap, Swatch } from 'react-color/lib/components/common'\n\nexport const SchemaColorPicker = ({ onChange, onSwatchHover, hex, colors, width, triangle,\n  styles: passedStyles = {}, className = '' }) => {\n  const styles = reactCSS(merge({\n    'default': {\n      card: {\n        width,\n        background: '#fff',\n        border: '0 solid rgba(0,0,0,0.25)',\n        boxShadow: '0 1px 4px rgba(0,0,0,0.25)',\n        borderRadius: '4px',\n        position: 'relative',\n      },\n      body: {\n        padding: '15px 9px 9px 15px',\n        height: 40,\n      },\n      label: {\n        fontSize: '18px',\n        color: '#fff',\n      },\n      triangle: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent #fff transparent',\n        position: 'absolute',\n      },\n      triangleShadow: {\n        width: '0px',\n        height: '0px',\n        borderStyle: 'solid',\n        borderWidth: '0 9px 10px 9px',\n        borderColor: 'transparent transparent rgba(0,0,0,.1) transparent',\n        position: 'absolute',\n      },\n      hash: {\n        background: '#F0F0F0',\n        height: '30px',\n        width: '30px',\n        borderRadius: '4px 0 0 4px',\n        float: 'left',\n        color: '#98A1A4',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      input: {\n        width: '100px',\n        fontSize: '14px',\n        color: '#666',\n        border: '0px',\n        outline: 'none',\n        height: '28px',\n        boxShadow: 'inset 0 0 0 1px #F0F0F0',\n        boxSizing: 'content-box',\n        borderRadius: '0 4px 4px 0',\n        float: 'left',\n        paddingLeft: '8px',\n      },\n      swatch: {\n        width: '30px',\n        height: '30px',\n        float: 'left',\n        borderRadius: '4px',\n        borderColor: '#F0F0F0',\n        margin: '0 6px 6px 0',\n      },\n      clear: {\n        clear: 'both',\n      },\n    },\n    'hide-triangle': {\n      triangle: {\n        display: 'none',\n      },\n      triangleShadow: {\n        display: 'none',\n      },\n    },\n    'top-left-triangle': {\n      triangle: {\n        top: '-10px',\n        left: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        left: '12px',\n      },\n    },\n    'top-right-triangle': {\n      triangle: {\n        top: '-10px',\n        right: '12px',\n      },\n      triangleShadow: {\n        top: '-11px',\n        right: '12px',\n      },\n    },\n  }, passedStyles), {\n    'hide-triangle': triangle === 'hide',\n    'top-left-triangle': triangle === 'top-left',\n    'top-right-triangle': triangle === 'top-right',\n  })\n\n  const handleChange = (hexcode, e) => {\n    color.isValidHex(hexcode) && onChange({\n      hex: hexcode,\n      source: 'hex',\n    }, e)\n  }\n\n  return (\n    <div style={ styles.card } className={ `twitter-picker ${ className }` }>\n      <div style={ styles.triangleShadow } />\n      <div style={ styles.triangle } />\n\n      <div style={ styles.body }>\n        { map(colors, (c, i) => {\n          return (\n            <Swatch\n              key={ i }\n              color={ c }\n              hex={ c }\n              style={ styles.swatch }\n              onClick={ handleChange }\n              onHover={ onSwatchHover }\n              focusStyle={{\n                boxShadow: `0 0 4px ${ c }`,\n              }}\n            />\n          )\n        }) }\n      </div>\n    </div>\n  )\n}\n\nSchemaColorPicker.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  triangle: PropTypes.oneOf(['hide', 'top-left', 'top-right']),\n  colors: PropTypes.arrayOf(PropTypes.string),\n  styles: PropTypes.object,\n}\n\nSchemaColorPicker.defaultProps = {\n  width: 276,\n  colors: ['#FF6900', '#FCB900', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3',\n    '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'],\n  triangle: 'top-left',\n  styles: {},\n}\n\nexport default ColorWrap(SchemaColorPicker)\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SketchPicker } from 'react-color';\nimport { makeStyles } from '@material-ui/core';\nimport SchemaColorPicker from './schema-color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n    backgroundColor: 'white',\n  },\n  pallete: {\n    backgroundColor: 'white',\n    position: 'absolute',\n    zIndex: '2',\n  },\n  innerPallete: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n});\n\nconst ColorPicker = ({ colors, value, onClick, onChange }) => {\n  const classes = useStyles({ colors });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.pallete}>\n        <div className={classes.innerPallete} onClick={onClick} />\n        {colors?.length ? (\n          <SchemaColorPicker\n            colors={colors}\n            hex={false}\n            triangle=\"hide\"\n            onChange={onChange}\n          />\n        ) : (\n          <SketchPicker\n            presetColors={[\n              '#FFBF00',\n              '#FF0000',\n              '#00FF00',\n              '#0000FF',\n              '#000000',\n            ]}\n            color={value}\n            onChange={onChange}\n            disableAlpha\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n\nexport default ColorPicker;\n","import React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  TextField,\n  Typography,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport { blue } from '@material-ui/core/colors';\n\nimport { AlphaPicker } from 'react-color';\nimport ColorPicker from './color-picker';\nimport { TRANSPARENT_COLOR } from '../../LightbarSchema';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n    marginTop: 20,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: (prop) => `rgb(${Object.values(prop.color)})`,\n  },\n});\n\nfunction LightbarSetting({ colors, config, onChange }) {\n  const classes = useStyles({\n    color: config?.color || { r: 255, g: 255, b: 255 },\n  });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]:\n          +target.value >= 0 && +target.value <= 255\n            ? target.value.trim()\n            : config?.color[target.name],\n      },\n    });\n  };\n\n  const onColorPickerChange = (color) =>\n    onChange({\n      color: color.rgb,\n    });\n\n  const onAlphaPickerChage = (color) => {\n    onChange({\n      color: color.rgb,\n    });\n  };\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n  // const isRGBSchema = (list) =>\n  //   ['#FF0000', '#00FF00', '#0000FF'].every((v) => list.indexOf(v) > -1);\n  const isRGBSchema = (_) => false;\n\n  const colorSchema = [...colors];\n  const isLightNotUsable = colors.indexOf(TRANSPARENT_COLOR) > -1;\n\n  // if (isLightNotUsable) {\n  //   colorSchema.push('#000000');\n  // }\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader} title=\"Set the color\" />\n        <CardContent className={classes.cardContent}>\n          {config ? (\n            <div className={classes.colorInfo}>\n              {isRGBSchema(colorSchema) ? (\n                <>\n                  <TextField\n                    label=\"Red\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"r\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.r : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Green\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"g\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.g : 255}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    label=\"Blue\"\n                    inputProps={{ max: 255, min: 0 }}\n                    name=\"b\"\n                    onChange={onValueChange}\n                    size=\"small\"\n                    type=\"number\"\n                    value={config.color ? config.color.b : 255}\n                    variant=\"outlined\"\n                  />\n                </>\n              ) : (\n                <AlphaPicker\n                  color={config.color}\n                  onChange={onAlphaPickerChage}\n                  width={280}\n                />\n              )}\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {showColorPicker && (\n                <ColorPicker\n                  colors={\n                    isRGBSchema(colorSchema) ? [] : [...colorSchema, '#010101', TRANSPARENT_COLOR]\n                  }\n                  onClick={setColorPickerState}\n                  onChange={onColorPickerChange}\n                  value={config?.color}\n                />\n              )}\n            </div>\n          ) : isLightNotUsable ? (\n            <Typography variant=\"h6\">\n              This light is not usable, please select another light.\n            </Typography>\n          ) : (\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the\n              color.\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import React from 'react';\nimport {\n  List,\n  makeStyles,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  TextField,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getCycles,\n  getSelectedCycle,\n  setSelectedCycle,\n  deleteCycle,\n  setCycleRepeat,\n  getLightbar,\n} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: (props) => (props.isCustom ? 'auto' : 150),\n  },\n  itemText: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTextFirstRow: {\n    alignSelf: 'normal',\n    borderBottom: '1px solid lightgray',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 5,\n  },\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  onRepeatChange,\n  repeat,\n  selected,\n  lightbar,\n}) => {\n  return (<ListItem\n    alignItems=\"center\"\n    className={className.item}\n    selected={selected}\n    onClick={onClick}\n    button\n  >\n    <ListItemText>\n      <div className={className.itemText}>\n        <div className={className.itemTextFirstRow}>\n          <Typography component=\"span\" variant=\"h6\">\n            {`Cycle #${id + 1}`}\n          </Typography>\n          <TextField\n            label=\"Repeat\"\n            inputProps={{ max: 999, min: 0 }}\n            min={1}\n            onChange={onRepeatChange}\n            size=\"small\"\n            type=\"number\"\n            value={repeat}\n            variant=\"outlined\"\n          />\n        </div>\n        <LightbarPreview\n          lights={lights}\n          width={(lightbar.isLinear || lightbar.isCustom) ? 300 : (lights.length - 6) * 10}\n          isLinear={lightbar.isLinear}\n          isCustom={lightbar.isCustom}\n        />\n      </div>\n    </ListItemText>\n    <ListItemSecondaryAction>\n      <IconButton arial-label=\"delete\" edge=\"end\" onClick={onDelete}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n  );\n}\n\nfunction CycleList() {\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const lightbar = useSelector(getLightbar);\n  const classes = useStyles({ isCustom: lightbar?.isCustom });\n  const dispatch = useDispatch();\n\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n  const onRepeatChange = (id) => (e) =>\n    dispatch(setCycleRepeat({ id, repeat: e.target.value }));\n\n  return (\n    <List className={classes.root}>\n      {cycles.map((c, i) => (\n        <Cycle\n          className={{\n            item: classes.item,\n            itemText: classes.itemText,\n            itemTextFirstRow: classes.itemTextFirstRow,\n          }}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          onRepeatChange={onRepeatChange(i)}\n          repeat={c.repeat}\n          selected={i === selectedCycle}\n          lightbar={lightbar}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DuplicateIcon from '@material-ui/icons/FileCopyOutlined';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle, duplicateCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onAddClick = () => dispatch(addCycle());\n  const onDuplicateClick = () => dispatch(duplicateCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onDuplicateClick}\n            >\n              <DuplicateIcon />\n            </IconButton>\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onAddClick}\n            >\n              <AddIcon />\n            </IconButton>\n            </>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, { useEffect } from 'react';\nimport Konva from 'konva';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { useMediaQuery } from '@material-ui/core';\nimport LightbarPreview from '../LightbarPreview';\nimport LivePreview from '../LightbarPreview/live-preview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {\n  getLightbar,\n  getColorSchema,\n} from '../LightbarSelector/lightbar-selector-slice';\nimport {\n  getSelectedCycle,\n  setLightbar,\n  addCycle,\n  getCycles,\n  setSelectedLight,\n  getSelectedLight,\n  setLightSetting,\n  getShowPreview,\n  getLatestSelectedColor,\n} from './ligther-slice';\nimport { getSchema } from '../LightbarSchema/lightbar-shema-slice';\nimport { rgbToHex } from '../../app/utils';\n// import { DEFAULT_COLOR_SCHEMA } from './constants';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n    flexWrap: (props) => (props.mqMatches ? null : 'wrap-reverse'),\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const mqMatches = useMediaQuery('(min-width: 800px)');\n  const classes = useStyles({ mqMatches });\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n  const showPreview = useSelector(getShowPreview);\n  const colorSchema = useSelector(getSchema);\n  // const colorSchema = DEFAULT_COLOR_SCHEMA;\n  const latestSelectedColor = useSelector(getLatestSelectedColor);\n\n  const selectLight = (id) =>\n    dispatch(\n      setSelectedLight({\n        id: [id],\n        shouldSetColor:\n          colorSchema[id].indexOf(rgbToHex(latestSelectedColor)) > -1,\n      }),\n    );\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar({ lightbar: selectedModel, schema: colorSchema }));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to=\"/\" />;\n  }\n\n\n  return (\n    <>\n      {!!lightbar && (\n        <div className={classes.root}>\n          <div className={classes.cycles}>\n            <Cycles />\n          </div>\n          <div className={classes.details}>\n            <LightbarPreview\n              lights={cycles[selectedCycle]?.lights}\n              onClick={selectLight}\n              selectedLight={selectedLight}\n              title={selectedModel.model}\n              width={lightbar.isLinear && 800}\n              isLinear={lightbar.isLinear}\n              isCustom={lightbar.isCustom}\n              showLightLabel\n            />\n            <LighbarSetting\n              config={cycles[selectedCycle]?.lights[selectedLight]}\n              colors={colorSchema[selectedLight]}\n              onChange={setLightChange}\n            />\n          </div>\n        </div>\n      )}\n      {showPreview && <LivePreview />}\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Stage, Rect, Layer } from 'react-konva';\nimport { makeStyles } from '@material-ui/core';\nimport { textToBitmap } from './utils';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: (props) => props.backgroundColor || '#565656',\n    borderRadius: 4,\n    borderColor: '#333',\n    display: 'inline-block',\n    padding: 5,\n    margin: 5,\n  },\n});\n\nfunction MatrixLCD({\n  backgroundColor,\n  column,\n  hasGlow = false,\n  pixelColor = 'green',\n  pixelCornerRadius,\n  pixelSize = 10,\n  pixelStatus = [],\n  row,\n  scrollSpeed = 1000,\n  space = 2,\n}) {\n  const classes = useStyles({ backgroundColor });\n  const scale =\n    window.innerWidth - 100 < (pixelSize + space) * column\n      ? (window.innerWidth - 100) / ((pixelSize + space) * column)\n      : 1;\n  const pixelRoom = (pixelSize + space) * scale;\n  const [scroll, setScroll] = React.useState(0);\n\n  React.useEffect(() => {\n    let intervalId = 0;\n    // if (pixelStatus[0].pixels.length > column) {\n    //   pixelStatus[0].pixels = [\n    //     ...pixelStatus[0].pixels,\n    //     ...[...new Array(column).keys()],\n    //   ];\n    // }\n    pixelStatus.forEach((status, i) => {\n      if (status.pixels.length && status.pixels.length > column) {\n        status.pixels = [...status.pixels, ...[...new Array(column).keys()]];\n      }\n    });\n    intervalId = setInterval(() => {\n      pixelStatus.forEach((status, i) => {\n        if (status.pixels.length && status.pixels.length > column) {\n          // status.pixels.forEach((r) => r.push(r.shift()));\n          pixelStatus[i].pixels.push(pixelStatus[i].pixels.shift());\n        }\n      });\n      setScroll((state) => state + 1);\n    }, scrollSpeed);\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [pixelStatus]);\n\n  const getPixelColor = (r, c) => {\n    let color = 'rgba(0, 0, 0, 0.1)';\n\n    pixelStatus.forEach((item) => {\n      if (c >= item.x && r >= item.y) {\n        if (\n          item.pixels[c - item.x] &&\n          item.pixels[c - item.x][r - item.y] &&\n          item.pixels[c - item.x][r - item.y].join('') !== '000'\n        ) {\n          // color = pixelColor;\n          color = `rgba(${item.pixels[c - item.x][r - item.y]})`;\n        }\n      }\n    });\n\n    return color;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stage width={pixelRoom * column} height={pixelRoom * row}>\n        <Layer x={0} y={0}>\n          {[...Array(row).keys()]\n            .map((r) =>\n              [...Array(column).keys()].map((c) => (\n                <Rect\n                  key={`${r}-${c}`}\n                  cornerRadius={pixelCornerRadius || 0}\n                  fill={getPixelColor(r, c)}\n                  x={space + pixelRoom * c}\n                  y={space + pixelRoom * r}\n                  width={pixelSize * scale}\n                  height={pixelSize * scale}\n                />\n              )),\n            )\n            .flat()}\n        </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nMatrixLCD.propTypes = {\n  backgroundColor: PropTypes.string,\n  column: PropTypes.number,\n  hasGlow: PropTypes.bool,\n  pixelColor: PropTypes.string,\n  pixelCornerRadius: PropTypes.number,\n  pixelSize: PropTypes.number,\n  pixelStatus: PropTypes.array,\n  row: PropTypes.number,\n  scrollSpeed: PropTypes.number,\n  space: PropTypes.number,\n};\n\nexport default MatrixLCD;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.string,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  makeStyles,\n  CardHeader,\n  TextField,\n  Button,\n  InputAdornment,\n  FormControlLabel,\n  Switch,\n  Grid,\n} from '@material-ui/core';\nimport Bmp from 'binary-bmp';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport html2canvas from 'html2canvas';\nimport MatrixLCD from '../MatrixLCD';\nimport { textToBitmap } from '../MatrixLCD/utils';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport {\n  getBoardState,\n  setLedColor,\n  setBoardState,\n  DEFAULT_GRAPHICAL_TEXT,\n} from './scrolling-board-slice';\nimport { convertTextToBitmap, getPixelsOfLines } from './helpers';\nimport FontToolbar from './font-toolbar';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.isGraphical && props.style && props.style.fontFamily) ||\n        'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = configs.isGraphical\n    ? [{ x: 0, y: 0, pixels: configs.imageData }]\n    : getPixelsOfLines(configs);\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState();\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ledColor: color.rgb,\n        style,\n        imageData: convertTextToBitmap(configs.firstLine, style),\n      }),\n    );\n  };\n\n  const changeTextMode = (e) => {\n    const newTextConfigs = {\n      firstLine: e.target.checked ? DEFAULT_GRAPHICAL_TEXT : 'Line 1',\n      imageData: e.target.checked\n        ? convertTextToBitmap(DEFAULT_GRAPHICAL_TEXT)\n        : null,\n    };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ...newTextConfigs,\n        isGraphical: e.target.checked,\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            e.target.value,\n            configs.style,\n            configs.firstLineOffset,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const onChangeOffset = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: +e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            configs.firstLine,\n            configs.style,\n            +e.target.value,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n        ),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={JSON.parse(JSON.stringify(pixelStatus))}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          {/*\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          */}\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={configs.isGraphical}\n                  onChange={changeTextMode}\n                  name=\"isGraphical\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Graphical fonts\"\n            />\n          </div>\n          <div className={classes.row}>\n            {configs.isGraphical && (\n              <FontToolbar\n                className={classes.fullwidth}\n                onChange={changeStyle}\n                addEmoji={addEmoji}\n              />\n            )}\n            {configs.isGraphical ? (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Top Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    inputProps={{ maxLength: 8 }}\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Left Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </div>\n          {!configs.isGraphical && (\n            <div className={classes.row}>\n              <TextField\n                className={clsx([classes.textField, classes.fullwidth])}\n                label=\"Second Line\"\n                name=\"secondLine\"\n                onChange={onChangeText}\n                size=\"small\"\n                type=\"text\"\n                value={configs.secondLine}\n                variant=\"outlined\"\n              />\n            </div>\n          )}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  makeStyles,\n  IconButton,\n} from '@material-ui/core';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles((theme) => ({\n  emojiIcon: {\n    fontSize: 30,\n  },\n  emojiPicker: {\n    position: 'absolute',\n    zIndex: 999,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    padding: 'unset',\n  },\n}));\n\nconst FontToolbar = ({\n  addEmoji = () => null,\n  className,\n  fontFamily = 'Open Sans',\n  fontSize = 14,\n  fontStyle = 'bold',\n  onChange = () => null,\n}) => {\n  const classes = useStyles();\n  const [styles, setStyles] = React.useState({\n    fontFamily,\n    fontSize,\n    fontStyle,\n  });\n  const [isEmojiPickerVisible, setEmojiPickerVisibility] = React.useState(\n    false,\n  );\n  const onFontChange = (item) => (e) => {\n    setStyles({\n      ...styles,\n      [item]: e.target.value,\n    });\n    onChange({\n      ...styles,\n      [item]: e.target.value,\n    });\n  };\n  const selectEmoji = (emoji) => {\n    setEmojiPickerVisibility(false);\n    addEmoji(emoji);\n  };\n\n  return (\n    <Toolbar className={clsx(classes.toolbar, className)}>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-family\">Font</InputLabel>\n        <Select\n          edge=\"start\"\n          labelId=\"font-family\"\n          label=\"Font\"\n          onChange={onFontChange('fontFamily')}\n          value={styles.fontFamily}\n        >\n          <MenuItem value=\"Roboto\">Roboto</MenuItem>\n          <MenuItem value=\"Roboto Mono\">Roboto Mono</MenuItem>\n          <MenuItem value=\"Open Sans\">Open Sans</MenuItem>\n          <MenuItem value=\"Baloo Bhaina 2\">Baloo Bhaina</MenuItem>\n          <MenuItem value=\"Montserrat\">Montserrat</MenuItem>\n          <MenuItem value=\"Titillium Web\">Titillium Web</MenuItem>\n          <MenuItem value=\"Cairo\">Cairo</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"font-size\">Size</InputLabel>\n        <Select\n          labelId=\"font-size\"\n          label=\"Size\"\n          onChange={onFontChange('fontSize')}\n          value={styles.fontSize}\n        >\n          <MenuItem value={6}> 6 px</MenuItem>\n          <MenuItem value={8}> 8 px</MenuItem>\n          <MenuItem value={10}> 10 px</MenuItem>\n          <MenuItem value={12}> 12 px</MenuItem>\n          <MenuItem value={14}> 14 px</MenuItem>\n          <MenuItem value={16}> 16 px</MenuItem>\n        </Select>\n      </FormControl>\n      <IconButton\n        arial-label=\"Emoji\"\n        onClick={() => setEmojiPickerVisibility(!isEmojiPickerVisible)}\n      >\n        <InsertEmoticonIcon className={classes.emojiIcon} />\n      </IconButton>\n      {isEmojiPickerVisible && (\n        <div className={classes.emojiPicker}>\n          <Picker\n            onSelect={selectEmoji}\n            style={{ width: 'unset', maxWidth: 345 }}\n          />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\n\nFontToolbar.propTypes = {\n  addEmoji: PropTypes.func,\n  className: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number,\n  fontStyle: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default FontToolbar;\n","import {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Switch,\n  TextField,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { config } from 'shelljs';\nimport ColorPicker from '../Lightbar/LightbarSetting/color-picker';\nimport MatrixLCD from '../MatrixLCD';\nimport FontToolbar from './font-toolbar';\nimport { convertTextToBitmap, getPixelsOfLines } from './helpers';\nimport {\n  DEFAULT_GRAPHICAL_TEXT,\n  getBoardState,\n  setBoardState,\n} from './scrolling-board-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  matrixLCD: {\n    marginTop: 20,\n    textAlign: 'center',\n  },\n  card: {\n    width: '60vw',\n    marginTop: 20,\n  },\n  cardContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  row: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    margin: '5px 0',\n  },\n  textField: {\n    margin: '5px 5px',\n  },\n  text: {\n    margin: '5px 5px',\n    '& input': {\n      fontFamily: (props) =>\n        (props.isGraphical && props.style && props.style.fontFamily) ||\n        'Roboto',\n      fontSize: (props) => (props.style && props.style.fontSize) || 16,\n    },\n  },\n  fullwidth: {\n    width: '100%',\n  },\n  colorView: {\n    background: (props) => `rgba(${Object.values(props.ledColor)})`,\n    height: 25,\n    width: 25,\n  },\n});\n\nfunction ScrollingBoard() {\n  const dispatch = useDispatch();\n  const configs = useSelector(getBoardState);\n  const classes = useStyles(configs);\n  // const pixelStatus = [\n  //   { x: 0, y: 0, pixels: textToBitmap(configs.firstLine, 1) },\n  //   { x: 0, y: 8, pixels: textToBitmap(configs.secondLine, 1) },\n  // ];\n  const pixelStatus = configs.isGraphical\n    ? [{ x: 0, y: 0, pixels: configs.imageData }]\n    : getPixelsOfLines(configs);\n\n  const [showColorPicker, setShowColorPicker] = React.useState(false);\n  const [textStyles, setTextStyle] = React.useState(configs.style);\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  const onColorPickerChange = (color) => {\n    const style = { ...configs.style, textColor: color.hex };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ledColor: color.rgb,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n  };\n\n  const changeTextMode = (e) => {\n    const newTextConfigs = {\n      firstLine: e.target.checked ? DEFAULT_GRAPHICAL_TEXT : 'CAUTION',\n      imageData: e.target.checked\n        ? convertTextToBitmap(\n          DEFAULT_GRAPHICAL_TEXT,\n          configs.style,\n          configs.firstLineOffset,\n          configs.row,\n        )\n        : null,\n    };\n    dispatch(\n      setBoardState({\n        ...configs,\n        ...newTextConfigs,\n        isGraphical: e.target.checked,\n      }),\n    );\n  };\n\n  const onChange = (e) =>\n    dispatch(setBoardState({ ...configs, [e.target.name]: +e.target.value }));\n\n  const onChangeText = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            e.target.value,\n            configs.style,\n            configs.firstLineOffset,\n            configs.row,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const onChangeOffset = (e) => {\n    dispatch(\n      setBoardState({\n        ...configs,\n        [e.target.name]: +e.target.value,\n        imageData: configs.isGraphical\n          ? convertTextToBitmap(\n            configs.firstLine,\n            configs.style,\n            +e.target.value,\n            configs.row,\n          )\n          : configs.imageData,\n      }),\n    );\n  };\n\n  const changeStyle = (style) => {\n    setTextStyle(style);\n    dispatch(\n      setBoardState({\n        ...configs,\n        style,\n        imageData: convertTextToBitmap(\n          configs.firstLine,\n          style,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n  };\n\n  const addEmoji = (emoji) =>\n    dispatch(\n      setBoardState({\n        ...configs,\n        firstLine: `${configs.firstLine} ${emoji.native}`,\n        imageData: convertTextToBitmap(\n          `${configs.firstLine} ${emoji.native}`,\n          textStyles,\n          configs.firstLineOffset,\n          configs.row,\n        ),\n      }),\n    );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.matrixLCD}>\n        <MatrixLCD\n          column={configs.column}\n          pixelColor={`rgba(${Object.values(configs.ledColor)})`}\n          pixelCornerRadius={configs.pixelCornerRadius}\n          pixelStatus={JSON.parse(JSON.stringify(pixelStatus))}\n          scrollSpeed={configs.scrollSpeed}\n          row={configs.row}\n        />\n      </div>\n      <Card className={classes.card}>\n        <CardHeader title=\"Message Board Setting\" />\n        <CardContent className={classes.cardContent}>\n          {/*\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Row\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"row\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.row}\n              variant=\"outlined\"\n            />\n            <CloseIcon />\n            <TextField\n              className={classes.textField}\n              label=\"Column\"\n              inputProps={{ max: 200, min: 0 }}\n              name=\"column\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.column}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Pixel corner\"\n              inputProps={{ max: 360, min: 0 }}\n              name=\"pixelCornerRadius\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.pixelCornerRadius}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Scroll Interval\"\n              inputProps={{ max: 1000, min: 0 }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">ms</InputAdornment>\n                ),\n              }}\n              name=\"scrollSpeed\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.scrollSpeed}\n              variant=\"outlined\"\n            />\n          </div>\n          */}\n          <div className={classes.row}>\n            <TextField\n              className={classes.textField}\n              label=\"Red\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"red\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.r}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Green\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"green\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.g}\n              variant=\"outlined\"\n              disabled\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Blue\"\n              inputProps={{ max: 255, min: 0 }}\n              name=\"blue\"\n              onChange={onChange}\n              size=\"small\"\n              type=\"number\"\n              value={configs.ledColor.b}\n              variant=\"outlined\"\n              disabled\n            />\n            <Button\n              color=\"default\"\n              onClick={setColorPickerState}\n              variant=\"contained\"\n            >\n              <span className={classes.colorView} />\n            </Button>\n            {showColorPicker && (\n              <ColorPicker\n                onClick={setColorPickerState}\n                onChange={onColorPickerChange}\n                value={configs.ledColor}\n              />\n            )}\n          </div>\n          <div className={classes.row}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={configs.isGraphical}\n                  onChange={changeTextMode}\n                  name=\"isGraphical\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Graphical fonts\"\n            />\n          </div>\n          <div className={classes.row}>\n            {configs.isGraphical && (\n              <FontToolbar\n                className={classes.fullwidth}\n                fontSize={configs.style.fontSize}\n                onChange={changeStyle}\n                addEmoji={addEmoji}\n              />\n            )}\n            {configs.isGraphical ? (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Top Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            ) : (\n              <Grid container spacing={1}>\n                <Grid item xs={10}>\n                  <TextField\n                    className={clsx([classes.textField, classes.fullwidth])}\n                    label=\"First Line\"\n                    name=\"firstLine\"\n                    onChange={onChangeText}\n                    size=\"small\"\n                    type=\"text\"\n                    value={configs.firstLine}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <TextField\n                    className={classes.textField}\n                    label=\"Left Margin\"\n                    inputProps={{ min: 0 }}\n                    name=\"firstLineOffset\"\n                    onChange={onChangeOffset}\n                    size=\"small\"\n                    type=\"number\"\n                    value={configs.firstLineOffset}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </div>\n          {/* !configs.isGraphical && (\n            <div className={classes.row}>\n              <TextField\n                className={clsx([classes.textField, classes.fullwidth])}\n                label=\"Second Line\"\n                name=\"secondLine\"\n                onChange={onChangeText}\n                size=\"small\"\n                type=\"text\"\n                value={configs.secondLine}\n                variant=\"outlined\"\n              />\n            </div>\n          ) */}\n          <canvas className={classes.canvas} id=\"hidden-canvas\">\n            Your browser doesn't support canvas\n          </canvas>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default ScrollingBoard;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  ButtonGroup,\n  Button,\n  makeStyles,\n  CardHeader,\n} from '@material-ui/core';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  card: {\n    width: '60vw',\n  },\n  cardContent: {\n    textAlign: 'center',\n  },\n  button: {\n    minHeight: 60,\n  },\n});\n\nfunction Platforms() {\n  const classes = useStyles();\n  const history = useHistory();\n  const route = (url) => () => history.push(url);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title=\"Select The Device\" />\n        <CardContent className={classes.cardContent}>\n          <ButtonGroup\n            className={classes.buttonGroup}\n            orientation=\"vertical\"\n            color=\"primary\"\n          >\n            <Button className={classes.button} onClick={route('/lightbars')}>\n              Lightbars\n            </Button>\n            {\n              // <Button className={classes.button} onClick={route('/lightbar')}>\n              //   Odyssey Lightbar Configuration\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/lightbar/schema')}\n              // >\n              //   Lightbar Schema\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/message-board')}\n              // >\n              //   Odyssey Message Board Configuration\n              // </Button>\n              // <Button\n              //   className={classes.button}\n              //   onClick={route('/message-board-lite')}\n              // >\n              //   Roadalert Message Configuration\n              // </Button>\n            }\n          </ButtonGroup>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Platforms;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { LightbarSelector } from './features/LightbarSelector';\nimport Header from './app/header';\nimport Lightbar from './features/Lightbar';\nimport ScrollingBoard from './features/ScrollingBoard';\nimport ScrollingBoard2 from './features/ScrollingBoard2';\n\nimport './App.css';\nimport Platforms from './features/Platforms';\nimport LightbarSchema from './features/LightbarSchema';\n\nconst useStyles = makeStyles({\n  root: {},\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Switch>\n        <Route path=\"/lightbars\">\n          <LightbarSelector />\n        </Route>\n        <Route path=\"/lightbar/schema\">\n          <LightbarSchema />\n        </Route>\n        <Route path=\"/lightbar\">\n          <Lightbar />\n        </Route>\n        <Route path=\"/message-board\">\n          <ScrollingBoard />\n        </Route>\n        <Route path=\"/message-board-lite\">\n          <ScrollingBoard2 />\n        </Route>\n        <Route path=\"/\">\n          <LightbarSelector />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport lightbarSchemaReducer from '../features/LightbarSchema/lightbar-shema-slice';\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\nimport scrollingBoardReducer from '../features/ScrollingBoard/scrolling-board-slice';\nimport scrollingBoardReducer2 from '../features/ScrollingBoard2/scrolling-board-slice';\n\nconst store = configureStore({\n  reducer: {\n    lightbarSchema: lightbarSchemaReducer,\n    lightbarSelector: lightbarSelectorReducer,\n    lightbar: lightbarReducer,\n    scrollingBoard: scrollingBoardReducer,\n    scrollingBoard2: scrollingBoardReducer2,\n  },\n});\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { MuiThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter, MemoryRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './app/store';\nimport theme from './app/theme';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Provider store={store}>\n      <MemoryRouter basename=\"/\">\n        <App />\n      </MemoryRouter>\n    </Provider>\n  </MuiThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}