{"version":3,"sources":["logo.svg","features/counter/Counter.module.css","features/counter/counterSlice.js","features/LightbarSelector/constants.js","features/LightbarSelector/lightbar-selector-slice.js","features/LightbarSelector/lightbar-list.js","features/LightbarSelector/index.js","app/utils.js","features/LightbarPreview/index.js","features/Lightbar/LightbarSetting/color-picker.js","features/Lightbar/LightbarSetting/index.js","features/Lightbar/ligther-slice.js","features/Lightbar/Cycles/cycle-list.js","features/Lightbar/Cycles/index.js","features/Lightbar/index.js","App.js","app/store.js","app/theme.js","serviceWorker.js","index.js"],"names":["module","exports","slice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","LIGHTBARS","model","front","rear","selectedModel","selectLightbar","getLightbar","lightbarSelector","useStyles","makeStyles","list","border","borderRadius","marginTop","maxHeight","overflow","ListItems","onClick","selected","map","lightbar","ListItem","key","button","ListItemText","primary","secondary","LightbarList","classes","useSelector","console","log","dispatch","useDispatch","List","className","root","display","flexDirection","alignContent","justifyContent","minHeight","card","width","subtitle","fontSize","LightbarSelector","history","useHistory","selectedLightbar","Card","CardContent","Typography","variant","CardActions","Button","color","disabled","push","rgbToHex","Object","values","v","hex","Number","toString","length","toHex","join","height","props","marginLeft","maxWidth","minWidth","LightbarPreview","lights","selectedLight","title","containerRef","useRef","originalWidth","scale","lightbarWidth","shadowBlur","onLightClick","id","getStrokeColor","getColor","r","g","b","ref","x","l","index","y","fill","cornerRadius","stroke","rotation","position","margin","zIndex","ColorPicker","onChange","style","top","right","bottom","left","cardHeader","backgroundColor","blue","cardContent","colorInfo","colorView","prop","LightbarSetting","config","useState","showColorPicker","setShowColorPicker","onValueChange","target","trim","setColorPickerState","CardHeader","TextField","label","inputProps","max","min","size","type","rgb","cycles","selectedCycle","setLightbar","setSelectedCycle","setSelectedLight","addCycle","Array","keys","i","deleteCycle","splice","setLightSetting","setInitialState","getCycles","getSelectedCycle","getSelectedLight","item","Cycle","onDelete","alignItems","ListItemSecondaryAction","IconButton","arial-label","edge","CycleList","c","Cycles","padding","flexGrow","details","Lightbar","useEffect","change","to","theme","menuButton","marginRight","spacing","App","AppBar","Toolbar","aria-label","path","configureStore","reducer","lightbarSelectorReducer","lightbarReducer","createMuiTheme","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.498ce645.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = slice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default slice.reducer;\r\n","export const LIGHTBARS = [\n  {\n    model: 'SL-24',\n    front: 2,\n    rear: 2,\n  },\n  {\n    model: 'SL-30',\n    front: 3,\n    rear: 3,\n  },\n  {\n    model: 'SL-36',\n    front: 4,\n    rear: 4,\n  },\n  {\n    model: 'SL-42',\n    front: 5,\n    rear: 5,\n  },\n  {\n    model: 'SL-48',\n    front: 6,\n    rear: 6,\n  },\n  {\n    model: 'SL-54',\n    front: 7,\n    rear: 7,\n  },\n  {\n    model: 'SL-60',\n    front: 8,\n    rear: 8,\n  },\n  {\n    model: 'SL-66',\n    front: 9,\n    rear: 9,\n  },\n  {\n    model: 'SL-72',\n    front: 10,\n    rear: 10,\n  },\n  {\n    model: 'SL-78',\n    front: 11,\n    rear: 11,\n  },\n  {\n    model: 'SL-84',\n    front: 12,\n    rear: 12,\n  },\n  {\n    model: 'SL-90',\n    front: 13,\n    rear: 13,\n  },\n  {\n    model: 'SL-96',\n    front: 14,\n    rear: 14,\n  },\n];\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: 'lightbarSelector',\n  initialState: {\n    selectedModel: null,\n  },\n  reducers: {\n    selectLightbar: (state, action) => {\n      state.selectedModel = action.payload\n    },\n  },\n});\n\nexport const { selectLightbar } = slice.actions;\n\nexport const getLightbar = state => state.lightbarSelector.selectedModel;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText } from '@material-ui/core';\n\nimport { LIGHTBARS } from './constants';\nimport { getLightbar, selectLightbar } from './lightbar-selector-slice';\nimport {useSelector, useDispatch} from 'react-redux';\n\nconst useStyles = makeStyles({\n  list: {\n    border: 'solid 1px lightgray',\n    borderRadius: 3,\n    marginTop: 10,\n    maxHeight: 300,\n    overflow: 'auto',\n  }\n});\n\nconst ListItems = ({ onClick, selected = null }) => LIGHTBARS.map(lightbar => (\n  <ListItem\n    selected={ selected?.model === lightbar.model }\n    key={lightbar.model}\n    onClick={() => onClick(lightbar)}\n    button\n  >\n    <ListItemText\n      primary={lightbar.model}\n      secondary={`Front ${lightbar.front} / Rear ${lightbar.rear}`}\n    />\n  </ListItem>\n));\n\nfunction LightbarList() {\n  const classes = useStyles();\n  const selectedModel = useSelector(getLightbar);\n  console.log(selectedModel);\n  const dispatch = useDispatch();\n  const onClick = (model) => dispatch(selectLightbar(model));\n\n  return (\n    <List className={classes.list} >\n      <ListItems\n        onClick={onClick}\n        selected={selectedModel}\n      />\n    </List>\n  );\n}\n\nexport default LightbarList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport {makeStyles, Typography, CardContent, CardActions, Button} from '@material-ui/core';\nimport LightbarList from './lightbar-list';\nimport {useSelector} from 'react-redux';\nimport {getLightbar} from './lightbar-selector-slice';\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    justifyContent: 'center',\n    minHeight: 400,\n    marginTop: 20,\n  },\n  card: {\n    width: 500,\n  },\n  subtitle: {\n    fontSize: 14,\n  },\n  button: {\n    justifyContent: 'flex-end',\n  },\n})\n\nexport function LightbarSelector() {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedLightbar = useSelector(getLightbar);\n  const routeToLightbar = () => history.push('/lightbar');\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography variant=\"h6\">\n            Lightbars\n          </Typography>\n          <Typography className={classes.subtitle}>\n            Select a lightbar model to configure\n          </Typography>\n          <LightbarList />\n        </CardContent>\n          <CardActions\n              className={classes.button}\n          >\n            <Button\n              color=\"primary\"\n              disabled={!selectedLightbar}\n              variant=\"contained\"\n              onClick={routeToLightbar}\n            >\n              Start Configurator\n            </Button>\n          </CardActions>\n      </Card>\n    </div>\n  );\n}\n","export const toHex = (value) => {\n  let hex = Number(value).toString(16);\n  if (hex.length < 2) {\n    hex = '0' + hex;\n  }\n\n  return hex;\n}\n\nexport const rgbToHex = (value) =>\n  Object.values(value).map(v => toHex(v)).join('');\n","import React, {useRef, useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Stage, Layer, Rect, Text } from 'react-konva';\n\nimport { rgbToHex } from '../../app/utils';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: props => props.width ? 'auto' : 200,\n    justifyContent: 'center',\n    marginLeft: 10,\n    maxWidth: 750,\n    minWidth: props => props.width || 500,\n    width: props => props.width || '100%',\n  },\n});\n\nfunction LightbarPreview({ lights = [], onClick, selectedLight, title, width }) {\n  const classes = useStyles({ width });\n  const containerRef = useRef();\n\n  if (!lights.length) {\n    return null;\n  }\n\n  const front = lights.slice(0, (lights.length - 6) / 2);\n  const rear = lights.slice(front.length + 3, -3);\n  const originalWidth = (57 * 2) + (front.length * 45);\n  const scale = (width || originalWidth) / originalWidth;\n  const lightbarWidth = front.length * (45 * scale);\n  const shadowBlur = 5 * scale;\n\n  // TODO it doesn't work properly\n  // useEffect(() => {\n  //   if (containerRef.current.offsetWidth !== divWidth\n  //     && containerRef.current.offsetWidth <= 750) {\n  //       setDivWidth(containerRef.current.offsetWidth);\n  //     }\n  //   },\n  // );\n  \n  const onLightClick = (id) => () => onClick(id);\n\n  const getStrokeColor = (id) => selectedLight === id ? 'red' : null;\n\n  const getColor = ({r, g, b}) => `#${rgbToHex({r, g, b})}`;\n\n  return (\n    <div ref={containerRef} className={classes.root}>\n      <Stage width={originalWidth * scale} height={200 * scale}>\n        <Layer x={57 * scale}>\n          {\n            front.map((l, index) =>\n              <Rect\n                key={index}\n                x={45 * index * scale}\n                y={20 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(l.color)}\n                shadowBlur={shadowBlur}\n                cornerRadius={5}\n                onClick={onLightClick(index)}\n                stroke={getStrokeColor(index)}\n              />\n            )\n          }\n        </Layer>\n        <Layer rotation={-180} x={(57 * 2 * scale) + lightbarWidth} y={184 * scale}>\n          <Rect\n            x={58 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 2)}\n            stroke={getStrokeColor(front.length + 2)}\n          />\n          <Rect\n            x={30 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length + 1].color)}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(front.length + 1)}\n            stroke={getStrokeColor(front.length + 1)}\n          />\n          <Rect\n            x={30 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[front.length].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(front.length)}\n            stroke={getStrokeColor(front.length)}\n          />\n        </Layer>\n        <Layer x={57 * scale}>\n          {\n            rear.map((l, index) =>\n              <Rect\n                key={index}\n                x={45 * index * scale}\n                y={140 * scale}\n                width={40 * scale}\n                height={24 * scale}\n                fill={getColor(lights[lights.length - 4 - index].color)}\n                shadowBlur={shadowBlur}\n                cornerRadius={5}\n                onClick={onLightClick(lights.length - 4 - index)}\n                stroke={getStrokeColor(lights.length - 4 - index)}\n              />\n            )\n          }\n        </Layer>\n        <Layer>\n          <Rect\n            x={55 * scale}\n            y={44 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 1].color)}\n            shadowBlur={shadowBlur}\n            rotation={135}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 1)}\n            stroke={getStrokeColor(lights.length - 1)}\n          />\n          <Rect\n            x={27 * scale}\n            y={73 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 2].color)}\n            shadowBlur={shadowBlur}\n            rotation={90}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 2)}\n            stroke={getStrokeColor(lights.length - 2)}\n          />\n          <Rect\n            x={27 * scale}\n            y={113 * scale}\n            width={40 * scale}\n            height={24 * scale}\n            fill={getColor(lights[lights.length - 3].color)}\n            shadowBlur={shadowBlur}\n            rotation={45}\n            cornerRadius={5}\n            onClick={onLightClick(lights.length - 3)}\n            stroke={getStrokeColor(lights.length - 3)}\n          />\n          </Layer>\n      </Stage>\n    </div>\n  );\n}\n\nexport default LightbarPreview;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ChromePicker } from 'react-color'\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    margin: '-50px 40px',\n    zIndex: 2,\n  },\n});\n\nconst ColorPicker = ({\n  value,\n  onClick,\n  onChange\n}) => {\n  const classes = useStyles();\n\n  return (\n  <div className={classes.root}>\n    <div style={{ position: 'absolute', zIndex: '2' }}>\n      <div\n        style={{ position: 'fixed', top: '0px', right: '0px', bottom: '0px', left: '0px' }}\n        onClick={onClick}\n      />\n      <ChromePicker\n        color={value}\n        onChange={onChange}\n      />\n    </div>\n  </div>\n  );\n}\n\nColorPicker.propTypes = {\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func\n}\n\nexport default ColorPicker\n","import React, {useState} from 'react';\nimport { Card, CardContent, CardHeader, TextField, Typography, makeStyles, Button } from '@material-ui/core';\nimport {blue} from '@material-ui/core/colors';\n\nimport ColorPicker from './color-picker';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400,\n    maxWidth: 500,\n  },\n  card: {},\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  cardContent: {},\n  colorInfo: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  colorView: {\n    width: 25,\n    height: 25,\n    backgroundColor: prop => `rgb(${Object.values(prop.color)})`,\n  }\n});\n\nfunction LightbarSetting({ config, onChange }) {\n  const classes = useStyles({ color: config?.color || { r: 255, g: 255, b: 255 } });\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onValueChange = ({ target }) => {\n    console.log(target.value);\n    onChange({\n      color: {\n        ...config?.color,\n        [target.name]: +target.value >= 0 && +target.value <= 255 ?\n          target.value.trim()\n          : config?.color[target.name]\n      }\n    });\n  };\n\n  const onColorPickerChange = (color) => onChange({\n    color: color.rgb,\n  });\n\n  const setColorPickerState = () => setShowColorPicker(!showColorPicker);\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          className={classes.cardHeader}\n          title=\"Set the color\"\n        />\n        <CardContent className={classes.cardContent}>\n          { !!config ?\n            <div className={classes.colorInfo}>\n              <TextField\n                label=\"Red\"\n                inputProps={{ max: 255, min: 0 }}\n                name=\"r\"\n                onChange={onValueChange}\n                size=\"small\"\n                type=\"number\"\n                value={config?.color?.r || 255}\n                variant=\"outlined\"\n              />\n              <TextField\n                label=\"Green\"\n                inputProps={{ max: 255, min: 0 }}\n                name=\"g\"\n                onChange={onValueChange}\n                size=\"small\"\n                type=\"number\"\n                value={config?.color?.g || 255}\n                variant=\"outlined\"\n              />\n              <TextField\n                label=\"Blue\"\n                inputProps={{ max: 255, min: 0 }}\n                name=\"b\"\n                onChange={onValueChange}\n                size=\"small\"\n                type=\"number\"\n                value={config?.color?.b || 255}\n                variant=\"outlined\"\n              />\n              <Button\n                color=\"default\"\n                onClick={setColorPickerState}\n                variant=\"contained\"\n              >\n                <span className={classes.colorView} />\n              </Button>\n              {\n                showColorPicker &&\n                  <ColorPicker\n                    value={config?.color}\n                    onClick={setColorPickerState}\n                    onChange={onColorPickerChange}\n                  />\n              }\n            </div>\n            :\n            <Typography variant=\"h6\">\n              Please select a light module from the lightbar preview to set the color.\n            </Typography>\n          }\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default LightbarSetting;\n","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  lightbar: null,\n  cycles: [],\n  selectedCycle: 0,\n  selectedLight: 0,\n};\n\nconst getDefaultLights = (lightbar) =>\n  [...Array(lightbar.front+lightbar.rear+6).keys()].map(i => ({\n    color: {\n      r: 255,\n      g: 255,\n      b: 255,\n    },\n  }));\n\nexport const slice = createSlice({\n  name: \"lightbar\",\n  initialState,\n  reducers: {\n    setLightbar: (state, action) => ({\n        ...initialState,\n        lightbar: action.payload,\n    }),\n    setSelectedCycle: (state, action) => { state.selectedCycle = action.payload; },\n    setSelectedLight: (state, action) => { state.selectedLight = action.payload; },\n    addCycle: (state, action) => {\n      state.cycles.push({\n        lights: action.payload || getDefaultLights(state.lightbar)\n      });\n    },\n    deleteCycle: (state, action) => {\n      state.cycles.splice(action.payload, 1);\n    },\n    setLightSetting: (state, action) => {\n      state.cycles[state.selectedCycle]\n        .lights[state.selectedLight] = action.payload;\n    },\n    setInitialState: (state) => {\n      state = slice.initialState;\n    },\n  }\n});\n\nexport const {\n  setLightbar,\n  setSelectedCycle,\n  setSelectedLight,\n  addCycle,\n  deleteCycle,\n  setLightSetting,\n  setInitialState,\n} = slice.actions;\n\nexport const getLightbar = (state) => state.lightbar.lightbar;\nexport const getCycles = (state) => state.lightbar.cycles;\nexport const getSelectedCycle = (state) => state.lightbar.selectedCycle;\nexport const getSelectedLight = (state) => state.lightbar.selectedLight;\n\nexport default slice.reducer;\n","import React from 'react';\nimport { List, makeStyles, ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {getCycles, getSelectedCycle, setSelectedCycle, deleteCycle} from '../ligther-slice';\nimport LightbarPreview from '../../LightbarPreview';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflow: 'auto',\n    maxHeight: 400,\n  },\n  item: {\n    height: 75,\n  }\n});\n\nconst Cycle = ({\n  className,\n  id,\n  lights,\n  onClick,\n  onDelete,\n  selected\n}) => (\n  <ListItem\n    alignItems=\"center\"\n    className={className}\n    selected={selected}\n    onClick={onClick}\n    button>\n    <ListItemText \n      primary={ `Cycle #${id + 1}` }\n    />\n    <LightbarPreview lights={lights} width={(lights.length - 6) * 10} />\n    <ListItemSecondaryAction>\n      <IconButton\n        arial-label=\"delete\"\n        edge=\"end\"\n        onClick={onDelete}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n\nfunction CycleList() {\n  const classes = useStyles();\n  const cycles = useSelector(getCycles);\n  const selectedCycle = useSelector(getSelectedCycle);\n  const dispatch = useDispatch();\n\n  const onClick = (id) => () => dispatch(setSelectedCycle(id));\n  const onDelete = (id) => () => dispatch(deleteCycle(id));\n\n  return (\n    <List className={classes.root}>\n      {\n        cycles.map((c, i) => <Cycle\n          className={classes.item}\n          key={i}\n          id={i}\n          lights={c.lights}\n          onClick={onClick(i)}\n          onDelete={onDelete(i)}\n          selected={i === selectedCycle}\n        />)\n      }\n    </List>\n  );\n}\n\nexport default CycleList;\n","import React from 'react';\nimport { Card, CardContent, IconButton, makeStyles, CardHeader } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { blue } from '@material-ui/core/colors';\n\nimport CycleList from './cycle-list';\nimport {useDispatch} from 'react-redux';\nimport {addCycle} from '../ligther-slice';\n\nconst useStyles = makeStyles({\n  action: {\n    color: '#ffffff',\n  },\n  card: {\n  },\n  cardHeader: {\n    color: '#ffffff',\n    backgroundColor: blue[500],\n  },\n  root: {\n  },\n});\n\nfunction Cycles() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const onclick = () => dispatch(addCycle());\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.cardHeader}\n          action={\n            <IconButton\n              arial-label=\"Add a new cycle\"\n              className={classes.action}\n              onClick={onclick}\n            >\n              <AddIcon />\n            </IconButton>\n          }\n          title=\"Cycles\"\n        />\n        <CardContent>\n          <CycleList />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default Cycles;\n","import React, {useEffect} from 'react';\nimport Konva from 'konva';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport LightbarPreview from '../LightbarPreview';\nimport LighbarSetting from './LightbarSetting';\nimport Cycles from './Cycles';\nimport {getLightbar} from '../LightbarSelector/lightbar-selector-slice';\nimport {getSelectedCycle, setLightbar, addCycle, getCycles, setSelectedLight, getSelectedLight, setLightSetting} from './ligther-slice';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 20,\n    padding: '0 16px',\n    alignContent: 'space-between',\n  },\n  cycles: {\n    minWidth: 400,\n    flexGrow: 1,\n    bottom: 0,\n  },\n  details: {\n    flexGrow: 2,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'stretch',\n    padding: '0 10px',\n  },\n});\n\nfunction Lightbar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selectedModel = useSelector(getLightbar)\n  const selectedCycle = useSelector(getSelectedCycle);\n  const selectedLight = useSelector(getSelectedLight);\n  const cycles = useSelector(getCycles);\n  const lightbar = useSelector(getLightbar);\n\n  const selectLigh = (id) => dispatch(setSelectedLight(id));\n  const setLightChange = (change) => dispatch(setLightSetting(change));\n\n  useEffect(() => {\n    dispatch(setLightbar(selectedModel));\n  }, []);\n\n  useEffect(() => {\n    !!lightbar && dispatch(addCycle());\n  }, [lightbar]);\n\n  if (!selectedModel) {\n    return <Redirect to='/' />;\n  }\n\n  console.log(selectedCycle);\n\n  return (\n    <>\n    { !!lightbar &&\n    <div className={classes.root}>\n      <div className={classes.cycles} >\n        <Cycles />\n      </div>\n      <div className={classes.details}>\n        <LightbarPreview\n          lights={cycles[selectedCycle]?.lights}\n          onClick={selectLigh}\n          selectedLight={selectedLight}\n          title={selectedModel.model}\n        />\n            <LighbarSetting\n              config={cycles[selectedCycle]?.lights[selectedLight]}\n              onChange={setLightChange}\n            />\n       </div>\n    </div>\n    }\n    </>\n  );\n}\n\nexport default Lightbar;\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Counter } from './features/counter/Counter';\r\nimport './App.css';\r\nimport {AppBar, Toolbar, IconButton, makeStyles, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {LightbarSelector} from './features/LightbarSelector';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Lightbar from './features/Lightbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}))\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.root} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            DandR Electronic Lighbar Configurator\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n        <Switch>\r\n          <Route path=\"/lightbar\">\r\n            <Lightbar />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <LightbarSelector/>\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport lightbarSelectorReducer from '../features/LightbarSelector/lightbar-selector-slice';\r\nimport lightbarReducer from '../features/Lightbar/ligther-slice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    lightbarSelector: lightbarSelectorReducer,\r\n    lightbar: lightbarReducer,\r\n  },\r\n});\r\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme();\n\nexport default theme;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport theme from './app/theme';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}